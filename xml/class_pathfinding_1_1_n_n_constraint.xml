<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="class_pathfinding_1_1_n_n_constraint" kind="class" prot="public">
    <compoundname>Pathfinding::NNConstraint</compoundname>
    <derivedcompoundref refid="class_pathfinding_1_1_path_n_n_constraint" prot="public" virt="non-virtual">PathNNConstraint</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1a5008f5aaa9ef50b1510e309dce9205d7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int area</definition>
        <argsstring></argsstring>
        <name>area</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Area ID to constrain to. </para>        </briefdescription>
        <detaileddescription>
<para>Will not affect anything if less than 0 (zero) or if <ref refid="class_pathfinding_1_1_n_n_constraint_1ae972a9b3f22978d92d35850288ee666a" kindref="member">constrainArea</ref> is false </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="154" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="154" bodyend="-1"/>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" compoundref="astarclasses_8cs" startline="176" endline="188">NNConstraint.Suitable</referencedby>
        <referencedby refid="class_pathfinding_1_1_path_n_n_constraint_1a3ed990b84b616fb281b377fd063c91a4" compoundref="astarclasses_8cs" startline="233" endline="239">PathNNConstraint.SetStart</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1ae972a9b3f22978d92d35850288ee666a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool constrainArea</definition>
        <argsstring></argsstring>
        <name>constrainArea</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Only treat nodes in the area <ref refid="class_pathfinding_1_1_n_n_constraint_1a5008f5aaa9ef50b1510e309dce9205d7" kindref="member">area</ref> as suitable. </para>        </briefdescription>
        <detaileddescription>
<para>Does not affect anything if <ref refid="class_pathfinding_1_1_n_n_constraint_1a5008f5aaa9ef50b1510e309dce9205d7" kindref="member">area</ref> is less than 0 (zero) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="153" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="153" bodyend="-1"/>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" compoundref="astarclasses_8cs" startline="176" endline="188">NNConstraint.Suitable</referencedby>
        <referencedby refid="class_pathfinding_1_1_path_n_n_constraint_1a3ed990b84b616fb281b377fd063c91a4" compoundref="astarclasses_8cs" startline="233" endline="239">PathNNConstraint.SetStart</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1aea0c9d05190ca41a290ff4ef197c7d84" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool constrainDistance</definition>
        <argsstring></argsstring>
        <name>constrainDistance</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Constrain distance to node. </para>        </briefdescription>
        <detaileddescription>
<para>Uses distance from <ref refid="class_astar_path_1aa5b496fb1f393abb6896edc7777397b0" kindref="member">AstarPath.maxNearestNodeDistance</ref>. If this is false, it will completely ignore the distance limit. <simplesect kind="note"><para>This value is not used in this class, it is used by the <ref refid="class_astar_path_1ac28f08f7bddc85579649b5f6ebe57cd4" kindref="member">AstarPath.GetNearest</ref> function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="167" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="167" bodyend="-1"/>
        <referencedby refid="class_astar_path_1a1c53f348e7d3e9a62ad2ff4dafa7ebb1" compoundref="_astar_path_8cs" startline="2502" endline="2579">AstarPath.GetNearest</referencedby>
        <referencedby refid="class_pathfinding_1_1_nav_graph_1af25bf6726c21398948bd3e9293afd3f0" compoundref="_base_8cs" startline="130" endline="168">NavGraph.GetNearest</referencedby>
        <referencedby refid="class_pathfinding_1_1_nav_mesh_graph_1a3fe8b1223181598c7b7c1609766f7211" compoundref="_nav_mesh_generator_8cs" startline="240" endline="343">NavMeshGraph.GetNearestForceBoth</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1ad87e9e78f3514d557bb5b133abde9aaf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool constrainTags</definition>
        <argsstring></argsstring>
        <name>constrainTags</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Sets if tags should be constrained. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="159" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="159" bodyend="-1"/>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" compoundref="astarclasses_8cs" startline="176" endline="188">NNConstraint.Suitable</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1ae3e24284215bb8fe90f9fbb2b643c31a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool constrainWalkability</definition>
        <argsstring></argsstring>
        <name>constrainWalkability</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Only treat nodes with the walkable flag set to the same as <ref refid="class_pathfinding_1_1_n_n_constraint_1a0ea3fe499578e27285c246dbf6cb20f7" kindref="member">walkable</ref> as suitable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="156" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="156" bodyend="-1"/>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" compoundref="astarclasses_8cs" startline="176" endline="188">NNConstraint.Suitable</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1a63a785ae519f012d295916dd9969170c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int graphMask</definition>
        <argsstring></argsstring>
        <name>graphMask</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Graphs treated as valid to search on. </para>        </briefdescription>
        <detaileddescription>
<para>This is a bitmask meaning that bit 0 specifies whether or not the first graph in the graphs list should be able to be included in the search, bit 1 specifies whether or not the second graph should be included and so on. <programlisting><codeline><highlight class="comment">//Enables<sp/>the<sp/>first<sp/>and<sp/>third<sp/>graphs<sp/>to<sp/>be<sp/>included,<sp/>but<sp/>not<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">myNNConstraint.graphMask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
</programlisting> <simplesect kind="note"><para>This does only affect which nodes are returned from a GetNearest call, if an invalid graph is linked to from a valid graph, it might be searched anyway.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_astar_path_1ac28f08f7bddc85579649b5f6ebe57cd4" kindref="member">AstarPath.GetNearest</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="151" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="151" bodyend="-1"/>
        <referencedby refid="class_seeker_1a4818ea8ea53d1f1b00243db16dcf308e" compoundref="_seeker_8cs" startline="405" endline="455">Seeker.StartPath</referencedby>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a4c0ed407f9b723208a30b4bf6eb4d1ee" compoundref="astarclasses_8cs" startline="171" endline="173">NNConstraint.SuitableGraph</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1ae5a306487e101c6a14ebe525b492ffd0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tags</definition>
        <argsstring></argsstring>
        <name>tags</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para><ref refid="namespace_pathfinding_1_1_nodes" kindref="compound">Nodes</ref> which have any of these tags set are suitable. </para>        </briefdescription>
        <detaileddescription>
<para>This is a bitmask, i.e bit 0 indicates that tag 0 is good, bit 3 indicates tag 3 is good etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="160" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="160" bodyend="-1"/>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" compoundref="astarclasses_8cs" startline="176" endline="188">NNConstraint.Suitable</referencedby>
        <referencedby refid="class_pathfinding_1_1_a_b_path_1ab2bb7322e99c2d4acfad288364f7c690" compoundref="_a_b_path_8cs" startline="161" endline="232">ABPath.Prepare</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_n_n_constraint_1a0ea3fe499578e27285c246dbf6cb20f7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool walkable</definition>
        <argsstring></argsstring>
        <name>walkable</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>What must the walkable flag on a node be for it to be suitable. </para>        </briefdescription>
        <detaileddescription>
<para>Does not affect anything if <ref refid="class_pathfinding_1_1_n_n_constraint_1ae3e24284215bb8fe90f9fbb2b643c31a" kindref="member">constrainWalkability</ref> if false </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="157" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="157" bodyend="-1"/>
        <referencedby refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" compoundref="astarclasses_8cs" startline="176" endline="188">NNConstraint.Suitable</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_pathfinding_1_1_n_n_constraint_1a9ed670e24a72417804212f42db039aaa" prot="public" static="yes" readable="no" writable="no" gettable="yes" settable="no">
        <type><ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref></type>
        <definition>NNConstraint Default</definition>
        <argsstring></argsstring>
        <name>Default</name>
        <briefdescription>
<para>The default <ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to new <ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref> (). This <ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref> has settings which works for most, it only finds walkable nodes and it constrains distance set by A* Inspector -&gt; Settings -&gt; Max Nearest Node Distance </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="198" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_pathfinding_1_1_n_n_constraint_1a769a9ff45dd76b15d1f50c89e50702eb" prot="public" static="yes" readable="no" writable="no" gettable="yes" settable="no">
        <type><ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref></type>
        <definition>NNConstraint None</definition>
        <argsstring></argsstring>
        <name>None</name>
        <briefdescription>
<para>Returns a constraint which will not filter the results. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="211" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="201" bodyend="-1"/>
        <referencedby refid="class_astar_path_1ac28f08f7bddc85579649b5f6ebe57cd4" compoundref="_astar_path_8cs" startline="2484" endline="2486">AstarPath.GetNearest</referencedby>
        <referencedby refid="class_pathfinding_1_1_nav_graph_1ac28f08f7bddc85579649b5f6ebe57cd4" compoundref="_base_8cs" startline="115" endline="117">NavGraph.GetNearest</referencedby>
        <referencedby refid="class_pathfinding_1_1_grid_graph_1a83885fff18b5b16a4169dd3c03cb2c75" compoundref="_grid_generator_8cs" startline="1846" endline="1960">GridGraph.SnappedLinecast</referencedby>
        <referencedby refid="class_pathfinding_1_1_nav_mesh_graph_1a09e43f342abae49a7beec8b0af71fad9" compoundref="_nav_mesh_generator_8cs" startline="438" endline="440">NavMeshGraph.Linecast</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pathfinding_1_1_n_n_constraint_1a591a2472f3660414a53974595590a9b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NNConstraint</definition>
        <argsstring>()</argsstring>
        <name>NNConstraint</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Equals to the property <ref refid="class_pathfinding_1_1_n_n_constraint_1a9ed670e24a72417804212f42db039aaa" kindref="member">Default</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="214" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="214" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Suitable</definition>
        <argsstring>(GraphNode node)</argsstring>
        <name>Suitable</name>
        <param>
          <type><ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the node conforms to this <ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref>&apos;s rules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="176" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="176" bodyend="188"/>
        <references refid="class_pathfinding_1_1_n_n_constraint_1ae3e24284215bb8fe90f9fbb2b643c31a" compoundref="astarclasses_8cs" startline="156">NNConstraint.constrainWalkability</references>
        <references refid="class_pathfinding_1_1_n_n_constraint_1a0ea3fe499578e27285c246dbf6cb20f7" compoundref="astarclasses_8cs" startline="157">NNConstraint.walkable</references>
        <references refid="class_pathfinding_1_1_n_n_constraint_1ae972a9b3f22978d92d35850288ee666a" compoundref="astarclasses_8cs" startline="153">NNConstraint.constrainArea</references>
        <references refid="class_pathfinding_1_1_n_n_constraint_1a5008f5aaa9ef50b1510e309dce9205d7" compoundref="astarclasses_8cs" startline="154">NNConstraint.area</references>
        <references refid="class_pathfinding_1_1_n_n_constraint_1ad87e9e78f3514d557bb5b133abde9aaf" compoundref="astarclasses_8cs" startline="159">NNConstraint.constrainTags</references>
        <references refid="class_pathfinding_1_1_n_n_constraint_1ae5a306487e101c6a14ebe525b492ffd0" compoundref="astarclasses_8cs" startline="160">NNConstraint.tags</references>
        <referencedby refid="class_astar_path_1a1c53f348e7d3e9a62ad2ff4dafa7ebb1" compoundref="_astar_path_8cs" startline="2502" endline="2579">AstarPath.GetNearest</referencedby>
        <referencedby refid="class_pathfinding_1_1_nav_graph_1af25bf6726c21398948bd3e9293afd3f0" compoundref="_base_8cs" startline="130" endline="168">NavGraph.GetNearest</referencedby>
        <referencedby refid="class_pathfinding_1_1_nav_mesh_graph_1a3fe8b1223181598c7b7c1609766f7211" compoundref="_nav_mesh_generator_8cs" startline="240" endline="343">NavMeshGraph.GetNearestForceBoth</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_n_n_constraint_1a4c0ed407f9b723208a30b4bf6eb4d1ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SuitableGraph</definition>
        <argsstring>(int graphIndex, NavGraph graph)</argsstring>
        <name>SuitableGraph</name>
        <param>
          <type>int</type>
          <declname>graphIndex</declname>
        </param>
        <param>
          <type><ref refid="class_pathfinding_1_1_nav_graph" kindref="compound">NavGraph</ref></type>
          <declname>graph</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the graph conforms to this <ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound">NNConstraint</ref>&apos;s rules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="171" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="171" bodyend="173"/>
        <references refid="class_pathfinding_1_1_n_n_constraint_1a63a785ae519f012d295916dd9969170c" compoundref="astarclasses_8cs" startline="151">NNConstraint.graphMask</references>
        <referencedby refid="class_astar_path_1a1c53f348e7d3e9a62ad2ff4dafa7ebb1" compoundref="_astar_path_8cs" startline="2502" endline="2579">AstarPath.GetNearest</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Nearest node constraint. </para>    </briefdescription>
    <detaileddescription>
<para>Constrains which nodes will be returned by the GetNearest function </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2481">
        <label>NNConstraint</label>
        <link refid="class_pathfinding_1_1_n_n_constraint"/>
      </node>
      <node id="2482">
        <label>PathNNConstraint</label>
        <link refid="class_pathfinding_1_1_path_n_n_constraint"/>
        <childnode refid="2481" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" line="139" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/astarclasses.cs" bodystart="139" bodyend="216"/>
    <listofallmembers>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a5008f5aaa9ef50b1510e309dce9205d7" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>area</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1ae972a9b3f22978d92d35850288ee666a" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>constrainArea</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1aea0c9d05190ca41a290ff4ef197c7d84" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>constrainDistance</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1ad87e9e78f3514d557bb5b133abde9aaf" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>constrainTags</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1ae3e24284215bb8fe90f9fbb2b643c31a" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>constrainWalkability</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a9ed670e24a72417804212f42db039aaa" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>Default</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a63a785ae519f012d295916dd9969170c" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>graphMask</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a591a2472f3660414a53974595590a9b2" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>NNConstraint</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a769a9ff45dd76b15d1f50c89e50702eb" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>None</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a2e1e6259eb261b385da3f47ad999ae68" prot="public" virt="virtual"><scope>Pathfinding::NNConstraint</scope><name>Suitable</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a4c0ed407f9b723208a30b4bf6eb4d1ee" prot="public" virt="virtual"><scope>Pathfinding::NNConstraint</scope><name>SuitableGraph</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1ae5a306487e101c6a14ebe525b492ffd0" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>tags</name></member>
      <member refid="class_pathfinding_1_1_n_n_constraint_1a0ea3fe499578e27285c246dbf6cb20f7" prot="public" virt="non-virtual"><scope>Pathfinding::NNConstraint</scope><name>walkable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
