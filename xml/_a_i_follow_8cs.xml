<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_a_i_follow_8cs" kind="file">
    <compoundname>AIFollow.cs</compoundname>
    <innerclass refid="class_a_i_follow" prot="public">AIFollow</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">[RequireComponent<sp/>(typeof(<ref refid="class_seeker" kindref="compound" tooltip="Handles path calls for a single unit.">Seeker</ref>))]</highlight></codeline>
<codeline lineno="8"><highlight class="normal">[RequireComponent<sp/>(typeof(CharacterController))]</highlight></codeline>
<codeline lineno="9" refid="class_a_i_follow" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_a_i_follow" kindref="compound" tooltip="Example AI.">AIFollow</ref><sp/>:<sp/>MonoBehaviour<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12" refid="class_a_i_follow_1a8a24b37582e07ee23646b165d54fa600" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_a_i_follow_1a8a24b37582e07ee23646b165d54fa600" kindref="member" tooltip="Target to move to.">target</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15" refid="class_a_i_follow_1a19f304392630a404236b0df6896bca75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a19f304392630a404236b0df6896bca75" kindref="member" tooltip="How often to search for a new path.">repathRate</ref><sp/>=<sp/>0.1F;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="class_a_i_follow_1a0941ff8306fbcea227b37e80bb7b86ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a0941ff8306fbcea227b37e80bb7b86ce" kindref="member" tooltip="The minimum distance to a waypoint to consider it as &amp;quot;reached&amp;quot;.">pickNextWaypointDistance</ref><sp/>=<sp/>1F;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="class_a_i_follow_1a0439b1baabfe2c65d47ec2273b224deb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a0439b1baabfe2c65d47ec2273b224deb" kindref="member" tooltip="The minimum distance to the end point of a path to consider it &amp;quot;reached&amp;quot; (multiplied with pickNextWay...">targetReached</ref><sp/>=<sp/>0.2F;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="class_a_i_follow_1a7f7e4724cf57d59513b39c5ecc81adc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member" tooltip="Units per second.">speed</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="class_a_i_follow_1a36389ec100eb0f432833a0512e25d4a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a36389ec100eb0f432833a0512e25d4a6" kindref="member" tooltip="How fast the AI can turn around.">rotationSpeed</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawGizmos<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="class_a_i_follow_1a02f6188029045e6a1f08b82ab58028ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a02f6188029045e6a1f08b82ab58028ed" kindref="member" tooltip="Should paths be searched for.">canSearch</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="class_a_i_follow_1a3fe2c59b75abe53721d72ccca45ff013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a3fe2c59b75abe53721d72ccca45ff013" kindref="member" tooltip="Can it move.">canMove</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_seeker" kindref="compound" tooltip="Handles path calls for a single unit.">Seeker</ref><sp/><ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="class_a_i_follow_1ab91b4eac1bea5f77dfeb2635b060ef1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>CharacterController<sp/><ref refid="class_a_i_follow_1ab91b4eac1bea5f77dfeb2635b060ef1b" kindref="member" tooltip="CharacterController which handles movement.">controller</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="class_a_i_follow_1a2c5821ed06775ee116294c5b70ab3bd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_navmesh_controller" kindref="compound" tooltip="CharacterController helper for use on navmeshes.">NavmeshController</ref><sp/><ref refid="class_a_i_follow_1a2c5821ed06775ee116294c5b70ab3bd8" kindref="member" tooltip="NavmeshController which handles movement if not null.">navmeshController</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lastPathSearch<sp/>=<sp/>-9999;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pathIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Vector3[]<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="class_a_i_follow_1a07aaf1227e4d645f15e0a964f54ef291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a07aaf1227e4d645f15e0a964f54ef291" kindref="member" tooltip="Use this for initialization.">Start</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref><sp/>=<sp/>GetComponent&lt;Seeker&gt;();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1ab91b4eac1bea5f77dfeb2635b060ef1b" kindref="member" tooltip="CharacterController which handles movement.">controller</ref><sp/>=<sp/>GetComponent&lt;CharacterController&gt;();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a2c5821ed06775ee116294c5b70ab3bd8" kindref="member" tooltip="NavmeshController which handles movement if not null.">navmeshController</ref><sp/>=<sp/>GetComponent&lt;NavmeshController&gt;();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref><sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a6765aee2d082a1a6efe3c1bba5f14cb9" kindref="member" tooltip="Recalculates the path to target.">Repath</ref><sp/>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="class_a_i_follow_1a372de693ad40b3f42839c8ec6ac845f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a372de693ad40b3f42839c8ec6ac845f4" kindref="member" tooltip="Will make the AI give up it&amp;#39;s current path and stop completely.">Reset</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="class_a_i_follow_1a7ae22ebe2fadcf57c6134f70d006d752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a7ae22ebe2fadcf57c6134f70d006d752" kindref="member" tooltip="Called when a path has completed it&amp;#39;s calculation.">OnPathComplete</ref><sp/>(<ref refid="class_pathfinding_1_1_path" kindref="compound" tooltip="Base class for all path types.">Path</ref><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(Time.time-lastPathSearch<sp/>&gt;=<sp/>repathRate)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Repath<sp/>();</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine<sp/>(<ref refid="class_a_i_follow_1a6777f370d2e959160343c85f508c9e80" kindref="member" tooltip="Waits the remaining time until the AI should issue a new path request.">WaitToRepath</ref><sp/>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>path<sp/>didn&apos;t<sp/>succeed,<sp/>don&apos;t<sp/>proceed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.<ref refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" kindref="member" tooltip="If the path failed, this is true.">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>calculated<sp/>path<sp/>as<sp/>a<sp/>Vector3<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref><sp/>=<sp/>p.<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>.ToArray();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>segment<sp/>in<sp/>the<sp/>path<sp/>which<sp/>is<sp/>closest<sp/>to<sp/>the<sp/>AI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>a<sp/>closer<sp/>segment<sp/>hasn&apos;t<sp/>been<sp/>found<sp/>in<sp/>&apos;6&apos;<sp/>iterations,<sp/>break<sp/>because<sp/>it<sp/>is<sp/>unlikely<sp/>to<sp/>find<sp/>any<sp/>closer<sp/>ones<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minDist<sp/>=<sp/>Mathf.Infinity;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>notCloserHits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>.Length-1;i++)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/><ref refid="class_pathfinding_1_1_mathfx" kindref="compound" tooltip="Utility functions for working with numbers, lines and vectors.">Mathfx</ref>.<ref refid="class_pathfinding_1_1_mathfx_1acde7e3b38c9a95ba2df2804b488ca520" kindref="member" tooltip="Returns the squared distance between c and the line a-b.">DistancePointSegmentStrict</ref><sp/>(<ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>[i],<ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>[i+1],<ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>minDist)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notCloserHits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIndex<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notCloserHits<sp/>&gt;<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="class_a_i_follow_1a6777f370d2e959160343c85f508c9e80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_a_i_follow_1a6777f370d2e959160343c85f508c9e80" kindref="member" tooltip="Waits the remaining time until the AI should issue a new path request.">WaitToRepath</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeLeft<sp/>=<sp/><ref refid="class_a_i_follow_1a19f304392630a404236b0df6896bca75" kindref="member" tooltip="How often to search for a new path.">repathRate</ref><sp/>-<sp/>(Time.time-lastPathSearch);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WaitForSeconds<sp/>(timeLeft);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a6765aee2d082a1a6efe3c1bba5f14cb9" kindref="member" tooltip="Recalculates the path to target.">Repath</ref><sp/>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="class_a_i_follow_1a17a237457e57625296e6b24feb19c60a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a17a237457e57625296e6b24feb19c60a" kindref="member" tooltip="Stops the AI.">Stop</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a3fe2c59b75abe53721d72ccca45ff013" kindref="member" tooltip="Can it move.">canMove</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a02f6188029045e6a1f08b82ab58028ed" kindref="member" tooltip="Should paths be searched for.">canSearch</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="class_a_i_follow_1a8af8fb637c7ae9d71a23bf3ac80d3c86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a8af8fb637c7ae9d71a23bf3ac80d3c86" kindref="member" tooltip="Resumes walking and path searching the AI.">Resume</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a3fe2c59b75abe53721d72ccca45ff013" kindref="member" tooltip="Can it move.">canMove</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a02f6188029045e6a1f08b82ab58028ed" kindref="member" tooltip="Should paths be searched for.">canSearch</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="class_a_i_follow_1a6765aee2d082a1a6efe3c1bba5f14cb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a6765aee2d082a1a6efe3c1bba5f14cb9" kindref="member" tooltip="Recalculates the path to target.">Repath</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastPathSearch<sp/>=<sp/>Time.time;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="class_a_i_follow_1a8a24b37582e07ee23646b165d54fa600" kindref="member" tooltip="Target to move to.">target</ref><sp/>==<sp/>null<sp/>||<sp/>!<ref refid="class_a_i_follow_1a02f6188029045e6a1f08b82ab58028ed" kindref="member" tooltip="Should paths be searched for.">canSearch</ref><sp/>||<sp/>!<ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref>.<ref refid="class_seeker_1a6439db113c7c15c83710c55c8e57af38" kindref="member" tooltip="Is the current path done calculating.">IsDone</ref><sp/>())<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine<sp/>(<ref refid="class_a_i_follow_1a6777f370d2e959160343c85f508c9e80" kindref="member" tooltip="Waits the remaining time until the AI should issue a new path request.">WaitToRepath</ref><sp/>());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>i=0;i&lt;1000;i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MultithreadPath<sp/>mp<sp/>=<sp/>new<sp/>MultithreadPath<sp/>(transform.position,target.position,null);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Path<sp/>p<sp/>=<sp/>new<sp/>Path<sp/>(transform.position,target.position,null);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>AstarPath.StartPath<sp/>(mp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log<sp/>(AstarPath.pathQueue.Count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//StartCoroutine<sp/>(WaitToRepath<sp/>());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ConstantPath<sp/>cpath<sp/>=<sp/>new<sp/>ConstantPath(transform.position,null);</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Must<sp/>be<sp/>set<sp/>to<sp/>avoid<sp/>it<sp/>from<sp/>searching<sp/>towards<sp/>Vector3.zero</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpath.heuristic<sp/>=<sp/>Heuristic.None;</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Here<sp/>you<sp/>set<sp/>how<sp/>far<sp/>it<sp/>should<sp/>search</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpath.maxGScore<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AstarPath.StartPath<sp/>(cpath);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FloodPathTracer<sp/>fpathTrace<sp/>=<sp/>new<sp/>FloodPathTracer<sp/>(transform.position,fpath,null);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//seeker.StartPath<sp/>(fpathTrace,OnPathComplete);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path" kindref="compound" tooltip="Base class for all path types.">Path</ref><sp/>p<sp/>=<sp/><ref refid="class_pathfinding_1_1_a_b_path" kindref="compound" tooltip="Basic path, finds the shortest path from A to B.">ABPath</ref>.<ref refid="class_pathfinding_1_1_a_b_path_1a58d78e505137ad33617197f0a63af464" kindref="member" tooltip="Construct a path with a start and end point.">Construct</ref>(transform.position,<ref refid="class_a_i_follow_1a8a24b37582e07ee23646b165d54fa600" kindref="member" tooltip="Target to move to.">target</ref>.position,null);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref>.<ref refid="class_seeker_1ad9c281f768379478a6a3671a53e09113" kindref="member" tooltip="Call this function to start calculating a path.">StartPath</ref><sp/>(p,<ref refid="class_a_i_follow_1a7ae22ebe2fadcf57c6134f70d006d752" kindref="member" tooltip="Called when a path has completed it&amp;#39;s calculation.">OnPathComplete</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Start<sp/>a<sp/>new<sp/>path<sp/>from<sp/>transform.positon<sp/>to<sp/>target.position,<sp/>return<sp/>the<sp/>result<sp/>to<sp/>the<sp/>function<sp/>OnPathComplete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//seeker.StartPath<sp/>(transform.position,target.position,OnPathComplete);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="class_a_i_follow_1ae0f6260c2ecb18c4671cfffe5180bed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1ae0f6260c2ecb18c4671cfffe5180bed9" kindref="member" tooltip="Start a new path moving to targetPoint.">PathToTarget</ref><sp/>(Vector3<sp/>targetPoint)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastPathSearch<sp/>=<sp/>Time.time;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref><sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Start<sp/>a<sp/>new<sp/>path<sp/>from<sp/>transform.positon<sp/>to<sp/>target.position,<sp/>return<sp/>the<sp/>result<sp/>to<sp/>OnPathComplete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a2cc99ba55c7911c446051a8d9c7afdbb" kindref="member" tooltip="Seeker component which handles pathfinding calls.">seeker</ref>.<ref refid="class_seeker_1ad9c281f768379478a6a3671a53e09113" kindref="member" tooltip="Call this function to start calculating a path.">StartPath</ref><sp/>(transform.position,targetPoint,<ref refid="class_a_i_follow_1a7ae22ebe2fadcf57c6134f70d006d752" kindref="member" tooltip="Called when a path has completed it&amp;#39;s calculation.">OnPathComplete</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190" refid="class_a_i_follow_1a5a454526f37b95fdea833727436b4b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1a5a454526f37b95fdea833727436b4b7a" kindref="member" tooltip="Called when the AI reached the end of path.">ReachedEndOfPath</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>AI<sp/>has<sp/>reached<sp/>the<sp/>end<sp/>of<sp/>the<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="class_a_i_follow_1aec0783b5a136e042adcc47bae4fe5291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1aec0783b5a136e042adcc47bae4fe5291" kindref="member" tooltip="Update is called once per frame.">Update</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref><sp/>==<sp/>null<sp/>||<sp/>pathIndex<sp/>&gt;=<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>.Length<sp/>||<sp/>pathIndex<sp/>&lt;<sp/>0<sp/>||<sp/>!<ref refid="class_a_i_follow_1a3fe2c59b75abe53721d72ccca45ff013" kindref="member" tooltip="Can it move.">canMove</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Change<sp/>target<sp/>to<sp/>the<sp/>next<sp/>waypoint<sp/>if<sp/>the<sp/>current<sp/>one<sp/>is<sp/>close<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>currentWaypoint<sp/>=<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>[pathIndex];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWaypoint.y<sp/>=<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position.y;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((currentWaypoint<sp/>-<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position).sqrMagnitude<sp/>&lt;<sp/><ref refid="class_a_i_follow_1a0941ff8306fbcea227b37e80bb7b86ce" kindref="member" tooltip="The minimum distance to a waypoint to consider it as &amp;quot;reached&amp;quot;.">pickNextWaypointDistance</ref>*<ref refid="class_a_i_follow_1a0941ff8306fbcea227b37e80bb7b86ce" kindref="member" tooltip="The minimum distance to a waypoint to consider it as &amp;quot;reached&amp;quot;.">pickNextWaypointDistance</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIndex++;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathIndex<sp/>&gt;=<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>.Length)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Use<sp/>a<sp/>lower<sp/>pickNextWaypointDistance<sp/>for<sp/>the<sp/>last<sp/>point.<sp/>If<sp/>it<sp/>isn&apos;t<sp/>that<sp/>close,<sp/>then<sp/>decrement<sp/>the<sp/>pathIndex<sp/>to<sp/>the<sp/>previous<sp/>value<sp/>and<sp/>break<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((currentWaypoint<sp/>-<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position).sqrMagnitude<sp/>&lt;<sp/>(pickNextWaypointDistance*<ref refid="class_a_i_follow_1a0439b1baabfe2c65d47ec2273b224deb" kindref="member" tooltip="The minimum distance to the end point of a path to consider it &amp;quot;reached&amp;quot; (multiplied with pickNextWay...">targetReached</ref>)*(pickNextWaypointDistance*targetReached))<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a5a454526f37b95fdea833727436b4b7a" kindref="member" tooltip="Called when the AI reached the end of path.">ReachedEndOfPath</ref><sp/>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathIndex--;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Break<sp/>the<sp/>loop,<sp/>otherwise<sp/>it<sp/>will<sp/>try<sp/>to<sp/>check<sp/>for<sp/>the<sp/>last<sp/>point<sp/>in<sp/>an<sp/>infinite<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWaypoint<sp/>=<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>[pathIndex];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWaypoint.y<sp/>=<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position.y;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>dir<sp/>=<sp/>currentWaypoint<sp/>-<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>towards<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.rotation<sp/>=<sp/>Quaternion.Slerp<sp/>(<ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.rotation,<sp/>Quaternion.LookRotation(dir),<sp/><ref refid="class_a_i_follow_1a36389ec100eb0f432833a0512e25d4a6" kindref="member" tooltip="How fast the AI can turn around.">rotationSpeed</ref><sp/>*<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.eulerAngles<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.eulerAngles.y,<sp/>0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>forwardDir<sp/>=<sp/>transform.forward;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>Forwards<sp/>-<sp/>forwardDir<sp/>is<sp/>already<sp/>normalized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardDir<sp/>=<sp/>forwardDir<sp/>*<sp/><ref refid="class_a_i_follow_1a7f7e4724cf57d59513b39c5ecc81adc8" kindref="member" tooltip="Units per second.">speed</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forwardDir<sp/>*=<sp/>Mathf.Clamp01<sp/>(Vector3.Dot<sp/>(dir.normalized,<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.forward));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_i_follow_1a2c5821ed06775ee116294c5b70ab3bd8" kindref="member" tooltip="NavmeshController which handles movement if not null.">navmeshController</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FALSE</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1a2c5821ed06775ee116294c5b70ab3bd8" kindref="member" tooltip="NavmeshController which handles movement if not null.">navmeshController</ref>.SimpleMove<sp/>(<ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position,forwardDir);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_a_i_follow_1ab91b4eac1bea5f77dfeb2635b060ef1b" kindref="member" tooltip="CharacterController which handles movement.">controller</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_i_follow_1ab91b4eac1bea5f77dfeb2635b060ef1b" kindref="member" tooltip="CharacterController which handles movement.">controller</ref>.SimpleMove<sp/>(forwardDir);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transform.Translate<sp/>(forwardDir*Time.deltaTime,<sp/>Space.World);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="class_a_i_follow_1ac51c75fd06c6783b6553902c86ac9d71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_a_i_follow_1ac51c75fd06c6783b6553902c86ac9d71" kindref="member" tooltip="Draws helper gizmos.">OnDrawGizmos</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!drawGizmos<sp/>||<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref><sp/>==<sp/>null<sp/>||<sp/>pathIndex<sp/>&gt;=<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>.Length<sp/>||<sp/>pathIndex<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>currentWaypoint<sp/>=<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>[pathIndex];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentWaypoint.y<sp/>=<sp/><ref refid="class_a_i_follow_1a79a17507a0e6ad3b0345e0397a4a038f" kindref="member" tooltip="Transform, cached because of performance.">tr</ref>.position.y;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine<sp/>(transform.position,currentWaypoint,Color.blue);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>rad<sp/>=<sp/><ref refid="class_a_i_follow_1a0941ff8306fbcea227b37e80bb7b86ce" kindref="member" tooltip="The minimum distance to a waypoint to consider it as &amp;quot;reached&amp;quot;.">pickNextWaypointDistance</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathIndex<sp/>==<sp/><ref refid="class_a_i_follow_1a4fafa0e82a76ef318e48945416a295bd" kindref="member" tooltip="This is the path the AI is currently following.">path</ref>.Length-1)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rad<sp/>*=<sp/><ref refid="class_a_i_follow_1a0439b1baabfe2c65d47ec2273b224deb" kindref="member" tooltip="The minimum distance to the end point of a path to consider it &amp;quot;reached&amp;quot; (multiplied with pickNextWay...">targetReached</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pP<sp/>=<sp/>currentWaypoint<sp/>+<sp/>rad*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(1,0,0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i=0;i&lt;2*System.Math.PI;i+=<sp/>0.1F)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>cP<sp/>=<sp/>currentWaypoint<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)System.Math.Cos<sp/>(i)*rad,0,(float)System.Math.Sin(i)*rad);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine<sp/>(pP,cP,Color.yellow);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pP<sp/>=<sp/>cP;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.DrawLine<sp/>(pP,<sp/>currentWaypoint<sp/>+<sp/>rad*</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(1,0,0),Color.yellow);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/ExampleScenes/ExampleScripts/AIFollow.cs"/>
  </compounddef>
</doxygen>
