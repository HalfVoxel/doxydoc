<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_r_v_o_obstacle_8cs" kind="file">
    <compoundname>RVOObstacle.cs</compoundname>
    <innerclass refid="class_r_v_o_obstacle" prot="public">RVOObstacle</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding.RVO;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_r_v_o_obstacle" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_r_v_o_obstacle" kindref="compound" tooltip="Base class for simple RVO colliders.">RVOObstacle</ref><sp/>:<sp/>MonoBehaviour<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref><sp/><ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepOut,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeepIn,<sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Both<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>Pathfinding.RVO.Simulator<sp/><ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;ObstacleVertex&gt;<sp/><ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="class_r_v_o_obstacle_1a26c82c1a134c3d0e3d0c221406870011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Vector3[]&gt;<sp/><ref refid="class_r_v_o_obstacle_1a26c82c1a134c3d0e3d0c221406870011" kindref="member" tooltip="Original vertices for the obstacles.">sourceObstacles</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a13b28f7cd0ca99f228497fc4e10e523a" kindref="member" tooltip="Create Obstacles.">CreateObstacles</ref><sp/>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="class_r_v_o_obstacle_1af27adfa026c5e3fd3f43e3a57a618238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1af27adfa026c5e3fd3f43e3a57a618238" kindref="member" tooltip="Enable executing in editor to draw gizmos.">ExecuteInEditor</ref><sp/>{</highlight><highlight class="keyword">get</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="class_r_v_o_obstacle_1a8fc60186dcf4e15ae5270a9ca317f7ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a8fc60186dcf4e15ae5270a9ca317f7ae" kindref="member" tooltip="If enabled, all coordinates are handled as local.">LocalCoordinates</ref><sp/>{</highlight><highlight class="keyword">get</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="class_r_v_o_obstacle_1a83c176797de4ad9490ccb55d5261b8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a83c176797de4ad9490ccb55d5261b8b6" kindref="member" tooltip="Static or dynamic.">StaticObstacle</ref><sp/>{</highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a502a4f42c76c66b29f30bab261df4702" kindref="member" tooltip="Called in the editor.">AreGizmosDirty</ref><sp/>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="class_r_v_o_obstacle_1ab1424181a47a77566d6e110b58b0d9b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1ab1424181a47a77566d6e110b58b0d9b3" kindref="member" tooltip="Enabled if currently in OnDrawGizmos.">gizmoDrawing</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Vector3[]&gt;<sp/><ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="class_r_v_o_obstacle_1a93b417f564a308bab89cc9dc55cb9f35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref><sp/><ref refid="class_r_v_o_obstacle_1a93b417f564a308bab89cc9dc55cb9f35" kindref="member" tooltip="Last obstacle mode.">_obstacleMode</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="class_r_v_o_obstacle_1ade886b377b761d5323f87d414ea87927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Matrix4x4<sp/><ref refid="class_r_v_o_obstacle_1ade886b377b761d5323f87d414ea87927" kindref="member" tooltip="Last matrix the obstacle was updated with.">prevUpdateMatrix</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="class_r_v_o_obstacle_1ac51c75fd06c6783b6553902c86ac9d71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1ac51c75fd06c6783b6553902c86ac9d71" kindref="member" tooltip="Draws Gizmos.">OnDrawGizmos</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ac51c75fd06c6783b6553902c86ac9d71" kindref="member" tooltip="Draws Gizmos.">OnDrawGizmos</ref><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="class_r_v_o_obstacle_1ae7e5103e242d1fbf4a03afe96d3947ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1ae7e5103e242d1fbf4a03afe96d3947ef" kindref="member" tooltip="Draws Gizmos.">OnDrawGizmosSelected</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ac51c75fd06c6783b6553902c86ac9d71" kindref="member" tooltip="Draws Gizmos.">OnDrawGizmos</ref><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="class_r_v_o_obstacle_1aee679185db3395453fc788027bbba782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1aee679185db3395453fc788027bbba782" kindref="member" tooltip="Draws Gizmos.">OnDrawGizmos</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ab1424181a47a77566d6e110b58b0d9b3" kindref="member" tooltip="Enabled if currently in OnDrawGizmos.">gizmoDrawing</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.color<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color<sp/>(0.615f,1,0.06f,selected<sp/>?<sp/>1.0f<sp/>:<sp/>0.7f);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="class_r_v_o_obstacle_1a502a4f42c76c66b29f30bab261df4702" kindref="member" tooltip="Called in the editor.">AreGizmosDirty</ref>()<sp/>||<sp/><ref refid="class_r_v_o_obstacle_1a93b417f564a308bab89cc9dc55cb9f35" kindref="member" tooltip="Last obstacle mode.">_obstacleMode</ref><sp/>!=<sp/><ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a93b417f564a308bab89cc9dc55cb9f35" kindref="member" tooltip="Last obstacle mode.">_obstacleMode</ref><sp/>=<sp/><ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref><sp/>==<sp/>null)<sp/><ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Vector3[]&gt;();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref>.Clear<sp/>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a13b28f7cd0ca99f228497fc4e10e523a" kindref="member" tooltip="Create Obstacles.">CreateObstacles</ref><sp/>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4x4<sp/>m<sp/>=<sp/><ref refid="class_r_v_o_obstacle_1adf4c704f81f9286866725c293999b63f" kindref="member" tooltip="Get&amp;#39;s the matrix to use for vertices.">GetMatrix</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3[]<sp/>verts<sp/>=<sp/><ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref>[i];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0,q=verts.Length-1;j&lt;verts.Length;q=j++)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawLine<sp/>(m.MultiplyPoint3x4(verts[j]),m.MultiplyPoint3x4(verts[q]));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected<sp/>&amp;&amp;<sp/><ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref><sp/>!=<sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref>.Both)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0,q=verts.Length-1;j&lt;verts.Length;q=j++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>a<sp/>=<sp/>m.MultiplyPoint3x4(verts[q]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>b<sp/>=<sp/>m.MultiplyPoint3x4(verts[j]);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>avg<sp/>=<sp/>(a<sp/>+<sp/>b)<sp/>*<sp/>0.5f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>tang<sp/>=<sp/>(b<sp/>-<sp/>a).normalized;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tang<sp/>==<sp/>Vector3.zero)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>normal<sp/>=<sp/>Vector3.Cross<sp/>(Vector3.up,tang);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawLine<sp/>(avg,avg+normal);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawLine<sp/>(avg+normal,avg+normal*0.5f+tang*0.5f);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawLine<sp/>(avg+normal,avg+normal*0.5f-tang*0.5f);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ab1424181a47a77566d6e110b58b0d9b3" kindref="member" tooltip="Enabled if currently in OnDrawGizmos.">gizmoDrawing</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="class_r_v_o_obstacle_1adf4c704f81f9286866725c293999b63f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Matrix4x4<sp/><ref refid="class_r_v_o_obstacle_1adf4c704f81f9286866725c293999b63f" kindref="member" tooltip="Get&amp;#39;s the matrix to use for vertices.">GetMatrix</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1a8fc60186dcf4e15ae5270a9ca317f7ae" kindref="member" tooltip="If enabled, all coordinates are handled as local.">LocalCoordinates</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transform.localToWorldMatrix;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Matrix4x4.identity;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155" refid="class_r_v_o_obstacle_1a3e9a1e1cd7a478a0d00f0efb51a8e4cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a3e9a1e1cd7a478a0d00f0efb51a8e4cf" kindref="member" tooltip="Disables the obstacle.">OnDisable</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Exception<sp/>(</highlight><highlight class="stringliteral">&quot;This<sp/>should<sp/>not<sp/>happen!<sp/>Make<sp/>sure<sp/>you<sp/>are<sp/>not<sp/>overriding<sp/>the<sp/>OnEnable<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a3989a9b4dd227b97626502d5f93eb3fd" kindref="member" tooltip="Removes the obstacle identified by the vertex.">RemoveObstacle</ref><sp/>(<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>[i]);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168" refid="class_r_v_o_obstacle_1a84e23ba394eacd818d2e005cc466c4d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a84e23ba394eacd818d2e005cc466c4d1" kindref="member" tooltip="Enabled the obstacle.">OnEnable</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Exception<sp/>(</highlight><highlight class="stringliteral">&quot;This<sp/>should<sp/>not<sp/>happen!<sp/>Make<sp/>sure<sp/>you<sp/>are<sp/>not<sp/>overriding<sp/>the<sp/>OnDisable<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a52d6f095a0668e4a0a4eea7c08f0c542" kindref="member" tooltip="Adds a previously removed obstacle.">AddObstacle</ref><sp/>(<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>[i]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="class_r_v_o_obstacle_1a07aaf1227e4d645f15e0a964f54ef291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a07aaf1227e4d645f15e0a964f54ef291" kindref="member" tooltip="Creates obstacles.">Start</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;ObstacleVertex&gt;();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a26c82c1a134c3d0e3d0c221406870011" kindref="member" tooltip="Original vertices for the obstacles.">sourceObstacles</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Vector3[]&gt;();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ade886b377b761d5323f87d414ea87927" kindref="member" tooltip="Last matrix the obstacle was updated with.">prevUpdateMatrix</ref><sp/>=<sp/><ref refid="class_r_v_o_obstacle_1adf4c704f81f9286866725c293999b63f" kindref="member" tooltip="Get&amp;#39;s the matrix to use for vertices.">GetMatrix</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a13b28f7cd0ca99f228497fc4e10e523a" kindref="member" tooltip="Create Obstacles.">CreateObstacles</ref><sp/>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="class_r_v_o_obstacle_1aec0783b5a136e042adcc47bae4fe5291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1aec0783b5a136e042adcc47bae4fe5291" kindref="member" tooltip="Updates obstacle if required.">Update</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4x4<sp/>m<sp/>=<sp/><ref refid="class_r_v_o_obstacle_1adf4c704f81f9286866725c293999b63f" kindref="member" tooltip="Get&amp;#39;s the matrix to use for vertices.">GetMatrix</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/><ref refid="class_r_v_o_obstacle_1ade886b377b761d5323f87d414ea87927" kindref="member" tooltip="Last matrix the obstacle was updated with.">prevUpdateMatrix</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1acee20e4897f14df1a56c45d2accd3989" kindref="member" tooltip="Updates the vertices of an obstacle.">UpdateObstacle</ref><sp/>(<ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>[i],<ref refid="class_r_v_o_obstacle_1a26c82c1a134c3d0e3d0c221406870011" kindref="member" tooltip="Original vertices for the obstacles.">sourceObstacles</ref>[i],m);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ade886b377b761d5323f87d414ea87927" kindref="member" tooltip="Last matrix the obstacle was updated with.">prevUpdateMatrix</ref><sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="class_r_v_o_obstacle_1a7d1e27151f3f0d6bf90acd29527a97b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a7d1e27151f3f0d6bf90acd29527a97b0" kindref="member" tooltip="Finds a simulator in the scene.">FindSimulator</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_simulator" kindref="compound" tooltip="Unity front end for an RVO simulator.">RVOSimulator</ref><sp/>rvosim<sp/>=<sp/>FindObjectOfType(typeof(<ref refid="class_r_v_o_simulator" kindref="compound" tooltip="Unity front end for an RVO simulator.">RVOSimulator</ref>))<sp/>as<sp/><ref refid="class_r_v_o_simulator" kindref="compound" tooltip="Unity front end for an RVO simulator.">RVOSimulator</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rvosim<sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.InvalidOperationException<sp/>(</highlight><highlight class="stringliteral">&quot;No<sp/>RVOSimulator<sp/>could<sp/>be<sp/>found<sp/>in<sp/>the<sp/>scene.<sp/>Please<sp/>add<sp/>one<sp/>to<sp/>any<sp/>GameObject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref><sp/>=<sp/>rvosim.<ref refid="class_r_v_o_simulator_1a9262cfa14f44bead1b2b007edee41678" kindref="member" tooltip="Get the internal simulator.">GetSimulator</ref><sp/>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216" refid="class_r_v_o_obstacle_1a062b2d7fc6ebe8e6426e6a67ac4752cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a062b2d7fc6ebe8e6426e6a67ac4752cf" kindref="member" tooltip="Adds an obstacle with the specified vertices.">AddObstacle</ref><sp/>(Vector3[]<sp/>vertices,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices<sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentNullException<sp/>(</highlight><highlight class="stringliteral">&quot;Vertices<sp/>Must<sp/>Not<sp/>Be<sp/>Null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentOutOfRangeException<sp/>(</highlight><highlight class="stringliteral">&quot;Height<sp/>must<sp/>be<sp/>non-negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices.Length<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentException<sp/>(</highlight><highlight class="stringliteral">&quot;An<sp/>obstacle<sp/>must<sp/>have<sp/>at<sp/>least<sp/>two<sp/>vertices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1ab1424181a47a77566d6e110b58b0d9b3" kindref="member" tooltip="Enabled if currently in OnDrawGizmos.">gizmoDrawing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Matrix4x4<sp/>m<sp/>=<sp/>GetMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!m.isIdentity)<sp/>for<sp/>(int<sp/>i=0;i&lt;vertices.Length;i++)<sp/>vertices[i]<sp/>=<sp/>m.MultiplyPoint3x4(vertices[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3[]<sp/>v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[vertices.Length];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a88e26426b52e90e85206cf937e3f3308" kindref="member" tooltip="Winds the vertices correctly.">WindCorrectly</ref><sp/>(vertices);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Array.Copy(vertices,v,vertices.Length);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a1fd843e942b4a6179676e4a9e243d1d8" kindref="member" tooltip="Vertices for gizmos.">gizmoVerts</ref>.Add<sp/>(v);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref><sp/>==<sp/>null)<sp/><ref refid="class_r_v_o_obstacle_1a7d1e27151f3f0d6bf90acd29527a97b0" kindref="member" tooltip="Finds a simulator in the scene.">FindSimulator</ref><sp/>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices.Length<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a1a77da3a6a54ca056ea3e91d71a7a292" kindref="member" tooltip="Adds an obstacle.">AddObstacleInternal</ref><sp/>(vertices,<sp/>height);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref><sp/>==<sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref>.Both)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,j=vertices.Length-1;i&lt;vertices.Length;j<sp/>=<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a1a77da3a6a54ca056ea3e91d71a7a292" kindref="member" tooltip="Adds an obstacle.">AddObstacleInternal</ref><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[]<sp/>{vertices[j],vertices[i]},height);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a88e26426b52e90e85206cf937e3f3308" kindref="member" tooltip="Winds the vertices correctly.">WindCorrectly</ref><sp/>(vertices);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a1a77da3a6a54ca056ea3e91d71a7a292" kindref="member" tooltip="Adds an obstacle.">AddObstacleInternal</ref><sp/>(vertices,height);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="class_r_v_o_obstacle_1a1a77da3a6a54ca056ea3e91d71a7a292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a1a77da3a6a54ca056ea3e91d71a7a292" kindref="member" tooltip="Adds an obstacle.">AddObstacleInternal</ref><sp/>(Vector3[]<sp/>vertices,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1ac24b9438fee6ae72eea8d5104084580c" kindref="member" tooltip="All obstacles added.">addedObstacles</ref>.Add<sp/>(<ref refid="class_r_v_o_obstacle_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to simulator.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a52d6f095a0668e4a0a4eea7c08f0c542" kindref="member" tooltip="Adds a previously removed obstacle.">AddObstacle</ref><sp/>(vertices,height,<sp/><ref refid="class_r_v_o_obstacle_1adf4c704f81f9286866725c293999b63f" kindref="member" tooltip="Get&amp;#39;s the matrix to use for vertices.">GetMatrix</ref>()));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_obstacle_1a26c82c1a134c3d0e3d0c221406870011" kindref="member" tooltip="Original vertices for the obstacles.">sourceObstacles</ref>.Add<sp/>(vertices);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="class_r_v_o_obstacle_1a88e26426b52e90e85206cf937e3f3308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_v_o_obstacle_1a88e26426b52e90e85206cf937e3f3308" kindref="member" tooltip="Winds the vertices correctly.">WindCorrectly</ref><sp/>(Vector3[]<sp/>vertices)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref><sp/>==<sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref>.Both)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftmost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>leftmostX<sp/>=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.PositiveInfinity;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;vertices.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices[i].x<sp/>&lt;<sp/>leftmostX)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftmost<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftmostX<sp/>=<sp/>vertices[i].x;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_polygon" kindref="compound" tooltip="Utility functions for working with polygons, lines, and other vector math.">Polygon</ref>.<ref refid="class_pathfinding_1_1_polygon_1af2f48887cb67d83d22b1646222b40f26" kindref="member" tooltip="Returns if the points a in a clockwise order.">IsClockwise</ref><sp/>(vertices[(leftmost-1<sp/>+<sp/>vertices.Length)<sp/>%<sp/>vertices.Length],<sp/>vertices[leftmost],<sp/>vertices[(leftmost+1)<sp/>%<sp/>vertices.Length]))<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref><sp/>==<sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref>.KeepOut)<sp/>System.Array.Reverse<sp/>(vertices);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_v_o_obstacle_1accf6b4b41c52c247740485d2822a31d2" kindref="member" tooltip="Mode of the obstacle.">obstacleMode</ref><sp/>==<sp/><ref refid="class_r_v_o_obstacle_1aaa1778f605b7c712b87275cc44deedbd" kindref="member" tooltip="RVO Obstacle Modes.">ObstacleVertexWinding</ref>.KeepIn)<sp/>System.Array.Reverse<sp/>(vertices);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/RVO/RVOObstacle.cs"/>
  </compounddef>
</doxygen>
