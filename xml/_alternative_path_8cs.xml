<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_alternative_path_8cs" kind="file">
    <compoundname>AlternativePath.cs</compoundname>
    <innerclass refid="class_alternative_path" prot="public">AlternativePath</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">[AddComponentMenu(</highlight><highlight class="stringliteral">&quot;Pathfinding/Modifiers/Alternative<sp/>Path&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="6"><highlight class="normal">[System.Serializable]</highlight></codeline>
<codeline lineno="10" refid="class_alternative_path" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_alternative_path" kindref="compound" tooltip="Applies penalty to the paths it processes telling other units to avoid choosing the same path...">AlternativePath</ref><sp/>:<sp/><ref refid="class_pathfinding_1_1_mono_modifier" kindref="compound" tooltip="Base class for path modifiers which can be attached to GameObjects.">MonoModifier</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_EDITOR</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>[UnityEditor.MenuItem<sp/>(</highlight><highlight class="stringliteral">&quot;CONTEXT/Seeker/Add<sp/>Alternative<sp/>Path<sp/>Modifier&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddComp<sp/>(UnityEditor.MenuCommand<sp/>command)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(command.context<sp/>as<sp/>Component).gameObject.AddComponent<sp/>(typeof(<ref refid="class_alternative_path" kindref="compound" tooltip="Applies penalty to the paths it processes telling other units to avoid choosing the same path...">AlternativePath</ref>));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="namespace_pathfinding_1ae82dbd8faf6cfefaa3e3008c186a20e5" kindref="member" tooltip="Defines inputs and outputs for a modifier.">ModifierData</ref><sp/>input<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_pathfinding_1ae82dbd8faf6cfefaa3e3008c186a20e5" kindref="member" tooltip="Defines inputs and outputs for a modifier.">ModifierData</ref>.Original;<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="namespace_pathfinding_1ae82dbd8faf6cfefaa3e3008c186a20e5" kindref="member" tooltip="Defines inputs and outputs for a modifier.">ModifierData</ref><sp/>output<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_pathfinding_1ae82dbd8faf6cfefaa3e3008c186a20e5" kindref="member" tooltip="Defines inputs and outputs for a modifier.">ModifierData</ref>.All;<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="class_alternative_path_1a70500289fa53bc6e8b1c2d7b82a11640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_alternative_path_1a70500289fa53bc6e8b1c2d7b82a11640" kindref="member" tooltip="How much penalty (weight) to apply to nodes.">penalty</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="class_alternative_path_1a4f8151e935662e4adbc9c764189d775e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_alternative_path_1a4f8151e935662e4adbc9c764189d775e" kindref="member" tooltip="Max number of nodes to skip in a row.">randomStep</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref>[]<sp/><ref refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" kindref="member" tooltip="The previous path.">prevNodes</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="class_alternative_path_1ae1cb29216b2867b3ef2500ba01291c71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_alternative_path_1ae1cb29216b2867b3ef2500ba01291c71" kindref="member" tooltip="Previous seed.">prevSeed</ref>;<sp/></highlight></codeline>
<codeline lineno="37" refid="class_alternative_path_1adf59f14d9c564a0f8110252994a1989e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_alternative_path_1adf59f14d9c564a0f8110252994a1989e" kindref="member" tooltip="The previous penalty used.">prevPenalty</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitingForApply<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>System.Object<sp/>lockObject<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Object<sp/>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>System.Random<sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Random<sp/>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="class_alternative_path_1a8f686ccf9bddd75184a5fb2342a8dae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>System.Random<sp/><ref refid="class_alternative_path_1a8f686ccf9bddd75184a5fb2342a8dae0" kindref="member" tooltip="A random object generating random seeds for other random objects.">seedGenerator</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Random<sp/>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref>[]<sp/><ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref>;</highlight></codeline>
<codeline lineno="51" refid="class_alternative_path_1a917f8611394bbb5da9cb835e534f8e70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_alternative_path_1a917f8611394bbb5da9cb835e534f8e70" kindref="member" tooltip="Main Post-Processing function.">Apply</ref><sp/>(<ref refid="class_pathfinding_1_1_path" kindref="compound" tooltip="Base class for all path types.">Path</ref><sp/>p,<sp/><ref refid="namespace_pathfinding_1ae82dbd8faf6cfefaa3e3008c186a20e5" kindref="member" tooltip="Defines inputs and outputs for a modifier.">ModifierData</ref><sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>(lockObject)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref><sp/>=<sp/>p.<ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>.ToArray();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//AstarPath.active.RegisterCanUpdateGraphs<sp/>(ApplyNow);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!waitingForApply)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitingForApply<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1ab5b069e4ec515ead310039862789d979" kindref="member" tooltip="Called for each path before searching.">OnPathPreSearch</ref><sp/>+=<sp/>ApplyNow;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyNow<sp/>(<ref refid="class_pathfinding_1_1_path" kindref="compound" tooltip="Base class for all path types.">Path</ref><sp/>somePath)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>(lockObject)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitingForApply<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1ab5b069e4ec515ead310039862789d979" kindref="member" tooltip="Called for each path before searching.">OnPathPreSearch</ref><sp/>-=<sp/>ApplyNow;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//toBeApplied.Add<sp/>(p.nodes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed<sp/>=<sp/><ref refid="class_alternative_path_1ae1cb29216b2867b3ef2500ba01291c71" kindref="member" tooltip="Previous seed.">prevSeed</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Random<sp/>(seed);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>previous<sp/>penalty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" kindref="member" tooltip="The previous path.">prevNodes</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rndStart<sp/>=<sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref>.Next<sp/>(<ref refid="class_alternative_path_1a4f8151e935662e4adbc9c764189d775e" kindref="member" tooltip="Max number of nodes to skip in a row.">randomStep</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=rndStart;i&lt;<ref refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" kindref="member" tooltip="The previous path.">prevNodes</ref>.Length;i+=<sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref>.Next<sp/>(1,<ref refid="class_alternative_path_1a4f8151e935662e4adbc9c764189d775e" kindref="member" tooltip="Max number of nodes to skip in a row.">randomStep</ref>))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" kindref="member" tooltip="The previous path.">prevNodes</ref>[i].Penalty<sp/>=<sp/>(uint)(<ref refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" kindref="member" tooltip="The previous path.">prevNodes</ref>[i].Penalty-<ref refid="class_alternative_path_1adf59f14d9c564a0f8110252994a1989e" kindref="member" tooltip="The previous penalty used.">prevPenalty</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>a<sp/>new<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed<sp/>=<sp/><ref refid="class_alternative_path_1a8f686ccf9bddd75184a5fb2342a8dae0" kindref="member" tooltip="A random object generating random seeds for other random objects.">seedGenerator</ref>.Next<sp/>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Random<sp/>(seed);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//seed<sp/>=<sp/>Random.Range<sp/>(0,10000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Random.seed<sp/>=<sp/>seed;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>rnd<sp/>=<sp/>//Random.Range<sp/>(0,randomStep);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rndStart<sp/>=<sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref>.Next<sp/>(<ref refid="class_alternative_path_1a4f8151e935662e4adbc9c764189d775e" kindref="member" tooltip="Max number of nodes to skip in a row.">randomStep</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=rndStart;i&lt;<ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref>.Length;i+=<sp/><ref refid="class_alternative_path_1aed3135be31c8f1e71499433a3fc6a9e6" kindref="member" tooltip="A random object.">rnd</ref>.Next<sp/>(1,<ref refid="class_alternative_path_1a4f8151e935662e4adbc9c764189d775e" kindref="member" tooltip="Max number of nodes to skip in a row.">randomStep</ref>))<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref>[i].Penalty<sp/>=<sp/>(uint)(<ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref>[i].Penalty+<ref refid="class_alternative_path_1a70500289fa53bc6e8b1c2d7b82a11640" kindref="member" tooltip="How much penalty (weight) to apply to nodes.">penalty</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1adf59f14d9c564a0f8110252994a1989e" kindref="member" tooltip="The previous penalty used.">prevPenalty</ref><sp/>=<sp/><ref refid="class_alternative_path_1a70500289fa53bc6e8b1c2d7b82a11640" kindref="member" tooltip="How much penalty (weight) to apply to nodes.">penalty</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1ae1cb29216b2867b3ef2500ba01291c71" kindref="member" tooltip="Previous seed.">prevSeed</ref><sp/>=<sp/>seed;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alternative_path_1ab442417795ba5129be4df3c9e30360b8" kindref="member" tooltip="The previous path.">prevNodes</ref><sp/>=<sp/><ref refid="class_alternative_path_1ad3386708b0cdd5fd20eab3bb95bb4b50" kindref="member" tooltip="The nodes waiting to have their penalty changed.">toBeApplied</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Modifiers/AlternativePath.cs"/>
  </compounddef>
</doxygen>
