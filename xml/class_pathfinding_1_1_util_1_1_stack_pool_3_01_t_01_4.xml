<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4" kind="class" prot="public">
    <compoundname>Pathfinding::Util::StackPool&lt; T &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1aeeb8a29e7ee4bb3bf4827d561b23d866" prot="private" static="yes" mutable="no">
        <type>List&lt; Stack&lt; T &gt; &gt;</type>
        <definition>List&lt;Stack&lt;T&gt; &gt; pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <briefdescription>
<para>Internal pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="25" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1ad47412580692d52fdefa0d790cd60e78" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static StackPool</definition>
        <argsstring>()</argsstring>
        <name>StackPool</name>
        <briefdescription>
<para>Static constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="29" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1ae795a5e48ddbf7e00cd35613faddb5d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Stack&lt; T &gt;</type>
        <definition>static Stack&lt;T&gt; Claim</definition>
        <argsstring>()</argsstring>
        <name>Claim</name>
        <briefdescription>
<para>Claim a stack. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a pooled stack if any are in the pool. Otherwise it creates a new one. After usage, this stack should be released using the Release function (though not strictly necessary). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="38" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="38" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1ade633bf8b439e2bb742c72215c632b19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clears all pooled stacks of this type. </para>        </briefdescription>
        <detaileddescription>
<para>This is an O(n) operation, where n is the number of pooled stacks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="78" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1a605940bf5e3b6094672f8869ae099076" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int GetSize</definition>
        <argsstring>()</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Number of stacks of this type in the pool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="83" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1aa128e89cca0a9669251ea05212ce2cfb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Release</definition>
        <argsstring>(Stack&lt; T &gt; stack)</argsstring>
        <name>Release</name>
        <param>
          <type>Stack&lt; T &gt;</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
<para>Releases a stack. </para>        </briefdescription>
        <detaileddescription>
<para>After the stack has been released it should not be used anymore. Releasing a stack twice will cause an error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="65" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1aabd5df101f822a3eb7a3fd66eb927e80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Warmup</definition>
        <argsstring>(int count)</argsstring>
        <name>Warmup</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Makes sure the pool contains at least <emphasis>count</emphasis> pooled items. </para>        </briefdescription>
        <detaileddescription>
<para>This is good if you want to do all allocations at start. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="55" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="55" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Lightweight Stack Pool. </para>    </briefdescription>
    <detaileddescription>
<para>Handy class for pooling stacks of type T.</para><para>Usage:<itemizedlist>
<listitem><para>Claim a new stack using<programlisting><codeline><highlight class="normal">Stack&lt;SomeClass&gt;<sp/>foo<sp/>=<sp/>StackPool&lt;SomeClass&gt;.Claim<sp/>();<sp/></highlight></codeline>
</programlisting></para></listitem><listitem><para>Use it and do stuff with it</para></listitem><listitem><para>Release it with<programlisting><codeline><highlight class="normal">StackPool&lt;SomeClass&gt;.Release<sp/>(foo);<sp/></highlight></codeline>
</programlisting></para></listitem></itemizedlist>
</para><para>You do not need to clear the stack before releasing it. After you have released a stack, you should never use it again.</para><para><simplesect kind="since"><para>Version 3.2 </para></simplesect>
<simplesect kind="see"><para>Pathfinding.Util.ListPool </para></simplesect>
</para>    </detaileddescription>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" line="23" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/StackPool.cs" bodystart="22" bodyend="86"/>
    <listofallmembers>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1ae795a5e48ddbf7e00cd35613faddb5d4" prot="public" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>Claim</name></member>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1ade633bf8b439e2bb742c72215c632b19" prot="public" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>Clear</name></member>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1a605940bf5e3b6094672f8869ae099076" prot="public" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>GetSize</name></member>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1aeeb8a29e7ee4bb3bf4827d561b23d866" prot="private" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>pool</name></member>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1aa128e89cca0a9669251ea05212ce2cfb" prot="public" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>Release</name></member>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1ad47412580692d52fdefa0d790cd60e78" prot="private" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>StackPool</name></member>
      <member refid="class_pathfinding_1_1_util_1_1_stack_pool_3_01_t_01_4_1aabd5df101f822a3eb7a3fd66eb927e80" prot="public" virt="non-virtual"><scope>Pathfinding::Util::StackPool&lt; T &gt;</scope><name>Warmup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
