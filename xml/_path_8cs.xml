<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_path_8cs" kind="file">
    <compoundname>Path.cs</compoundname>
    <innerclass refid="class_pathfinding_1_1_path" prot="public">Pathfinding::Path</innerclass>
    <innernamespace refid="namespace_pathfinding">Pathfinding</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#define<sp/>ASTAR_FAST_BUT_NO_EXCEPTIONS<sp/>//Less<sp/>try-catch<sp/>blocks<sp/>and<sp/>error<sp/>checking<sp/>will<sp/>be<sp/>used.<sp/>Only<sp/>use<sp/>this<sp/>if<sp/>you<sp/>have<sp/>tested<sp/>the<sp/>game/application<sp/>thoroughly<sp/>and<sp/>no<sp/>pathfinding<sp/>exceptions<sp/>are<sp/>thrown.<sp/>Barely<sp/>improves<sp/>performance.<sp/>It<sp/>seems<sp/>try-catch<sp/>was<sp/>fast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Pathfinding<sp/>{</highlight></codeline>
<codeline lineno="10" refid="class_pathfinding_1_1_path" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pathfinding_1_1_path" kindref="compound" tooltip="Base class for all path types.">Path</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13" refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_handler" kindref="compound">PathHandler</ref><sp/><ref refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" kindref="member" tooltip="Data for the thread calculating this path.">pathHandler</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="class_pathfinding_1_1_path_1a1283a0bbb6c7864c345cb12e1cf1dcaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>OnPathDelegate<sp/><ref refid="class_pathfinding_1_1_path_1a1283a0bbb6c7864c345cb12e1cf1dcaa" kindref="member" tooltip="Callback to call when the path is complete.">callback</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!ASTAR_LOCK_FREE_PATH_STATE</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>PathState<sp/>state;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>System.Object<sp/>stateLock<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>object();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31" refid="class_pathfinding_1_1_path_1afe50cc8eea8626034e7e1f1b6c2340cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>PathCompleteState<sp/><ref refid="class_pathfinding_1_1_path_1afe50cc8eea8626034e7e1f1b6c2340cb" kindref="member" tooltip="Current state of the path.">pathCompleteState</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="class_pathfinding_1_1_path_1ae7e61764a09f9184c43bc8723f803e6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>PathCompleteState<sp/><ref refid="class_pathfinding_1_1_path_1ae7e61764a09f9184c43bc8723f803e6d" kindref="member" tooltip="Current state of the path.">CompleteState</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1afe50cc8eea8626034e7e1f1b6c2340cb" kindref="member" tooltip="Current state of the path.">pathCompleteState</ref>;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{<sp/><ref refid="class_pathfinding_1_1_path_1afe50cc8eea8626034e7e1f1b6c2340cb" kindref="member" tooltip="Current state of the path.">pathCompleteState</ref><sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" kindref="member" tooltip="If the path failed, this is true.">error</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1ae7e61764a09f9184c43bc8723f803e6d" kindref="member" tooltip="Current state of the path.">CompleteState</ref><sp/>==<sp/>PathCompleteState.Error;<sp/>}}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" kindref="member" tooltip="Additional info on what went wrong.">_errorLog</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="class_pathfinding_1_1_path_1a0fd7bd65be2ae15aecab7278699acbb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a0fd7bd65be2ae15aecab7278699acbb1" kindref="member" tooltip="Log messages with info about eventual errors.">errorLog</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" kindref="member" tooltip="Additional info on what went wrong.">_errorLog</ref>;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref>[]<sp/>_path;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3[]<sp/>_vectorPath;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;GraphNode&gt;<sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Vector3&gt;<sp/><ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="class_pathfinding_1_1_path_1a5d24acfb76c2889e85afb1a9ed186217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a5d24acfb76c2889e85afb1a9ed186217" kindref="member" tooltip="The max number of milliseconds per iteration (frame, in case of non-multithreading)">maxFrameTime</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="class_pathfinding_1_1_path_1a927fdf14b05fdd95422e8ca4ce3d02ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref><sp/><ref refid="class_pathfinding_1_1_path_1a927fdf14b05fdd95422e8ca4ce3d02ed" kindref="member" tooltip="The node currently being processed.">currentR</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="class_pathfinding_1_1_path_1a66625d8d6c0894b4828b43f826a09b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a66625d8d6c0894b4828b43f826a09b8f" kindref="member" tooltip="The duration of this path in ms.">duration</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>searchIterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74" refid="class_pathfinding_1_1_path_1af8e7a9c8893e8da14adfc4b4751297cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1af8e7a9c8893e8da14adfc4b4751297cc" kindref="member" tooltip="Number of nodes this path has searched.">searchedNodes</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="class_pathfinding_1_1_path_1a59f36f01641487cff09a1e5fc8d0b80d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>System.DateTime<sp/><ref refid="class_pathfinding_1_1_path_1a59f36f01641487cff09a1e5fc8d0b80d" kindref="member" tooltip="When the call was made to start the pathfinding for this path.">callTime</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>if<sp/>the<sp/>path<sp/>has<sp/>been<sp/>calculated<sp/>(even<sp/>if<sp/>it<sp/>had<sp/>an<sp/>error).</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Used<sp/>by<sp/>the<sp/>multithreaded<sp/>pathfinder<sp/>to<sp/>signal<sp/>that<sp/>this<sp/>path<sp/>object<sp/>is<sp/>safe<sp/>to<sp/>return.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>bool<sp/>processed<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="class_pathfinding_1_1_path_1a755ec4f860b3de7a34086558bdc9ed39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a755ec4f860b3de7a34086558bdc9ed39" kindref="member" tooltip="True if the path is currently recycled (i.e in the path pool).">recycled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="class_pathfinding_1_1_path_1a08be4d910d994f5e3fcb39d6b71c8631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a08be4d910d994f5e3fcb39d6b71c8631" kindref="member" tooltip="True if the Reset function has been called.">hasBeenReset</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="class_pathfinding_1_1_path_1af6ea73fa8f1c34669d3b2d1854758808" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_n_n_constraint" kindref="compound" tooltip="Nearest node constraint.">NNConstraint</ref><sp/><ref refid="class_pathfinding_1_1_path_1af6ea73fa8f1c34669d3b2d1854758808" kindref="member" tooltip="Constraint for how to search for nodes.">nnConstraint</ref><sp/>=<sp/><ref refid="class_pathfinding_1_1_path_n_n_constraint" kindref="compound" tooltip="A special NNConstraint which can use different logic for the start node and end node in a path...">PathNNConstraint</ref>.Default;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98" refid="class_pathfinding_1_1_path_1a8184493e27bfcdffd5f32e6dde4c0364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path" kindref="compound" tooltip="Base class for all path types.">Path</ref><sp/><ref refid="class_pathfinding_1_1_path_1a8184493e27bfcdffd5f32e6dde4c0364" kindref="member" tooltip="The next path to be searched.">next</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>are<sp/>variables<sp/>which<sp/>different<sp/>scripts<sp/>and<sp/>custom<sp/>graphs<sp/>can<sp/>use<sp/>to<sp/>get<sp/>a<sp/>bit<sp/>more<sp/>info<sp/>about<sp/>What<sp/>is<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Not<sp/>all<sp/>are<sp/>used<sp/>in<sp/>the<sp/>standard<sp/>graph<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>variables<sp/>are<sp/>put<sp/>here<sp/>because<sp/>it<sp/>is<sp/>a<sp/>lot<sp/>faster<sp/>to<sp/>access<sp/>fields<sp/>than,<sp/>for<sp/>example<sp/>make<sp/>use<sp/>of<sp/>a<sp/>lookup<sp/>table<sp/>(e.g<sp/>dictionary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Note:<sp/>These<sp/>variables<sp/>needs<sp/>to<sp/>be<sp/>filled<sp/>in<sp/>by<sp/>an<sp/>external<sp/>script<sp/>to<sp/>be<sp/>usable</highlight></codeline>
<codeline lineno="109" refid="class_pathfinding_1_1_path_1a395279899207ce7f17adf9fdb8ee97ee" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a395279899207ce7f17adf9fdb8ee97ee" kindref="member" tooltip="Radius for the unit searching for the path.">radius</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="class_pathfinding_1_1_path_1ad747add0feeb6ed5dc86433cdeece0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1ad747add0feeb6ed5dc86433cdeece0b3" kindref="member" tooltip="A mask for defining what type of ground a unit can traverse, not used in any default standard graph...">walkabilityMask</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="class_pathfinding_1_1_path_1ad12fc34ce789bce6c8a05d8a17138534" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member" tooltip="Height of the character.">height</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="class_pathfinding_1_1_path_1a101e648f6ba27c123a4cbf221b6c43f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a101e648f6ba27c123a4cbf221b6c43f6" kindref="member" tooltip="Turning radius of the character.">turnRadius</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="class_pathfinding_1_1_path_1a218b4f7c6cc2681a99c23a3b089d68b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a218b4f7c6cc2681a99c23a3b089d68b1" kindref="member" tooltip="Speed of the character.">speed</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>store<sp/>additional<sp/>data.<sp/>Note:<sp/>this<sp/>is<sp/>SLOW.<sp/>About<sp/>10-100<sp/>times<sp/>slower<sp/>than<sp/>using<sp/>the<sp/>fields<sp/>above.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>\since<sp/>Removed<sp/>in<sp/>3.0.8</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Currently<sp/>not<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>Dictionary&lt;string,int&gt;<sp/>customData<sp/>=<sp/>null;//new<sp/>Dictionary&lt;string,int&gt;();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="class_pathfinding_1_1_path_1a075542dfca7754bc1e390b6bb13e5e92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Heuristic<sp/><ref refid="class_pathfinding_1_1_path_1a075542dfca7754bc1e390b6bb13e5e92" kindref="member" tooltip="Determines which heuristic to use.">heuristic</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="class_pathfinding_1_1_path_1aee92349c20768e49169e32671e74a820" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1aee92349c20768e49169e32671e74a820" kindref="member" tooltip="Scale of the heuristic values.">heuristicScale</ref><sp/>=<sp/>1F;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor">#if<sp/>ASTAR_MORE_PATH_IDS</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="141" refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ushort<sp/><ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157" refid="class_pathfinding_1_1_path_1a764d3ed2e9a2b25171ed02c6b4f6e165" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a764d3ed2e9a2b25171ed02c6b4f6e165" kindref="member" tooltip="Which graph tags are traversable.">enabledTags</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161" refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/><ref refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" kindref="member" tooltip="Penalties for each tag.">_tagPenalties</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[0];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173" refid="class_pathfinding_1_1_path_1ab2deda12dc8cad2e4263b8d051ca92f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/><ref refid="class_pathfinding_1_1_path_1ab2deda12dc8cad2e4263b8d051ca92f9" kindref="member" tooltip="Penalties for each tag.">tagPenalties</ref><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" kindref="member" tooltip="Penalties for each tag.">_tagPenalties</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>null<sp/>||<sp/>value.Length<sp/>!=<sp/>32)<sp/><ref refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" kindref="member" tooltip="Penalties for each tag.">_tagPenalties</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[0];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" kindref="member" tooltip="Penalties for each tag.">_tagPenalties</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="class_pathfinding_1_1_path_1a1076ed6812e2b4f98dca64b74dabae5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a1076ed6812e2b4f98dca64b74dabae5d" kindref="member" tooltip="Total Length of the path.">GetTotalLength</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.PositiveInfinity;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>.Count-1;i++)<sp/>tot<sp/>+=<sp/>Vector3.Distance<sp/>(<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>[i],<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>[i+1]);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tot;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212" refid="class_pathfinding_1_1_path_1accfdd05d449188d1d7f74cf32bce687a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_pathfinding_1_1_path_1accfdd05d449188d1d7f74cf32bce687a" kindref="member" tooltip="Waits until this path has been calculated and returned.">WaitForPath</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a0162676fc3539f2a840e96b8e51e49d9" kindref="member" tooltip="Returns the state of the path in the pathfinding pipeline.">GetState</ref><sp/>()<sp/>==<sp/>PathState.Created)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.InvalidOperationException<sp/>(</highlight><highlight class="stringliteral">&quot;This<sp/>path<sp/>has<sp/>not<sp/>been<sp/>started<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a0162676fc3539f2a840e96b8e51e49d9" kindref="member" tooltip="Returns the state of the path in the pathfinding pipeline.">GetState</ref><sp/>()<sp/>!=<sp/>PathState.Returned)<sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint<sp/>CalculateHScore<sp/>(<ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint)(<ref refid="class_pathfinding_1_1_path_1a92f19ba0c6077695e490840ce19177c9" kindref="member">GetHTarget</ref><sp/>()<sp/>-<sp/>node.Position).costMagnitude;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="class_pathfinding_1_1_path_1a87b4a2b0a94550c3fe3dd6d651ec1ffa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_pathfinding_1_1_path_1a87b4a2b0a94550c3fe3dd6d651ec1ffa" kindref="member" tooltip="Returns penalty for the given tag.">GetTagPenalty</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tag<sp/>&lt;<sp/><ref refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" kindref="member" tooltip="Penalties for each tag.">_tagPenalties</ref>.Length<sp/>?<sp/>(uint)<ref refid="class_pathfinding_1_1_path_1a7988e7c52d10dc1b284345f14f553304" kindref="member" tooltip="Penalties for each tag.">_tagPenalties</ref>[tag]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230" refid="class_pathfinding_1_1_path_1a92f19ba0c6077695e490840ce19177c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct_pathfinding_1_1_int3" kindref="compound" tooltip="Holds a coordinate in integers.">Int3</ref><sp/><ref refid="class_pathfinding_1_1_path_1a92f19ba0c6077695e490840ce19177c9" kindref="member">GetHTarget</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_pathfinding_1_1_int3" kindref="compound" tooltip="Holds a coordinate in integers.">Int3</ref>.zero;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor">#if<sp/>ConfigureTagsAsMultiple</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a9460a578b3228c1030c99f624458ab42" kindref="member" tooltip="Returns if the node can be traversed.">CanTraverse</ref><sp/>(<ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.walkable<sp/>&amp;&amp;<sp/>(node.tags<sp/>&amp;<sp/><ref refid="class_pathfinding_1_1_path_1a764d3ed2e9a2b25171ed02c6b4f6e165" kindref="member" tooltip="Which graph tags are traversable.">enabledTags</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="241" refid="class_pathfinding_1_1_path_1a9460a578b3228c1030c99f624458ab42" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a9460a578b3228c1030c99f624458ab42" kindref="member" tooltip="Returns if the node can be traversed.">CanTraverse</ref><sp/>(<ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unchecked<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.Walkable<sp/>&amp;&amp;<sp/>(<ref refid="class_pathfinding_1_1_path_1a764d3ed2e9a2b25171ed02c6b4f6e165" kindref="member" tooltip="Which graph tags are traversable.">enabledTags</ref><sp/>&gt;&gt;<sp/>(int)node.Tag<sp/>&amp;<sp/>0x1)<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/>GetTraversalCost<sp/>(<ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref><sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unchecked<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a87b4a2b0a94550c3fe3dd6d651ec1ffa" kindref="member" tooltip="Returns penalty for the given tag.">GetTagPenalty</ref><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)node.Tag<sp/>)<sp/>+<sp/>node.Penalty;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259" refid="class_pathfinding_1_1_path_1a6439db113c7c15c83710c55c8e57af38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a6439db113c7c15c83710c55c8e57af38" kindref="member" tooltip="Returns if this path is done calculating.">IsDone</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1ae7e61764a09f9184c43bc8723f803e6d" kindref="member" tooltip="Current state of the path.">CompleteState</ref><sp/>!=<sp/>PathCompleteState.NotCalculated;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor">#if<sp/>!ASTAR_LOCK_FREE_PATH_STATE</highlight></codeline>
<codeline lineno="265" refid="class_pathfinding_1_1_path_1a60c14adc51a3a1448f523289e29cf6ac" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a60c14adc51a3a1448f523289e29cf6ac" kindref="member" tooltip="Threadsafe increment of the state.">AdvanceState</ref><sp/>(PathState<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lock<sp/>(stateLock)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(PathState)System.Math.Max<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)state,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)s);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a60c14adc51a3a1448f523289e29cf6ac" kindref="member" tooltip="Threadsafe increment of the state.">AdvanceState</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Threading.Interlocked.Increment<sp/>(ref<sp/>state);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278" refid="class_pathfinding_1_1_path_1a0162676fc3539f2a840e96b8e51e49d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>PathState<sp/><ref refid="class_pathfinding_1_1_path_1a0162676fc3539f2a840e96b8e51e49d9" kindref="member" tooltip="Returns the state of the path in the pathfinding pipeline.">GetState</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PathState)state;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="comment">//<sp/>Ugly<sp/>Code<sp/>Inc.<sp/>wrote<sp/>the<sp/>below<sp/>code<sp/>:D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>What<sp/>it<sp/>does<sp/>is<sp/>that<sp/>it<sp/>disables<sp/>the<sp/>LogError<sp/>function<sp/>if<sp/>ASTAR_NO_LOGGING<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>DISABLED<sp/>define<sp/>will<sp/>never<sp/>be<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ugly<sp/>way<sp/>of<sp/>writing<sp/>Conditional(&quot;!ASTAR_NO_LOGGING&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ASTAR_NO_LOGGING</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[System.Diagnostics.Conditional(</highlight><highlight class="stringliteral">&quot;DISABLED&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="293" refid="class_pathfinding_1_1_path_1a53e15c71b68b0a643f3b6e539e72527a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a53e15c71b68b0a643f3b6e539e72527a" kindref="member" tooltip="Appends msg to errorLog and logs msg to the console.">LogError</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" kindref="member" tooltip="Additional info on what went wrong.">_errorLog</ref><sp/>+=<sp/>msg;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1afd00b3509dcd7d1a4ac45bcef6c7e200" kindref="member" tooltip="Returns the active AstarPath object in the scene.">active</ref>.<ref refid="class_astar_path_1a1383d1d6a28c00bda0b0961fbe28626e" kindref="member" tooltip="The amount of debugging messages.">logPathResults</ref><sp/>!=<sp/>PathLog.None<sp/>&amp;&amp;<sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1afd00b3509dcd7d1a4ac45bcef6c7e200" kindref="member" tooltip="Returns the active AstarPath object in the scene.">active</ref>.<ref refid="class_astar_path_1a1383d1d6a28c00bda0b0961fbe28626e" kindref="member" tooltip="The amount of debugging messages.">logPathResults</ref><sp/>!=<sp/>PathLog.InGame)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning<sp/>(msg);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304" refid="class_pathfinding_1_1_path_1a0e181ac923349bcad38c672597755106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a0e181ac923349bcad38c672597755106" kindref="member" tooltip="Logs an error and calls Error() to true.">ForceLogError</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ae3e49dfe18c8b7e01e3d9772eb3a17eb" kindref="member" tooltip="Aborts the path because of an error.">Error</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" kindref="member" tooltip="Additional info on what went wrong.">_errorLog</ref><sp/>+=<sp/>msg;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(msg);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314" refid="class_pathfinding_1_1_path_1a71f6011f9c84f74acca8b63d03303cb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a71f6011f9c84f74acca8b63d03303cb6" kindref="member" tooltip="Appends a message to the errorLog.">Log</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" kindref="member" tooltip="Additional info on what went wrong.">_errorLog</ref><sp/>+=<sp/>msg;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323" refid="class_pathfinding_1_1_path_1ae3e49dfe18c8b7e01e3d9772eb3a17eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1ae3e49dfe18c8b7e01e3d9772eb3a17eb" kindref="member" tooltip="Aborts the path because of an error.">Error</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ae7e61764a09f9184c43bc8723f803e6d" kindref="member" tooltip="Current state of the path.">CompleteState</ref><sp/>=<sp/>PathCompleteState.Error;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332" refid="class_pathfinding_1_1_path_1a731dc672ab7b7c5e59aba4e6381c838a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a731dc672ab7b7c5e59aba4e6381c838a" kindref="member" tooltip="Does some error checking.">ErrorCheck</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_pathfinding_1_1_path_1a08be4d910d994f5e3fcb39d6b71c8631" kindref="member" tooltip="True if the Reset function has been called.">hasBeenReset</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Exception<sp/>(</highlight><highlight class="stringliteral">&quot;The<sp/>path<sp/>has<sp/>never<sp/>been<sp/>reset.<sp/>Use<sp/>pooling<sp/>API<sp/>or<sp/>call<sp/>Reset()<sp/>after<sp/>creating<sp/>the<sp/>path<sp/>with<sp/>the<sp/>default<sp/>constructor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a755ec4f860b3de7a34086558bdc9ed39" kindref="member" tooltip="True if the path is currently recycled (i.e in the path pool).">recycled</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Exception<sp/>(</highlight><highlight class="stringliteral">&quot;The<sp/>path<sp/>is<sp/>currently<sp/>in<sp/>a<sp/>path<sp/>pool.<sp/>Are<sp/>you<sp/>sending<sp/>the<sp/>path<sp/>for<sp/>calculation<sp/>twice?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" kindref="member" tooltip="Data for the thread calculating this path.">pathHandler</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Exception<sp/>(</highlight><highlight class="stringliteral">&quot;Field<sp/>pathHandler<sp/>is<sp/>not<sp/>set.<sp/>Please<sp/>report<sp/>this<sp/>bug.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a0162676fc3539f2a840e96b8e51e49d9" kindref="member" tooltip="Returns the state of the path in the pathfinding pipeline.">GetState</ref>()<sp/>&gt;<sp/>PathState.Processing)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Exception<sp/>(</highlight><highlight class="stringliteral">&quot;This<sp/>path<sp/>has<sp/>already<sp/>been<sp/>processed.<sp/>Do<sp/>not<sp/>request<sp/>a<sp/>path<sp/>with<sp/>the<sp/>same<sp/>path<sp/>object<sp/>twice.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345" refid="class_pathfinding_1_1_path_1a0c3330f8c56ff447a04c4215866b996f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a0c3330f8c56ff447a04c4215866b996f" kindref="member" tooltip="Called when the path enters the pool.">OnEnterPool</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref><sp/>!=<sp/>null)<sp/>Pathfinding.Util.ListPool&lt;Vector3&gt;.Release<sp/>(<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref><sp/>!=<sp/>null)<sp/>Pathfinding.Util.ListPool&lt;<ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref>&gt;.Release<sp/>(<ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356" refid="class_pathfinding_1_1_path_1a4c4ba0ffe635d14b93794268bd8e5995" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a4c4ba0ffe635d14b93794268bd8e5995" kindref="member" tooltip="Reset all values to their default values.">Reset</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1afd00b3509dcd7d1a4ac45bcef6c7e200" kindref="member" tooltip="Returns the active AstarPath object in the scene.">active</ref><sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.NullReferenceException<sp/>(</highlight><highlight class="stringliteral">&quot;No<sp/>AstarPath<sp/>object<sp/>found<sp/>in<sp/>the<sp/>scene.<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Make<sp/>sure<sp/>there<sp/>is<sp/>one<sp/>or<sp/>do<sp/>not<sp/>create<sp/>paths<sp/>in<sp/>Awake&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a08be4d910d994f5e3fcb39d6b71c8631" kindref="member" tooltip="True if the Reset function has been called.">hasBeenReset</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>(int)PathState.Created;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasedNotSilent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" kindref="member" tooltip="Data for the thread calculating this path.">pathHandler</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a1283a0bbb6c7864c345cb12e1cf1dcaa" kindref="member" tooltip="Callback to call when the path is complete.">callback</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1aa5b1e763d883bb4a484212294d812b6e" kindref="member" tooltip="Additional info on what went wrong.">_errorLog</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1afe50cc8eea8626034e7e1f1b6c2340cb" kindref="member" tooltip="Current state of the path.">pathCompleteState</ref><sp/>=<sp/>PathCompleteState.NotCalculated;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref><sp/>=<sp/>Pathfinding.Util.ListPool&lt;<ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref>&gt;.Claim();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref><sp/>=<sp/>Pathfinding.Util.ListPool&lt;Vector3&gt;.Claim();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a927fdf14b05fdd95422e8ca4ce3d02ed" kindref="member" tooltip="The node currently being processed.">currentR</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a66625d8d6c0894b4828b43f826a09b8f" kindref="member" tooltip="The duration of this path in ms.">duration</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchIterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1af8e7a9c8893e8da14adfc4b4751297cc" kindref="member" tooltip="Number of nodes this path has searched.">searchedNodes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calltime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1af6ea73fa8f1c34669d3b2d1854758808" kindref="member" tooltip="Constraint for how to search for nodes.">nnConstraint</ref><sp/>=<sp/><ref refid="class_pathfinding_1_1_path_n_n_constraint" kindref="compound" tooltip="A special NNConstraint which can use different logic for the start node and end node in a path...">PathNNConstraint</ref>.Default;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a8184493e27bfcdffd5f32e6dde4c0364" kindref="member" tooltip="The next path to be searched.">next</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a395279899207ce7f17adf9fdb8ee97ee" kindref="member" tooltip="Radius for the unit searching for the path.">radius</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ad747add0feeb6ed5dc86433cdeece0b3" kindref="member" tooltip="A mask for defining what type of ground a unit can traverse, not used in any default standard graph...">walkabilityMask</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ad12fc34ce789bce6c8a05d8a17138534" kindref="member" tooltip="Height of the character.">height</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a101e648f6ba27c123a4cbf221b6c43f6" kindref="member" tooltip="Turning radius of the character.">turnRadius</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a218b4f7c6cc2681a99c23a3b089d68b1" kindref="member" tooltip="Speed of the character.">speed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//heuristic<sp/>=<sp/>(Heuristic)0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//heuristicScale<sp/>=<sp/>1F;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a075542dfca7754bc1e390b6bb13e5e92" kindref="member" tooltip="Determines which heuristic to use.">heuristic</ref><sp/>=<sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1afd00b3509dcd7d1a4ac45bcef6c7e200" kindref="member" tooltip="Returns the active AstarPath object in the scene.">active</ref>.<ref refid="class_astar_path_1a075542dfca7754bc1e390b6bb13e5e92" kindref="member" tooltip="The heuristic to use.">heuristic</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1aee92349c20768e49169e32671e74a820" kindref="member" tooltip="Scale of the heuristic values.">heuristicScale</ref><sp/>=<sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1afd00b3509dcd7d1a4ac45bcef6c7e200" kindref="member" tooltip="Returns the active AstarPath object in the scene.">active</ref>.<ref refid="class_astar_path_1aee92349c20768e49169e32671e74a820" kindref="member" tooltip="The scale of the heuristic.">heuristicScale</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a764d3ed2e9a2b25171ed02c6b4f6e165" kindref="member" tooltip="Which graph tags are traversable.">enabledTags</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ab2deda12dc8cad2e4263b8d051ca92f9" kindref="member" tooltip="Penalties for each tag.">tagPenalties</ref><sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a59f36f01641487cff09a1e5fc8d0b80d" kindref="member" tooltip="When the call was made to start the pathfinding for this path.">callTime</ref><sp/>=<sp/>System.DateTime.UtcNow;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref><sp/>=<sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1afd00b3509dcd7d1a4ac45bcef6c7e200" kindref="member" tooltip="Returns the active AstarPath object in the scene.">active</ref>.<ref refid="class_astar_path_1a2cb06cfae8be4c8c8eb8d68255bd478a" kindref="member" tooltip="Returns the next free path ID.">GetNextPathID</ref><sp/>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasExceededTime<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1af8e7a9c8893e8da14adfc4b4751297cc" kindref="member" tooltip="Number of nodes this path has searched.">searchedNodes</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>targetTime)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System.DateTime.UtcNow.Ticks<sp/>&gt;=<sp/>targetTime;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a62fe2105bae6827581bd922708255a15" kindref="member" tooltip="Recycle the path.">Recycle</ref><sp/>();</highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>PathPool&lt;Path&gt;.Recycle<sp/>(this);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;System.Object&gt;<sp/>claimed<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;object&gt;();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>releasedNotSilent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438" refid="class_pathfinding_1_1_path_1a1f9e835985c570abc78be7a62c675655" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a1f9e835985c570abc78be7a62c675655" kindref="member" tooltip="Claim this path.">Claim</ref><sp/>(System.Object<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(claimed.Contains<sp/>(o))<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentException<sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>have<sp/>already<sp/>claimed<sp/>the<sp/>path<sp/>with<sp/>that<sp/>object<sp/>(&quot;</highlight><highlight class="normal">+o.ToString()+</highlight><highlight class="stringliteral">&quot;).<sp/>Are<sp/>you<sp/>claiming<sp/>the<sp/>path<sp/>with<sp/>the<sp/>same<sp/>object<sp/>twice?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>claimed.Add<sp/>(o);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451" refid="class_pathfinding_1_1_path_1af717fef960c204acfba19ab59390c08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1af717fef960c204acfba19ab59390c08c" kindref="member" tooltip="Releases the path silently.">ReleaseSilent</ref><sp/>(System.Object<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;claimed.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(claimed[i]<sp/>==<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>claimed.RemoveAt<sp/>(i);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(releasedNotSilent<sp/>&amp;&amp;<sp/>claimed.Count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a62fe2105bae6827581bd922708255a15" kindref="member" tooltip="Recycle the path.">Recycle</ref><sp/>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(claimed.Count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentException<sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>releasing<sp/>a<sp/>path<sp/>which<sp/>is<sp/>not<sp/>claimed<sp/>at<sp/>all<sp/>(most<sp/>likely<sp/>it<sp/>has<sp/>been<sp/>pooled<sp/>already).<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Are<sp/>you<sp/>releasing<sp/>the<sp/>path<sp/>with<sp/>the<sp/>same<sp/>object<sp/>(&quot;</highlight><highlight class="normal">+o.ToString()+</highlight><highlight class="stringliteral">&quot;)<sp/>twice?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentException<sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>releasing<sp/>a<sp/>path<sp/>which<sp/>has<sp/>not<sp/>been<sp/>claimed<sp/>with<sp/>this<sp/>object<sp/>(&quot;</highlight><highlight class="normal">+o.ToString()+</highlight><highlight class="stringliteral">&quot;).<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Are<sp/>you<sp/>releasing<sp/>the<sp/>path<sp/>with<sp/>the<sp/>same<sp/>object<sp/>twice?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476" refid="class_pathfinding_1_1_path_1a1ec02830fecdbafb6bfc14cd0a6fee88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a1ec02830fecdbafb6bfc14cd0a6fee88" kindref="member" tooltip="Releases a path claim.">Release</ref><sp/>(System.Object<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;claimed.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(claimed[i]<sp/>==<sp/>o)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>claimed.RemoveAt<sp/>(i);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasedNotSilent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(claimed.Count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a62fe2105bae6827581bd922708255a15" kindref="member" tooltip="Recycle the path.">Recycle</ref><sp/>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(claimed.Count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentException<sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>releasing<sp/>a<sp/>path<sp/>which<sp/>is<sp/>not<sp/>claimed<sp/>at<sp/>all<sp/>(most<sp/>likely<sp/>it<sp/>has<sp/>been<sp/>pooled<sp/>already).<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Are<sp/>you<sp/>releasing<sp/>the<sp/>path<sp/>with<sp/>the<sp/>same<sp/>object<sp/>(&quot;</highlight><highlight class="normal">+o.ToString()+</highlight><highlight class="stringliteral">&quot;)<sp/>twice?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.ArgumentException<sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>are<sp/>releasing<sp/>a<sp/>path<sp/>which<sp/>has<sp/>not<sp/>been<sp/>claimed<sp/>with<sp/>this<sp/>object<sp/>(&quot;</highlight><highlight class="normal">+o.ToString()+</highlight><highlight class="stringliteral">&quot;).<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Are<sp/>you<sp/>releasing<sp/>the<sp/>path<sp/>with<sp/>the<sp/>same<sp/>object<sp/>twice?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500" refid="class_pathfinding_1_1_path_1a97fb5f73bba5ea3580f8e09bbc05d2ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a97fb5f73bba5ea3580f8e09bbc05d2ac" kindref="member" tooltip="Traces the calculated path from the end node to the start.">Trace</ref><sp/>(<ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref><sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref><sp/>c<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c.parent;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>1024)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning<sp/>(</highlight><highlight class="stringliteral">&quot;Inifinity<sp/>loop?<sp/>&gt;1024<sp/>node<sp/>path.<sp/>Remove<sp/>this<sp/>message<sp/>if<sp/>you<sp/>really<sp/>have<sp/>that<sp/>long<sp/>paths<sp/>(Path.cs,<sp/>Trace<sp/>function)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>capacities<sp/>for<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_profiler" kindref="compound">AstarProfiler</ref>.StartProfile<sp/>(</highlight><highlight class="stringliteral">&quot;Check<sp/>List<sp/>Capacities&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>.Capacity<sp/>&lt;<sp/>count)<sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>.Capacity<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>.Capacity<sp/>&lt;<sp/>count)<sp/><ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>.Capacity<sp/>=<sp/>count;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_profiler" kindref="compound">AstarProfiler</ref>.EndProfile<sp/>();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>from;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i&lt;count;i++)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>.Add<sp/>(c.node);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c.parent;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>count/2;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;half;i++)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_graph_node" kindref="compound">GraphNode</ref><sp/>tmp<sp/>=<sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>[i];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>[i]<sp/>=<sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>[count-i-1];</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>[count<sp/>-<sp/>i<sp/>-<sp/>1]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;count;i++)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a606d877ec5788bbbf53311a2dff80ffd" kindref="member" tooltip="Holds the (perhaps post processed) path as a Vector3 array.">vectorPath</ref>.Add<sp/>((Vector3)<ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>[i].Position);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543" refid="class_pathfinding_1_1_path_1a17d094a91f9fbde1ecdfbee4929d4a5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a17d094a91f9fbde1ecdfbee4929d4a5d" kindref="member" tooltip="Returns a debug string for this path.">DebugString</ref><sp/>(PathLog<sp/>logMode)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logMode<sp/>==<sp/>PathLog.None<sp/>||<sp/>(!<ref refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" kindref="member" tooltip="If the path failed, this is true.">error</ref><sp/>&amp;&amp;<sp/>logMode<sp/>==<sp/>PathLog.OnlyErrors))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//debugStringBuilder.Length<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Text.StringBuilder<sp/>text<sp/>=<sp/><ref refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" kindref="member" tooltip="Data for the thread calculating this path.">pathHandler</ref>.DebugStringBuilder;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(<ref refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" kindref="member" tooltip="If the path failed, this is true.">error</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Path<sp/>Failed<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Path<sp/>Completed<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(</highlight><highlight class="stringliteral">&quot;Computation<sp/>Time<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>((<ref refid="class_pathfinding_1_1_path_1a66625d8d6c0894b4828b43f826a09b8f" kindref="member" tooltip="The duration of this path in ms.">duration</ref>).ToString<sp/>(logMode<sp/>==<sp/>PathLog.Heavy<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;0.000<sp/>ms<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0.00<sp/>ms<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(</highlight><highlight class="stringliteral">&quot;Searched<sp/>Nodes<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(<ref refid="class_pathfinding_1_1_path_1af8e7a9c8893e8da14adfc4b4751297cc" kindref="member" tooltip="Number of nodes this path has searched.">searchedNodes</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" kindref="member" tooltip="If the path failed, this is true.">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>Path<sp/>Length<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(<ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref><sp/>==<sp/>null<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Null&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="class_pathfinding_1_1_path_1ac76dd31632dd24f062d1949d77af84d2" kindref="member" tooltip="Holds the path as a Node array.">path</ref>.Count.ToString<sp/>());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logMode<sp/>==<sp/>PathLog.Heavy)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(</highlight><highlight class="stringliteral">&quot;\nSearch<sp/>Iterations<sp/>&quot;</highlight><highlight class="normal">+searchIterations);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//text.Append<sp/>(&quot;\nBinary<sp/>Heap<sp/>size<sp/>at<sp/>complete:<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-2<sp/>because<sp/>numberOfItems<sp/>includes<sp/>the<sp/>next<sp/>item<sp/>to<sp/>be<sp/>added<sp/>and<sp/>item<sp/>zero<sp/>is<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//text.Append<sp/>(pathHandler.open<sp/>==<sp/>null<sp/>?<sp/>&quot;null&quot;<sp/>:<sp/>(pathHandler.open.numberOfItems-2).ToString<sp/>());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&quot;\nEnd<sp/>node\n<sp/>G<sp/>=<sp/>&quot;+p.endNode.g+&quot;\n<sp/><sp/><sp/>H<sp/>=<sp/>&quot;+p.endNode.h+&quot;\n<sp/><sp/><sp/>F<sp/>=<sp/>&quot;+p.endNode.f+&quot;\n<sp/><sp/><sp/>Point<sp/><sp/><sp/>&quot;+p.endPoint</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+&quot;\nStart<sp/>Point<sp/>=<sp/>&quot;+p.startPoint+&quot;\n&quot;+&quot;Start<sp/>Node<sp/>graph:<sp/>&quot;+p.startNode.graphIndex+&quot;<sp/>End<sp/>Node<sp/>graph:<sp/>&quot;+p.endNode.graphIndex+</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\nBinary<sp/>Heap<sp/>size<sp/>at<sp/>completion:<sp/>&quot;+(p.open<sp/>==<sp/>null<sp/>?<sp/>&quot;Null&quot;<sp/>:<sp/>p.open.numberOfItems.ToString<sp/>())*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a7a3172cc98e93d8eadfb9ab30373799e" kindref="member" tooltip="If the path failed, this is true.">error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(</highlight><highlight class="stringliteral">&quot;\nError:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(<ref refid="class_pathfinding_1_1_path_1a0fd7bd65be2ae15aecab7278699acbb1" kindref="member" tooltip="Log messages with info about eventual errors.">errorLog</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(</highlight><highlight class="stringliteral">&quot;\nPath<sp/>Number<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Append<sp/>(<ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text.ToString<sp/>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591" refid="class_pathfinding_1_1_path_1abbccb97a07005e7f6ae594a6c5f27ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1abbccb97a07005e7f6ae594a6c5f27ae4" kindref="member" tooltip="Calls callback to return the calculated path.">ReturnPath</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pathfinding_1_1_path_1a1283a0bbb6c7864c345cb12e1cf1dcaa" kindref="member" tooltip="Callback to call when the path is complete.">callback</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a1283a0bbb6c7864c345cb12e1cf1dcaa" kindref="member" tooltip="Callback to call when the path is complete.">callback</ref><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601" refid="class_pathfinding_1_1_path_1af10f6fdb6dd808e3d92b97e835ca56d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1af10f6fdb6dd808e3d92b97e835ca56d7" kindref="member" tooltip="Prepares low level path variables for calculation.">PrepareBase</ref><sp/>(<ref refid="class_pathfinding_1_1_path_handler" kindref="compound">PathHandler</ref><sp/><ref refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" kindref="member" tooltip="Data for the thread calculating this path.">pathHandler</ref>)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Path<sp/>IDs<sp/>have<sp/>overflowed<sp/>65K,<sp/>cleanup<sp/>is<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Since<sp/>pathIDs<sp/>are<sp/>handed<sp/>out<sp/>sequentially,<sp/>we<sp/>can<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathHandler.PathID<sp/>&gt;<sp/><ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathHandler.<ref refid="class_pathfinding_1_1_path_handler_1a29622574cea17b7804c5fed2ddb2c105" kindref="member" tooltip="Set all node&amp;#39;s pathIDs to 0.">ClearPathIDs</ref><sp/>();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Make<sp/>sure<sp/>the<sp/>path<sp/>has<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>pathHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.pathHandler<sp/>=<sp/><ref refid="class_pathfinding_1_1_path_1a7dcbab6b828dabed9a14ca5874bd7958" kindref="member" tooltip="Data for the thread calculating this path.">pathHandler</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Assign<sp/>relevant<sp/>path<sp/>data<sp/>to<sp/>the<sp/>pathHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathHandler.InitializeForPath<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a731dc672ab7b7c5e59aba4e6381c838a" kindref="member" tooltip="Does some error checking.">ErrorCheck</ref><sp/>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(System.Exception<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_path_1a0e181ac923349bcad38c672597755106" kindref="member" tooltip="Logs an error and calls Error() to true.">ForceLogError</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Exception<sp/>in<sp/>path<sp/>&quot;</highlight><highlight class="normal">+<ref refid="class_pathfinding_1_1_path_1a7f58d0f5c9ee7555995152b8a249ee90" kindref="member" tooltip="ID of this path.">pathID</ref>+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+e.ToString());</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Prepare<sp/>();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_path_1a7b76681b9ce8b04cd53c77dfda686188" kindref="member" tooltip="Initializes the path.">Initialize</ref><sp/>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateStep<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>targetTick);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Path.cs"/>
  </compounddef>
</doxygen>
