<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_point_generator_editor_8cs" kind="file">
    <compoundname>PointGeneratorEditor.cs</compoundname>
    <innerclass refid="class_point_graph_editor" prot="public">PointGraphEditor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">[<ref refid="class_custom_graph_editor" kindref="compound">CustomGraphEditor</ref><sp/>(typeof(<ref refid="class_pathfinding_1_1_point_graph" kindref="compound" tooltip="Basic point graph.">PointGraph</ref>),</highlight><highlight class="stringliteral">&quot;PointGraph&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="7" refid="class_point_graph_editor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_point_graph_editor" kindref="compound">PointGraphEditor</ref><sp/>:<sp/><ref refid="class_graph_editor" kindref="compound">GraphEditor</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_point_graph_editor_1a18b9b7a1add549aa8462c4e80cfc6376" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_point_graph_editor_1a18b9b7a1add549aa8462c4e80cfc6376" kindref="member" tooltip="Override to implement graph inspectors.">OnInspectorGUI</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_point_graph" kindref="compound" tooltip="Basic point graph.">PointGraph</ref><sp/>graph<sp/>=<sp/>target<sp/>as<sp/><ref refid="class_pathfinding_1_1_point_graph" kindref="compound" tooltip="Basic point graph.">PointGraph</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment">#if<sp/>UNITY_3_3</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.root<sp/>=<sp/>(Transform)EditorGUILayout.ObjectField<sp/>(new<sp/>GUIContent<sp/>(&quot;Root&quot;,&quot;All<sp/>childs<sp/>of<sp/>this<sp/>object<sp/>will<sp/>be<sp/>used<sp/>as<sp/>nodes,<sp/>if<sp/>it<sp/>is<sp/>not<sp/>set,<sp/>a<sp/>tag<sp/>search<sp/>will<sp/>be<sp/>used<sp/>instead<sp/>(see<sp/>below)&quot;),graph.root,typeof(Transform));</highlight></codeline>
<codeline lineno="15"><highlight class="comment">#else</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.root<sp/>=<sp/>(Transform)EditorGUILayout.ObjectField<sp/>(new<sp/>GUIContent<sp/>(&quot;Root&quot;,&quot;All<sp/>childs<sp/>of<sp/>this<sp/>object<sp/>will<sp/>be<sp/>used<sp/>as<sp/>nodes,<sp/>if<sp/>it<sp/>is<sp/>not<sp/>set,<sp/>a<sp/>tag<sp/>search<sp/>will<sp/>be<sp/>used<sp/>instead<sp/>(see<sp/>below)&quot;),graph.root,typeof(Transform),true);</highlight></codeline>
<codeline lineno="17"><highlight class="comment">#endif</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log<sp/>(EditorGUI.indentLevel);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1ad6c76e656de413e2772c563a64899e11" kindref="member" tooltip="Childs of this transform are treated as nodes.">root</ref><sp/>=<sp/>ObjectField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Root&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;All<sp/>childs<sp/>of<sp/>this<sp/>object<sp/>will<sp/>be<sp/>used<sp/>as<sp/>nodes,<sp/>if<sp/>it<sp/>is<sp/>not<sp/>set,<sp/>a<sp/>tag<sp/>search<sp/>will<sp/>be<sp/>used<sp/>instead<sp/>(see<sp/>below)&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1ad6c76e656de413e2772c563a64899e11" kindref="member" tooltip="Childs of this transform are treated as nodes.">root</ref>,typeof(Transform),</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>as<sp/>Transform;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1a4dfde4fec9731901f89801f08296457f" kindref="member" tooltip="Recursively search for childnodes to the root.">recursive</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Recursive&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Should<sp/>childs<sp/>of<sp/>the<sp/>childs<sp/>in<sp/>the<sp/>root<sp/>GameObject<sp/>be<sp/>searched&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1a4dfde4fec9731901f89801f08296457f" kindref="member" tooltip="Recursively search for childnodes to the root.">recursive</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1a5375ad4d549aa327ac61bfa839c6b3c7" kindref="member" tooltip="If no root is set, all nodes with the tag is used as nodes.">searchTag</ref><sp/>=<sp/>EditorGUILayout.TagField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Tag&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;If<sp/>root<sp/>is<sp/>not<sp/>set,<sp/>all<sp/>objects<sp/>with<sp/>this<sp/>tag<sp/>will<sp/>be<sp/>used<sp/>as<sp/>nodes&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1a5375ad4d549aa327ac61bfa839c6b3c7" kindref="member" tooltip="If no root is set, all nodes with the tag is used as nodes.">searchTag</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.<ref refid="class_pathfinding_1_1_point_graph_1ad6c76e656de413e2772c563a64899e11" kindref="member" tooltip="Childs of this transform are treated as nodes.">root</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(</highlight><highlight class="stringliteral">&quot;All<sp/>childs<sp/>&quot;</highlight><highlight class="normal">+(graph.<ref refid="class_pathfinding_1_1_point_graph_1a4dfde4fec9731901f89801f08296457f" kindref="member" tooltip="Recursively search for childnodes to the root.">recursive</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;and<sp/>sub-childs<sp/>&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+</highlight><highlight class="stringliteral">&quot;of<sp/>&apos;root&apos;<sp/>will<sp/>be<sp/>used<sp/>as<sp/>nodes\nSet<sp/>root<sp/>to<sp/>null<sp/>to<sp/>use<sp/>a<sp/>tag<sp/>search<sp/>instead&quot;</highlight><highlight class="normal">,<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(</highlight><highlight class="stringliteral">&quot;All<sp/>object<sp/>with<sp/>the<sp/>tag<sp/>&apos;&quot;</highlight><highlight class="normal">+graph.<ref refid="class_pathfinding_1_1_point_graph_1a5375ad4d549aa327ac61bfa839c6b3c7" kindref="member" tooltip="If no root is set, all nodes with the tag is used as nodes.">searchTag</ref>+</highlight><highlight class="stringliteral">&quot;&apos;<sp/>will<sp/>be<sp/>used<sp/>as<sp/>nodes&quot;</highlight><highlight class="normal">+(graph.<ref refid="class_pathfinding_1_1_point_graph_1a5375ad4d549aa327ac61bfa839c6b3c7" kindref="member" tooltip="If no root is set, all nodes with the tag is used as nodes.">searchTag</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Untagged&quot;</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;\nNote:<sp/>the<sp/>tag<sp/>&apos;Untagged&apos;<sp/>cannot<sp/>be<sp/>used&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1af22920f041b5db58118ffb07b37e9a25" kindref="member" tooltip="Max distance for a connection to be valid.">maxDistance</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Max<sp/>Distance&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;The<sp/>max<sp/>distance<sp/>in<sp/>world<sp/>space<sp/>for<sp/>a<sp/>connection<sp/>to<sp/>be<sp/>valid.<sp/>A<sp/>zero<sp/>counts<sp/>as<sp/>infinity&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1af22920f041b5db58118ffb07b37e9a25" kindref="member" tooltip="Max distance for a connection to be valid.">maxDistance</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUIUtility.LookLikeControls<sp/>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_4_0</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1ab81e66f7e550a9f4ee76f5e240f64891" kindref="member" tooltip="Max distance along the axis for a connection to be valid.">limits</ref><sp/>=<sp/>EditorGUILayout.Vector3Field<sp/>(</highlight><highlight class="stringliteral">&quot;Max<sp/>Distance<sp/>(axis<sp/>aligned)&quot;</highlight><highlight class="normal">,graph.<ref refid="class_pathfinding_1_1_point_graph_1ab81e66f7e550a9f4ee76f5e240f64891" kindref="member" tooltip="Max distance along the axis for a connection to be valid.">limits</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.<ref refid="class_editor_g_u_i_layoutx_1a4f537ee14854fa37ddcab45dad7df29e" kindref="member" tooltip="Begin horizontal indent for the next control.">BeginIndent</ref><sp/>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1ab81e66f7e550a9f4ee76f5e240f64891" kindref="member" tooltip="Max distance along the axis for a connection to be valid.">limits</ref><sp/>=<sp/>EditorGUILayout.Vector3Field<sp/>(</highlight><highlight class="stringliteral">&quot;Max<sp/>Distance<sp/>(axis<sp/>aligned)&quot;</highlight><highlight class="normal">,graph.<ref refid="class_pathfinding_1_1_point_graph_1ab81e66f7e550a9f4ee76f5e240f64891" kindref="member" tooltip="Max distance along the axis for a connection to be valid.">limits</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.<ref refid="class_editor_g_u_i_layoutx_1a89d954078f1b81e8814f8e52bd9beaeb" kindref="member" tooltip="End indent.">EndIndent</ref><sp/>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUIUtility.LookLikeInspector<sp/>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1ab0c137fe9a580a2863ee89514b635cd0" kindref="member" tooltip="Use raycasts to check connections.">raycast</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Raycast&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Use<sp/>raycasting<sp/>to<sp/>check<sp/>if<sp/>connections<sp/>are<sp/>valid<sp/>between<sp/>each<sp/>pair<sp/>of<sp/>nodes&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1ab0c137fe9a580a2863ee89514b635cd0" kindref="member" tooltip="Use raycasts to check connections.">raycast</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editor.GUILayoutx.BeginFadeArea<sp/>(graph.<ref refid="class_pathfinding_1_1_point_graph_1ab0c137fe9a580a2863ee89514b635cd0" kindref="member" tooltip="Use raycasts to check connections.">raycast</ref>,</highlight><highlight class="stringliteral">&quot;raycast&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel++;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1a264d5f661a491686d8841cd329815849" kindref="member" tooltip="Use thick raycast.">thickRaycast</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Thick<sp/>Raycast&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;A<sp/>thick<sp/>raycast<sp/>checks<sp/>along<sp/>a<sp/>thick<sp/>line<sp/>with<sp/>radius<sp/>instead<sp/>of<sp/>just<sp/>along<sp/>a<sp/>line&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1a264d5f661a491686d8841cd329815849" kindref="member" tooltip="Use thick raycast.">thickRaycast</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editor.GUILayoutx.BeginFadeArea<sp/>(graph.<ref refid="class_pathfinding_1_1_point_graph_1a264d5f661a491686d8841cd329815849" kindref="member" tooltip="Use thick raycast.">thickRaycast</ref>,</highlight><highlight class="stringliteral">&quot;thickRaycast&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1a7b422a6984a8c66f6cbd41b73c25bd7d" kindref="member" tooltip="Thick raycast radius.">thickRaycastRadius</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Raycast<sp/>Radius&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;The<sp/>radius<sp/>in<sp/>world<sp/>units<sp/>for<sp/>the<sp/>thick<sp/>raycast&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_point_graph_1a7b422a6984a8c66f6cbd41b73c25bd7d" kindref="member" tooltip="Thick raycast radius.">thickRaycastRadius</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editor.GUILayoutx.EndFadeArea<sp/>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//graph.mask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>EditorGUILayout.LayerField<sp/>(&quot;Mask&quot;,(int)Mathf.Log<sp/>(graph.mask,2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1a427e7d78bb1a767d205d60ef36cdf39c" kindref="member" tooltip="Layer mask to use for raycast.">mask</ref><sp/>=<sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.LayerMaskField<sp/>(</highlight><highlight class="comment">/*new<sp/>GUIContent<sp/>(*/</highlight><highlight class="stringliteral">&quot;Mask&quot;</highlight><highlight class="comment">/*,&quot;Used<sp/>to<sp/>mask<sp/>which<sp/>layers<sp/>should<sp/>be<sp/>checked&quot;)*/</highlight><highlight class="normal">,graph.<ref refid="class_pathfinding_1_1_point_graph_1a427e7d78bb1a767d205d60ef36cdf39c" kindref="member" tooltip="Layer mask to use for raycast.">mask</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel--;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editor.GUILayoutx.EndFadeArea<sp/>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="class_point_graph_editor_1a93db742f6ae2b2a8198affeb29043e2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_point_graph_editor_1a93db742f6ae2b2a8198affeb29043e2a" kindref="member" tooltip="Override to implement scene Gizmos drawing for the graph editor.">OnDrawGizmos</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_point_graph" kindref="compound" tooltip="Basic point graph.">PointGraph</ref><sp/>graph<sp/>=<sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref><sp/>as<sp/><ref refid="class_pathfinding_1_1_point_graph" kindref="compound" tooltip="Basic point graph.">PointGraph</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log<sp/>(&quot;Gizmos<sp/>&quot;+(graph<sp/>==<sp/>null)+&quot;<sp/>&quot;+target);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Handles.color<sp/>=<sp/>new<sp/>Color<sp/>(0.161F,0.341F,1F,0.5F);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.color<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color<sp/>(0.161F,0.341F,1F,0.5F);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>i=0;i&lt;graph.nodes.Length;i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.<ref refid="class_pathfinding_1_1_point_graph_1ad6c76e656de413e2772c563a64899e11" kindref="member" tooltip="Childs of this transform are treated as nodes.">root</ref><sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawChildren<sp/>(graph,<sp/>graph.<ref refid="class_pathfinding_1_1_point_graph_1ad6c76e656de413e2772c563a64899e11" kindref="member" tooltip="Childs of this transform are treated as nodes.">root</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject[]<sp/>gos<sp/>=<sp/>GameObject.FindGameObjectsWithTag<sp/>(graph.<ref refid="class_pathfinding_1_1_point_graph_1a5375ad4d549aa327ac61bfa839c6b3c7" kindref="member" tooltip="If no root is set, all nodes with the tag is used as nodes.">searchTag</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;gos.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawCube<sp/>(gos[i].transform.position,Vector3.one*HandleUtility.GetHandleSize(gos[i].transform.position)*0.1F);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawChildren<sp/>(<ref refid="class_pathfinding_1_1_point_graph" kindref="compound" tooltip="Basic point graph.">PointGraph</ref><sp/>graph,<sp/>Transform<sp/>tr)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Transform<sp/>child<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tr)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawCube<sp/>(child.position,Vector3.one*HandleUtility.GetHandleSize(child.position)*0.1F);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Handles.CubeCap<sp/>(-1,graph.nodes[i].position,Quaternion.identity,HandleUtility.GetHandleSize(graph.nodes[i].position)*0.1F);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Gizmos.DrawCube<sp/>(nodes[i].position,Vector3.one);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.<ref refid="class_pathfinding_1_1_point_graph_1a4dfde4fec9731901f89801f08296457f" kindref="member" tooltip="Recursively search for childnodes to the root.">recursive</ref>)<sp/>DrawChildren<sp/>(graph,<sp/>child);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Editor/GraphEditors/PointGeneratorEditor.cs"/>
  </compounddef>
</doxygen>
