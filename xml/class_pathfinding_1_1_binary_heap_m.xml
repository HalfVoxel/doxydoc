<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="class_pathfinding_1_1_binary_heap_m" kind="class" prot="public">
    <compoundname>Pathfinding::BinaryHeapM</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pathfinding_1_1_binary_heap_m_1a668f32fc2c5d7abc333385a91a79ec0d" prot="private" static="no" mutable="no">
        <type><ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref>[]</type>
        <definition>PathNode [] binaryHeap</definition>
        <argsstring></argsstring>
        <name>binaryHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="266" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pathfinding_1_1_binary_heap_m_1a8c17e01c89721611afec886547fcfeed" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float growthFactor</definition>
        <argsstring></argsstring>
        <name>growthFactor</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="269" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pathfinding_1_1_binary_heap_m_1aefeb70f054f51564fc05a92bc9013a6f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int numberOfItems</definition>
        <argsstring></argsstring>
        <name>numberOfItems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="267" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pathfinding_1_1_binary_heap_m_1a3ef68868531315beda93dc8ae5cc26aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BinaryHeapM</definition>
        <argsstring>(int numberOfElements)</argsstring>
        <name>BinaryHeapM</name>
        <param>
          <type>int</type>
          <declname>numberOfElements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="271" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_binary_heap_m_1ad12cf7a99a13a74563a56d8f7d70eea2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Add</definition>
        <argsstring>(PathNode node)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Adds a node to the heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="285" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="285" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_binary_heap_m_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="276" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_binary_heap_m_1accb2fb8a7cbb5ff1ec63078fa93bb85c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref></type>
        <definition>PathNode GetNode</definition>
        <argsstring>(int i)</argsstring>
        <name>GetNode</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="280" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_binary_heap_m_1afc899f9edd398e7654fe22627d3327f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rebuild</definition>
        <argsstring>()</argsstring>
        <name>Rebuild</name>
        <briefdescription>
<para>Rebuilds the heap by trickeling down all items. </para>        </briefdescription>
        <detaileddescription>
<para>Usually called after the hTarget on a path has been changed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="398" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="398" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinding_1_1_binary_heap_m_1aba07015c709d2f221a0b0ef743ea586f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pathfinding_1_1_path_node" kindref="compound">PathNode</ref></type>
        <definition>PathNode Remove</definition>
        <argsstring>()</argsstring>
        <name>Remove</name>
        <briefdescription>
<para>Returns the node with the lowest F score from the heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="352" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="352" bodyend="394"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binary heap implementation. </para>    </briefdescription>
    <detaileddescription>
<para>Binary heaps are really fast for ordering nodes in a way that makes it possible to get the node with the lowest F score. Also known as a priority queue. <simplesect kind="see"><para><ulink url="http://en.wikipedia.org/wiki/Binary_heap">http://en.wikipedia.org/wiki/Binary_heap</ulink> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1831">
        <label>GraphNode</label>
        <link refid="class_pathfinding_1_1_graph_node"/>
      </node>
      <node id="1830">
        <label>PathNode</label>
        <link refid="class_pathfinding_1_1_path_node"/>
        <childnode refid="1830" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="1831" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
      <node id="1829">
        <label>BinaryHeapM</label>
        <link refid="class_pathfinding_1_1_binary_heap_m"/>
        <childnode refid="1830" relation="usage">
          <edgelabel>binaryHeap</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" line="265" bodyfile="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Core/Misc/BinaryHeap.cs" bodystart="265" bodyend="430"/>
    <listofallmembers>
      <member refid="class_pathfinding_1_1_binary_heap_m_1ad12cf7a99a13a74563a56d8f7d70eea2" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>Add</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1a668f32fc2c5d7abc333385a91a79ec0d" prot="private" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>binaryHeap</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1a3ef68868531315beda93dc8ae5cc26aa" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>BinaryHeapM</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>Clear</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1accb2fb8a7cbb5ff1ec63078fa93bb85c" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>GetNode</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1a8c17e01c89721611afec886547fcfeed" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>growthFactor</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1aefeb70f054f51564fc05a92bc9013a6f" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>numberOfItems</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1afc899f9edd398e7654fe22627d3327f7" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>Rebuild</name></member>
      <member refid="class_pathfinding_1_1_binary_heap_m_1aba07015c709d2f221a0b0ef743ea586f" prot="public" virt="non-virtual"><scope>Pathfinding::BinaryHeapM</scope><name>Remove</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
