<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_lightweight_r_v_o_8cs" kind="file">
    <compoundname>LightweightRVO.cs</compoundname>
    <innerclass refid="class_lightweight_r_v_o" prot="public">LightweightRVO</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding.RVO;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">[RequireComponent(typeof(MeshFilter))]</highlight></codeline>
<codeline lineno="19" refid="class_lightweight_r_v_o" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_lightweight_r_v_o" kindref="compound" tooltip="Lightweight RVO Circle Example.">LightweightRVO</ref><sp/>:<sp/>MonoBehaviour<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="class_lightweight_r_v_o_1a3d921a4bbfd9cf05f3b6a9b2e0da6919" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1a3d921a4bbfd9cf05f3b6a9b2e0da6919" kindref="member" tooltip="How large is the area where agents are placed.">exampleScale</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>RVOExampleType<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Circle,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pathfinding_1_1_r_v_o_1_1_line" kindref="compound" tooltip="ORCA Line.">Line</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RandomStreams</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>RVOExampleType<sp/>type<sp/>=<sp/>RVOExampleType.Circle;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="class_lightweight_r_v_o_1a5050a760c11da521cd4aee6336f6529f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1a5050a760c11da521cd4aee6336f6529f" kindref="member" tooltip="Agent radius.">radius</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="class_lightweight_r_v_o_1a3c105180f93a78cf3fb0903df278cf3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1a3c105180f93a78cf3fb0903df278cf3f" kindref="member" tooltip="Max speed for an agent.">maxSpeed</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="class_lightweight_r_v_o_1aae87304c6923138c031ff9918dd3a997" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1aae87304c6923138c031ff9918dd3a997" kindref="member" tooltip="How far in the future too look for agents.">agentTimeHorizon</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="47" refid="class_lightweight_r_v_o_1aaae09db88e3bf152d9ad44de274b7a5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1aaae09db88e3bf152d9ad44de274b7a5c" kindref="member" tooltip="How far in the future too look for obstacles.">obstacleTimeHorizon</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="49" refid="class_lightweight_r_v_o_1afc4894bb6cdea8cdd3fb808617a6783a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1afc4894bb6cdea8cdd3fb808617a6783a" kindref="member" tooltip="Max number of neighbour agents to take into account.">maxNeighbours</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="51" refid="class_lightweight_r_v_o_1ac6a0745845c06ab9b18b14e5b1f7d653" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1ac6a0745845c06ab9b18b14e5b1f7d653" kindref="member" tooltip="Max distance for other agents to take them into account.">neighbourDist</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="class_lightweight_r_v_o_1a4db38b2afd9d13b66047dc08ce6d11ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_lightweight_r_v_o_1a4db38b2afd9d13b66047dc08ce6d11ff" kindref="member" tooltip="Offset from the agent position the actual drawn postition.">renderingOffset</ref><sp/>=<sp/>Vector3.up*0.1f;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh<sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Pathfinding.RVO.Simulator<sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;IAgent&gt;<sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="class_lightweight_r_v_o_1a3a7e2e1da58ff6ddb9eceeb2b46e95bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Vector3&gt;<sp/><ref refid="class_lightweight_r_v_o_1a3a7e2e1da58ff6ddb9eceeb2b46e95bd" kindref="member" tooltip="Goals for each agent.">goals</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>List&lt;Color&gt;<sp/><ref refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" kindref="member" tooltip="Color for each agent.">colors</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3[]<sp/>verts;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector2[]<sp/>uv;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>tris;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Color[]<sp/>meshColors;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Mesh();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_v_o_simulator" kindref="compound" tooltip="Unity front end for an RVO simulator.">RVOSimulator</ref><sp/>rvoSim<sp/>=<sp/>FindObjectOfType<sp/>(typeof(<ref refid="class_r_v_o_simulator" kindref="compound" tooltip="Unity front end for an RVO simulator.">RVOSimulator</ref>))<sp/>as<sp/><ref refid="class_r_v_o_simulator" kindref="compound" tooltip="Unity front end for an RVO simulator.">RVOSimulator</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rvoSim<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(</highlight><highlight class="stringliteral">&quot;No<sp/>RVOSimulator<sp/>could<sp/>be<sp/>found<sp/>in<sp/>the<sp/>scene.<sp/>Please<sp/>add<sp/>a<sp/>RVOSimulator<sp/>component<sp/>to<sp/>any<sp/>GameObject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref><sp/>=<sp/>rvoSim.<ref refid="class_r_v_o_simulator_1a9262cfa14f44bead1b2b007edee41678" kindref="member" tooltip="Get the internal simulator.">GetSimulator</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetComponent&lt;MeshFilter&gt;().<ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" kindref="member" tooltip="Create a number of agents in circle and restart simulation.">CreateAgents</ref><sp/>(<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnGUI<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" kindref="member" tooltip="Create a number of agents in circle and restart simulation.">CreateAgents</ref><sp/>(2);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;100&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" kindref="member" tooltip="Create a number of agents in circle and restart simulation.">CreateAgents</ref><sp/>(100);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;1000&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" kindref="member" tooltip="Create a number of agents in circle and restart simulation.">CreateAgents</ref><sp/>(1000);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;5000&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" kindref="member" tooltip="Create a number of agents in circle and restart simulation.">CreateAgents</ref><sp/>(5000);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uniformDistance<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1a5050a760c11da521cd4aee6336f6529f" kindref="member" tooltip="Agent radius.">radius</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>Random.value<sp/>+<sp/>Random.value;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radius<sp/>*<sp/>(2-v);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radius<sp/>*<sp/>v;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lightweight_r_v_o_1aa3b088710e0e19c48fe06cff1c2a07bd" kindref="member" tooltip="Create a number of agents in circle and restart simulation.">CreateAgents</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref><sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;IAgent&gt;<sp/>(<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a3a7e2e1da58ff6ddb9eceeb2b46e95bd" kindref="member" tooltip="Goals for each agent.">goals</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Vector3&gt;(<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" kindref="member" tooltip="Color for each agent.">colors</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Color&gt;(<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a2911f81a2013552e46287c0e03f7ca27" kindref="member" tooltip="Removes all agents from the simulation.">ClearAgents</ref><sp/>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>RVOExampleType.Circle)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>circleRad<sp/>=<sp/>Mathf.Sqrt(<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>*radius*radius*4<sp/>/<sp/>Mathf.PI)<sp/>*<sp/><ref refid="class_lightweight_r_v_o_1a3d921a4bbfd9cf05f3b6a9b2e0da6919" kindref="member" tooltip="How large is the area where agents are placed.">exampleScale</ref><sp/>*<sp/>0.05f;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(Mathf.Cos<sp/>(i*Mathf.PI*2.0f/agentCount),<sp/>0,<sp/>Mathf.Sin<sp/>(i*Mathf.PI*2.0f/agentCount))<sp/>*<sp/>circleRad;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent" kindref="compound" tooltip="Exposes properties of an Agent class.">IAgent</ref><sp/>agent<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a38f12c64701af3a6dcfa425b7a6a54ca" kindref="member" tooltip="Add a previously removed agent to the simulation.">AddAgent</ref><sp/>(pos);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Add<sp/>(agent);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goals.Add<sp/>(-pos);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors.Add<sp/>(<ref refid="class_lightweight_r_v_o_1aac311ae722bfb75a8899f6f74420d882" kindref="member" tooltip="Converts an HSV color to an RGB color, according to the algorithm described at http://en.wikipedia.org/wiki/HSL_and_HSV.">HSVToRGB</ref><sp/>(i*360.0f/agentCount,1,1));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>RVOExampleType.Line)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>((i<sp/>%<sp/>2<sp/>==<sp/>0<sp/>?1:-1)<sp/>*<sp/><ref refid="class_lightweight_r_v_o_1a3d921a4bbfd9cf05f3b6a9b2e0da6919" kindref="member" tooltip="How large is the area where agents are placed.">exampleScale</ref>,<sp/>0,<sp/>(i/2)<sp/>*<sp/>radius<sp/>*<sp/>2.5f);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent" kindref="compound" tooltip="Exposes properties of an Agent class.">IAgent</ref><sp/>agent<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a38f12c64701af3a6dcfa425b7a6a54ca" kindref="member" tooltip="Add a previously removed agent to the simulation.">AddAgent</ref><sp/>(pos);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Add<sp/>(agent);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goals.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(-pos.x,pos.y,pos.z));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors.Add<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0<sp/>?<sp/>Color.red<sp/>:<sp/>Color.blue);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>RVOExampleType.Point)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(Mathf.Cos<sp/>(i*Mathf.PI*2.0f/agentCount),<sp/>0,<sp/>Mathf.Sin<sp/>(i*Mathf.PI*2.0f/agentCount))<sp/>*<sp/><ref refid="class_lightweight_r_v_o_1a3d921a4bbfd9cf05f3b6a9b2e0da6919" kindref="member" tooltip="How large is the area where agents are placed.">exampleScale</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent" kindref="compound" tooltip="Exposes properties of an Agent class.">IAgent</ref><sp/>agent<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a38f12c64701af3a6dcfa425b7a6a54ca" kindref="member" tooltip="Add a previously removed agent to the simulation.">AddAgent</ref><sp/>(pos);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Add<sp/>(agent);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goals.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(0,pos.y,0));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors.Add<sp/>(<ref refid="class_lightweight_r_v_o_1aac311ae722bfb75a8899f6f74420d882" kindref="member" tooltip="Converts an HSV color to an RGB color, according to the algorithm described at http://en.wikipedia.org/wiki/HSL_and_HSV.">HSVToRGB</ref><sp/>(i*360.0f/agentCount,1,1));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>RVOExampleType.RandomStreams)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>circleRad<sp/>=<sp/>Mathf.Sqrt(<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>*radius*radius*4<sp/>/<sp/>Mathf.PI)<sp/>*<sp/><ref refid="class_lightweight_r_v_o_1a3d921a4bbfd9cf05f3b6a9b2e0da6919" kindref="member" tooltip="How large is the area where agents are placed.">exampleScale</ref><sp/>*<sp/>0.05f;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a95bcb790e75fde09eec7202257e57e27" kindref="member" tooltip="Number of agents created at start.">agentCount</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>Random.value*Mathf.PI*2.0f;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>targetAngle<sp/>=<sp/>Random.value*Mathf.PI*2.0f;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(Mathf.Cos<sp/>(angle),<sp/>0,<sp/>Mathf.Sin<sp/>(angle))<sp/>*<sp/>uniformDistance(circleRad);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent" kindref="compound" tooltip="Exposes properties of an Agent class.">IAgent</ref><sp/>agent<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1add5f6cfafe4f43c8da15040c62eb4282" kindref="member" tooltip="Reference to the simulator in the scene.">sim</ref>.<ref refid="class_pathfinding_1_1_r_v_o_1_1_simulator_1a38f12c64701af3a6dcfa425b7a6a54ca" kindref="member" tooltip="Add a previously removed agent to the simulation.">AddAgent</ref><sp/>(pos);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Add<sp/>(agent);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goals.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(Mathf.Cos<sp/>(targetAngle),<sp/>0,<sp/>Mathf.Sin<sp/>(targetAngle))<sp/>*<sp/>uniformDistance(circleRad));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors.Add<sp/>(<ref refid="class_lightweight_r_v_o_1aac311ae722bfb75a8899f6f74420d882" kindref="member" tooltip="Converts an HSV color to an RGB color, according to the algorithm described at http://en.wikipedia.org/wiki/HSL_and_HSV.">HSVToRGB</ref><sp/>(targetAngle*Mathf.Rad2Deg,1,1));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent" kindref="compound" tooltip="Exposes properties of an Agent class.">IAgent</ref><sp/>agent<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>[i];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a062172106d8148f032b915309c6ff4e6" kindref="member" tooltip="Radius of the agent.">Radius</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a5050a760c11da521cd4aee6336f6529f" kindref="member" tooltip="Agent radius.">radius</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a59dd60dd4af16d02d7ef44afbab5b5bd" kindref="member" tooltip="Max speed of the agent.">MaxSpeed</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a3c105180f93a78cf3fb0903df278cf3f" kindref="member" tooltip="Max speed for an agent.">maxSpeed</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a53ad184600a4f4546ddf43377761b275" kindref="member" tooltip="Max number of estimated seconds to look into the future for collisions with agents.">AgentTimeHorizon</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1aae87304c6923138c031ff9918dd3a997" kindref="member" tooltip="How far in the future too look for agents.">agentTimeHorizon</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a4bb69978b1050721b4a0e4ae16934681" kindref="member" tooltip="Max number of estimated seconds to look into the future for collisions with obstacles.">ObstacleTimeHorizon</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1aaae09db88e3bf152d9ad44de274b7a5c" kindref="member" tooltip="How far in the future too look for obstacles.">obstacleTimeHorizon</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1aefa0a2fa749eaaf8b7f42a52644147d4" kindref="member" tooltip="Max number of agents to take into account.">MaxNeighbours</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1afc4894bb6cdea8cdd3fb808617a6783a" kindref="member" tooltip="Max number of neighbour agents to take into account.">maxNeighbours</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a2b331457dd0de4b32c7be20e4e8f69ce" kindref="member" tooltip="Max distance to other agents to take them into account.">NeighbourDist</ref><sp/>=<sp/><ref refid="class_lightweight_r_v_o_1ac6a0745845c06ab9b18b14e5b1f7d653" kindref="member" tooltip="Max distance for other agents to take them into account.">neighbourDist</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[4*<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Count];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2[verts.Length];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Count*2*3];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshColors<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color[verts.Length];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref><sp/>==<sp/>null<sp/>||<sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref><sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Count<sp/>!=<sp/><ref refid="class_lightweight_r_v_o_1a3a7e2e1da58ff6ddb9eceeb2b46e95bd" kindref="member" tooltip="Goals for each agent.">goals</ref>.Count)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(</highlight><highlight class="stringliteral">&quot;Agent<sp/>count<sp/>does<sp/>not<sp/>match<sp/>goal<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>desired<sp/>velocity<sp/>for<sp/>all<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pos<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>[i].InterpolatedPosition;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>dir<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a3a7e2e1da58ff6ddb9eceeb2b46e95bd" kindref="member" tooltip="Goals for each agent.">goals</ref>[i]<sp/>-<sp/>pos;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>Vector3.ClampMagnitude<sp/>(dir,1);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>[i].DesiredVelocity<sp/>=<sp/>dir<sp/>*<sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>[i].MaxSpeed;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent" kindref="compound" tooltip="Exposes properties of an Agent class.">IAgent</ref><sp/>agent<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1a528a46d939b955ebe7dd99d04c5ffdec" kindref="member" tooltip="All agents handled by this script.">agents</ref>[i];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>square<sp/>with<sp/>the<sp/>&quot;forward&quot;<sp/>direction<sp/>along<sp/>the<sp/>agent&apos;s<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>forward<sp/>=<sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1af8c81063d0d740c6958ccc043ed51b2c" kindref="member" tooltip="Velocity of the agent.">Velocity</ref>.normalized<sp/>*<sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a062172106d8148f032b915309c6ff4e6" kindref="member" tooltip="Radius of the agent.">Radius</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forward<sp/>==<sp/>Vector3.zero)<sp/>forward<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,0,agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a062172106d8148f032b915309c6ff4e6" kindref="member" tooltip="Radius of the agent.">Radius</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>right<sp/>=<sp/>Vector3.Cross<sp/>(Vector3.up,<sp/>forward);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>orig<sp/>=<sp/>agent.<ref refid="interface_pathfinding_1_1_r_v_o_1_1_i_agent_1a11465363f6e783dd91eb4a352dc6c050" kindref="member" tooltip="Interpolated position of agent.">InterpolatedPosition</ref><sp/>+<sp/><ref refid="class_lightweight_r_v_o_1a4db38b2afd9d13b66047dc08ce6d11ff" kindref="member" tooltip="Offset from the agent position the actual drawn postition.">renderingOffset</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vc<sp/>=<sp/>4*i;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tc<sp/>=<sp/>2*3*i;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[vc+0]<sp/>=<sp/>(orig<sp/>+<sp/>forward<sp/>-<sp/>right);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[vc+1]<sp/>=<sp/>(orig<sp/>+<sp/>forward<sp/>+<sp/>right);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[vc+2]<sp/>=<sp/>(orig<sp/>-<sp/>forward<sp/>+<sp/>right);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts[vc+3]<sp/>=<sp/>(orig<sp/>-<sp/>forward<sp/>-<sp/>right);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[vc+0]<sp/>=<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2<sp/>(0,1));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[vc+1]<sp/>=<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2<sp/>(1,1));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[vc+2]<sp/>=<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2<sp/>(1,0));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uv[vc+3]<sp/>=<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2<sp/>(0,0));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshColors[vc+0]<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" kindref="member" tooltip="Color for each agent.">colors</ref>[i];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshColors[vc+1]<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" kindref="member" tooltip="Color for each agent.">colors</ref>[i];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshColors[vc+2]<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" kindref="member" tooltip="Color for each agent.">colors</ref>[i];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshColors[vc+3]<sp/>=<sp/><ref refid="class_lightweight_r_v_o_1af70f6a0defc8ca2b648b7442274df960" kindref="member" tooltip="Color for each agent.">colors</ref>[i];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[tc+0]<sp/>=<sp/>(vc<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[tc+1]<sp/>=<sp/>(vc<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[tc+2]<sp/>=<sp/>(vc<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[tc+3]<sp/>=<sp/>(vc<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[tc+4]<sp/>=<sp/>(vc<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[tc+5]<sp/>=<sp/>(vc<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>.Clear<sp/>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>.vertices<sp/>=<sp/>verts;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>.uv<sp/>=<sp/>uv;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>.colors<sp/>=<sp/>meshColors;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>.triangles<sp/>=<sp/>tris;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_lightweight_r_v_o_1a7b3d47f25e4b65dc13c94392a3da8076" kindref="member" tooltip="Mesh for rendering.">mesh</ref>.RecalculateNormals<sp/>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237" refid="class_lightweight_r_v_o_1aac311ae722bfb75a8899f6f74420d882" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_lightweight_r_v_o_1aac311ae722bfb75a8899f6f74420d882" kindref="member" tooltip="Converts an HSV color to an RGB color, according to the algorithm described at http://en.wikipedia.org/wiki/HSL_and_HSV.">HSVToRGB</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Min;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Chroma;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Hdash;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>X;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0,g<sp/>=<sp/>0,b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chroma<sp/>=<sp/>s<sp/>*<sp/>v;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hdash<sp/>=<sp/>h<sp/>/<sp/>60.0f;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>Chroma<sp/>*<sp/>(1.0f<sp/>-<sp/>System.Math.Abs((Hdash<sp/>%<sp/>2.0f)<sp/>-<sp/>1.0f));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hdash<sp/>&lt;<sp/>1.0f)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Chroma;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hdash<sp/>&lt;<sp/>2.0f)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>Chroma;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hdash<sp/>&lt;<sp/>3.0f)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>Chroma;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hdash<sp/>&lt;<sp/>4.0f)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g=<sp/>X;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>Chroma;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hdash<sp/>&lt;<sp/>5.0f)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>Chroma;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hdash<sp/>&lt;<sp/>6.0f)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Chroma;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Min<sp/>=<sp/>v<sp/>-<sp/>Chroma;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>Min;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>+=<sp/>Min;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>+=<sp/>Min;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color<sp/>(r,g,b);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/ExampleScenes/Example11_RVO/LightweightRVO.cs"/>
  </compounddef>
</doxygen>
