<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_graph_update_scene_editor_8cs" kind="file">
    <compoundname>GraphUpdateSceneEditor.cs</compoundname>
    <innerclass refid="class_graph_update_scene_editor" prot="public">GraphUpdateSceneEditor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">[CustomEditor(typeof(<ref refid="class_graph_update_scene" kindref="compound" tooltip="Helper class for easily updating graphs.">GraphUpdateScene</ref>))]</highlight></codeline>
<codeline lineno="7" refid="class_graph_update_scene_editor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_graph_update_scene_editor" kindref="compound">GraphUpdateSceneEditor</ref><sp/>:<sp/>Editor<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnInspectorGUI<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_graph_update_scene" kindref="compound" tooltip="Helper class for easily updating graphs.">GraphUpdateScene</ref><sp/>script<sp/>=<sp/>target<sp/>as<sp/><ref refid="class_graph_update_scene" kindref="compound" tooltip="Helper class for easily updating graphs.">GraphUpdateScene</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>==<sp/>null)<sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[0];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3[]<sp/>prePoints<sp/>=<sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawDefaultInspector<sp/>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prePoints<sp/>!=<sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>)<sp/>{<sp/>script.<ref refid="class_graph_update_scene_1ae0fc7f33e11b681b1bfce87c7bb9a5c6" kindref="member" tooltip="Recalculate convex points.">RecalcConvex</ref><sp/>();<sp/>HandleUtility.Repaint<sp/>();<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preConvex<sp/>=<sp/>script.<ref refid="class_graph_update_scene_1adf57f7307451b26c33863e4ffb86a82d" kindref="member" tooltip="Use the convex hull (XZ space) of the points.">convex</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1adf57f7307451b26c33863e4ffb86a82d" kindref="member" tooltip="Use the convex hull (XZ space) of the points.">convex</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Convex&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Sets<sp/>if<sp/>only<sp/>the<sp/>convex<sp/>hull<sp/>of<sp/>the<sp/>points<sp/>should<sp/>be<sp/>used<sp/>or<sp/>the<sp/>whole<sp/>polygon&quot;</highlight><highlight class="normal">),script.<ref refid="class_graph_update_scene_1adf57f7307451b26c33863e4ffb86a82d" kindref="member" tooltip="Use the convex hull (XZ space) of the points.">convex</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1adf57f7307451b26c33863e4ffb86a82d" kindref="member" tooltip="Use the convex hull (XZ space) of the points.">convex</ref><sp/>!=<sp/>preConvex)<sp/>{<sp/>script.<ref refid="class_graph_update_scene_1ae0fc7f33e11b681b1bfce87c7bb9a5c6" kindref="member" tooltip="Recalculate convex points.">RecalcConvex</ref><sp/>();<sp/>HandleUtility.Repaint<sp/>();<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1abeb615cf25c5b6fe31a1e148433478cf" kindref="member" tooltip="Minumum height of the bounds of the resulting Graph Update Object.">minBoundsHeight</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Min<sp/>Bounds<sp/>Height&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Defines<sp/>a<sp/>minimum<sp/>height<sp/>to<sp/>be<sp/>used<sp/>for<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>GUO.\nUseful<sp/>if<sp/>you<sp/>define<sp/>points<sp/>in<sp/>2D<sp/>(which<sp/>would<sp/>give<sp/>height<sp/>0)&quot;</highlight><highlight class="normal">),<sp/>script.<ref refid="class_graph_update_scene_1abeb615cf25c5b6fe31a1e148433478cf" kindref="member" tooltip="Minumum height of the bounds of the resulting Graph Update Object.">minBoundsHeight</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a1c94aae03b28deb259e681fd32aefdb9" kindref="member" tooltip="Apply this graph update object on start.">applyOnStart</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="stringliteral">&quot;Apply<sp/>On<sp/>Start&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1a1c94aae03b28deb259e681fd32aefdb9" kindref="member" tooltip="Apply this graph update object on start.">applyOnStart</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a14572a55674ed823ac6efefa762c1324" kindref="member" tooltip="Apply this graph update object whenever a graph is rescanned.">applyOnScan</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="stringliteral">&quot;Apply<sp/>On<sp/>Scan&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1a14572a55674ed823ac6efefa762c1324" kindref="member" tooltip="Apply this graph update object whenever a graph is rescanned.">applyOnScan</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a2861ffb55997ec06c4bab822ca1f6eb7" kindref="member" tooltip="Set to true to set all targeted nodese walkability to setWalkability.">modifyWalkability</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="stringliteral">&quot;Modify<sp/>walkability&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1a2861ffb55997ec06c4bab822ca1f6eb7" kindref="member" tooltip="Set to true to set all targeted nodese walkability to setWalkability.">modifyWalkability</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1a2861ffb55997ec06c4bab822ca1f6eb7" kindref="member" tooltip="Set to true to set all targeted nodese walkability to setWalkability.">modifyWalkability</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel++;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ac4e414eb56d8eb7fb25f0ad49b60c49f" kindref="member" tooltip="See modifyWalkability.">setWalkability</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="stringliteral">&quot;Walkability&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1ac4e414eb56d8eb7fb25f0ad49b60c49f" kindref="member" tooltip="See modifyWalkability.">setWalkability</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel--;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ae8b4eacb5710bd15dd52a291119d6729" kindref="member" tooltip="Penalty to add to nodes.">penaltyDelta</ref><sp/>=<sp/>EditorGUILayout.IntField<sp/>(</highlight><highlight class="stringliteral">&quot;Penalty<sp/>Delta&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1ae8b4eacb5710bd15dd52a291119d6729" kindref="member" tooltip="Penalty to add to nodes.">penaltyDelta</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1ae8b4eacb5710bd15dd52a291119d6729" kindref="member" tooltip="Penalty to add to nodes.">penaltyDelta</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(</highlight><highlight class="stringliteral">&quot;Be<sp/>careful<sp/>when<sp/>lowering<sp/>the<sp/>penalty.<sp/>Negative<sp/>penalties<sp/>are<sp/>not<sp/>supported<sp/>and<sp/>will<sp/>instead<sp/>underflow<sp/>and<sp/>get<sp/>really<sp/>high.&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;HelpBox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>worldSpace<sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Use<sp/>World<sp/>Space&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Specify<sp/>coordinates<sp/>in<sp/>world<sp/>space<sp/>or<sp/>local<sp/>space.<sp/>When<sp/>using<sp/>local<sp/>space<sp/>you<sp/>can<sp/>move<sp/>the<sp/>GameObject<sp/>around<sp/>and<sp/>the<sp/>points<sp/>will<sp/>follow&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>script.<ref refid="class_graph_update_scene_1a440a07d51b8e0538091901ecf7760049" kindref="member" tooltip="Use world space for coordinates.">useWorldSpace</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worldSpace<sp/>!=<sp/>script.<ref refid="class_graph_update_scene_1a440a07d51b8e0538091901ecf7760049" kindref="member" tooltip="Use world space for coordinates.">useWorldSpace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a774305f0f6316fe5dca98e7f05e0dcc7" kindref="member" tooltip="Switches between using world space and not using local space.">ToggleUseWorldSpace</ref><sp/>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ConfigureTagsAsMultiple</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1add96fb95ff8c820c477a6b9e7d70145a" kindref="member" tooltip="If enabled, set all nodes&amp;#39; tags to setTag.">modifyTag</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Modify<sp/>Tags&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>tags<sp/>of<sp/>the<sp/>nodes<sp/>be<sp/>modified&quot;</highlight><highlight class="normal">),script.<ref refid="class_graph_update_scene_1add96fb95ff8c820c477a6b9e7d70145a" kindref="member" tooltip="If enabled, set all nodes&amp;#39; tags to setTag.">modifyTag</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.TagsMaskField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Tags<sp/>Change&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Which<sp/>tags<sp/>to<sp/>change<sp/>the<sp/>value<sp/>of.<sp/>The<sp/>values<sp/>the<sp/>tags<sp/>will<sp/>gain<sp/>can<sp/>be<sp/>set<sp/>below&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Tags<sp/>Set&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;What<sp/>to<sp/>set<sp/>the<sp/>tag<sp/>to<sp/>if<sp/>it<sp/>is<sp/>going<sp/>to<sp/>be<sp/>changed&quot;</highlight><highlight class="normal">),ref<sp/>script.tags);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1add96fb95ff8c820c477a6b9e7d70145a" kindref="member" tooltip="If enabled, set all nodes&amp;#39; tags to setTag.">modifyTag</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Modify<sp/>Tags&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>tags<sp/>of<sp/>the<sp/>nodes<sp/>be<sp/>modified&quot;</highlight><highlight class="normal">),script.<ref refid="class_graph_update_scene_1add96fb95ff8c820c477a6b9e7d70145a" kindref="member" tooltip="If enabled, set all nodes&amp;#39; tags to setTag.">modifyTag</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1add96fb95ff8c820c477a6b9e7d70145a" kindref="member" tooltip="If enabled, set all nodes&amp;#39; tags to setTag.">modifyTag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel++;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1acb3b2cf8a1820af99439c79bc87f8d01" kindref="member" tooltip="If modifyTag is enabled, set all nodes&amp;#39; tags to this value.">setTag</ref><sp/>=<sp/>EditorGUILayout.Popup<sp/>(</highlight><highlight class="stringliteral">&quot;Set<sp/>Tag&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1acb3b2cf8a1820af99439c79bc87f8d01" kindref="member" tooltip="If modifyTag is enabled, set all nodes&amp;#39; tags to this value.">setTag</ref>,<ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1a81e083c427494b31cbf1353328a6d2ca" kindref="member" tooltip="Tries to find an AstarPath object and return tag names.">FindTagNames</ref><sp/>());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel--;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUI.color<sp/>=<sp/>Color.red;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;Tags<sp/>can<sp/>be<sp/>used<sp/>to<sp/>restrict<sp/>which<sp/>units<sp/>can<sp/>walk<sp/>on<sp/>what<sp/>ground.<sp/>Click<sp/>here<sp/>for<sp/>more<sp/>info&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;HelpBox&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Application.OpenURL<sp/>(<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.GetURL<sp/>(</highlight><highlight class="stringliteral">&quot;tags&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUI.color<sp/>=<sp/>Color.white;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.Separator<sp/>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUILayout.Space<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUI.Toggle<sp/>(r,script.lockToY,&quot;&quot;,&quot;Button&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a004317cfa6123403bd59ecfe5e39a39a" kindref="member" tooltip="Lock all points to Y = lockToYValue.">lockToY</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="stringliteral">&quot;Lock<sp/>to<sp/>Y&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1a004317cfa6123403bd59ecfe5e39a39a" kindref="member" tooltip="Lock all points to Y = lockToYValue.">lockToY</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1a004317cfa6123403bd59ecfe5e39a39a" kindref="member" tooltip="Lock all points to Y = lockToYValue.">lockToY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a4b2c54cb42341e1ecd4535c45b1d9ab0" kindref="member" tooltip="if lockToY is enabled lock all points to this value">lockToYValue</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="stringliteral">&quot;Lock<sp/>to<sp/>Y<sp/>value&quot;</highlight><highlight class="normal">,script.<ref refid="class_graph_update_scene_1a4b2c54cb42341e1ecd4535c45b1d9ab0" kindref="member" tooltip="if lockToY is enabled lock all points to this value">lockToYValue</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel--;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ac7f99067ee2f9395763a24cc58169a79" kindref="member" tooltip="Lock all points to a specific Y value.">LockToY</ref><sp/>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.Separator<sp/>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUI.changed)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.RegisterUndo<sp/>(script,</highlight><highlight class="stringliteral">&quot;Modify<sp/>Settings<sp/>on<sp/>GraphUpdateObject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorUtility.SetDirty<sp/>(target);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;Clear<sp/>all<sp/>points&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.RegisterUndo<sp/>(script,</highlight><highlight class="stringliteral">&quot;Removed<sp/>All<sp/>Points&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[0];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ae0fc7f33e11b681b1bfce87c7bb9a5c6" kindref="member" tooltip="Recalculate convex points.">RecalcConvex</ref><sp/>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedPoint<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pointGizmosRadius<sp/>=<sp/>0.09F;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Color<sp/>PointColor<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color<sp/>(1,0.36F,0,0.6F);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Color<sp/>PointSelectedColor<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color<sp/>(1,0.24F,0,1.0F);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSceneGUI<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_graph_update_scene" kindref="compound" tooltip="Helper class for easily updating graphs.">GraphUpdateScene</ref><sp/>script<sp/>=<sp/>target<sp/>as<sp/><ref refid="class_graph_update_scene" kindref="compound" tooltip="Helper class for easily updating graphs.">GraphUpdateScene</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>==<sp/>null)<sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[0];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector3&gt;<sp/>points<sp/>=<sp/>Pathfinding.Util.ListPool&lt;Vector3&gt;.Claim<sp/>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.AddRange<sp/>(script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4x4<sp/>invMatrix<sp/>=<sp/>script.<ref refid="class_graph_update_scene_1a440a07d51b8e0538091901ecf7760049" kindref="member" tooltip="Use world space for coordinates.">useWorldSpace</ref><sp/>?<sp/>Matrix4x4.identity<sp/>:<sp/>script.transform.worldToLocalMatrix;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script.<ref refid="class_graph_update_scene_1a440a07d51b8e0538091901ecf7760049" kindref="member" tooltip="Use world space for coordinates.">useWorldSpace</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4x4<sp/>matrix<sp/>=<sp/>script.transform.localToWorldMatrix;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;points.Count;i++)<sp/>points[i]<sp/>=<sp/>matrix.MultiplyPoint3x4(points[i]);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tools.current<sp/>!=<sp/>Tool.View<sp/>&amp;&amp;<sp/>Event.current.type<sp/>==<sp/>EventType.Layout)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleUtility.AddControl<sp/>(-i<sp/>-<sp/>1,HandleUtility.DistanceToLine<sp/>(points[i],points[i]));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tools.current<sp/>!=<sp/>Tool.View)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleUtility.AddDefaultControl<sp/>(0);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;points.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>selectedPoint<sp/>&amp;&amp;<sp/>Tools.current<sp/>==<sp/>Tool.Move)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.color<sp/>=<sp/>PointSelectedColor;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.SetSnapshotTarget(script,<sp/></highlight><highlight class="stringliteral">&quot;Moved<sp/>Point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.SphereCap<sp/>(-i-1,points[i],Quaternion.identity,HandleUtility.GetHandleSize<sp/>(points[i])*pointGizmosRadius*2);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>pre<sp/>=<sp/>points[i];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>post<sp/>=<sp/>Handles.PositionHandle<sp/>(points[i],Quaternion.identity);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pre<sp/>!=<sp/>post)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>[i]<sp/>=<sp/>invMatrix.MultiplyPoint3x4(post);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.color<sp/>=<sp/>PointColor;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.SphereCap<sp/>(-i-1,points[i],Quaternion.identity,HandleUtility.GetHandleSize<sp/>(points[i])*pointGizmosRadius);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Input.GetMouseButtonDown(0))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>undos<sp/>when<sp/>we<sp/>press<sp/>the<sp/>Mouse<sp/>button.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.CreateSnapshot();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.RegisterSnapshot();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event.current.type<sp/>==<sp/>EventType.MouseDown)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pre<sp/>=<sp/>selectedPoint;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedPoint<sp/>=<sp/>-(HandleUtility.nearestControl+1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pre<sp/>!=<sp/>selectedPoint)<sp/>GUI.changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event.current.type<sp/>==<sp/>EventType.MouseDown<sp/>&amp;&amp;<sp/>Event.current.shift<sp/>&amp;&amp;<sp/>Tools.current<sp/>==<sp/>Tool.Move)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Event.current.modifiers<sp/>&amp;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)EventModifiers.Alt)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>nearestControl<sp/>=<sp/>-(HandleUtility.nearestControl+1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectedPoint<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>selectedPoint<sp/>&lt;<sp/>points.Count)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.RegisterUndo<sp/>(script,</highlight><highlight class="stringliteral">&quot;Removed<sp/>Point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector3&gt;<sp/>arr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Vector3&gt;(script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr.RemoveAt<sp/>(selectedPoint);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.RemoveAt<sp/>(selectedPoint);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>=<sp/>arr.ToArray<sp/>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ae0fc7f33e11b681b1bfce87c7bb9a5c6" kindref="member" tooltip="Recalculate convex points.">RecalcConvex</ref><sp/>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Event.current.modifiers<sp/>&amp;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)EventModifiers.Control)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>points.Count<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSeg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minDist<sp/>=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.PositiveInfinity;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;points.Count;i++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>HandleUtility.DistanceToLine<sp/>(points[i],points[(i+1)%points.Count]);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>minDist)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minSeg<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minDist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Object<sp/>hit<sp/>=<sp/>HandleUtility.RaySnap<sp/>(HandleUtility.GUIPointToWorldRay(Event.current.mousePosition));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RaycastHit<sp/>rayhit<sp/>=<sp/>(RaycastHit)hit;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.RegisterUndo<sp/>(script,</highlight><highlight class="stringliteral">&quot;Added<sp/>Point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Vector3&gt;<sp/>arr<sp/>=<sp/>Pathfinding.Util.ListPool&lt;Vector3&gt;.Claim<sp/>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr.AddRange<sp/>(script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.Insert<sp/>(minSeg+1,rayhit.point);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script.<ref refid="class_graph_update_scene_1a440a07d51b8e0538091901ecf7760049" kindref="member" tooltip="Use world space for coordinates.">useWorldSpace</ref>)<sp/>rayhit.point<sp/>=<sp/>invMatrix.MultiplyPoint3x4<sp/>(rayhit.point);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr.Insert<sp/>(minSeg+1,rayhit.point);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>=<sp/>arr.ToArray<sp/>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ae0fc7f33e11b681b1bfce87c7bb9a5c6" kindref="member" tooltip="Recalculate convex points.">RecalcConvex</ref><sp/>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pathfinding.Util.ListPool&lt;Vector3&gt;.Release<sp/>(arr);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Object<sp/>hit<sp/>=<sp/>HandleUtility.RaySnap<sp/>(HandleUtility.GUIPointToWorldRay(Event.current.mousePosition));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RaycastHit<sp/>rayhit<sp/>=<sp/>(RaycastHit)hit;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Undo.RegisterUndo<sp/>(script,</highlight><highlight class="stringliteral">&quot;Added<sp/>Point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3[]<sp/>arr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>.Length+1];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[i]<sp/>=<sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>[i];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.Add<sp/>(rayhit.point);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!script.<ref refid="class_graph_update_scene_1a440a07d51b8e0538091901ecf7760049" kindref="member" tooltip="Use world space for coordinates.">useWorldSpace</ref>)<sp/>rayhit.point<sp/>=<sp/>invMatrix.MultiplyPoint3x4<sp/>(rayhit.point);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref>.Length]<sp/>=<sp/>rayhit.point;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1a4c3eb69bface7072f36347cf91ad5d51" kindref="member" tooltip="Points which define the region to update.">points</ref><sp/>=<sp/>arr;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script.<ref refid="class_graph_update_scene_1ae0fc7f33e11b681b1bfce87c7bb9a5c6" kindref="member" tooltip="Recalculate convex points.">RecalcConvex</ref><sp/>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event.current.Use<sp/>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event.current.shift<sp/>&amp;&amp;<sp/>Event.current.type<sp/>==<sp/>EventType.MouseDrag)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Event.current.Use<sp/>();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!script.useWorldSpace)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Matrix4x4<sp/>matrix<sp/>=<sp/>script.transform.worldToLocalMatrix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>for<sp/>(int<sp/>i=0;i&lt;points.Count;i++)<sp/>points[i]<sp/>=<sp/>matrix.MultiplyPoint3x4(points[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pathfinding.Util.ListPool&lt;Vector3&gt;.Release<sp/>(points);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUI.changed)<sp/>{<sp/>HandleUtility.Repaint<sp/>();<sp/>EditorUtility.SetDirty<sp/>(target);<sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Editor/GraphUpdateSceneEditor.cs"/>
  </compounddef>
</doxygen>
