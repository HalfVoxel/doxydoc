<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_recast_graph_editor_8cs" kind="file">
    <compoundname>RecastGraphEditor.cs</compoundname>
    <innerclass refid="class_recast_graph_editor" prot="public">RecastGraphEditor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//@AstarPro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">[<ref refid="class_custom_graph_editor" kindref="compound">CustomGraphEditor</ref><sp/>(typeof(<ref refid="class_pathfinding_1_1_recast_graph" kindref="compound" tooltip="Automatically generates navmesh graphs based on world geometry.">RecastGraph</ref>),</highlight><highlight class="stringliteral">&quot;RecastGraph&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="9" refid="class_recast_graph_editor" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_recast_graph_editor" kindref="compound">RecastGraphEditor</ref><sp/>:<sp/><ref refid="class_graph_editor" kindref="compound">GraphEditor</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/>meshRenderer;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MeshFilter<sp/>meshFilter;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Mesh<sp/>navmeshRender;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Renderer<sp/>navmeshRenderer;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Material<sp/><ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tagMaskFoldout<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateDebugMesh<sp/>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>callback<sp/>when<sp/>scanning<sp/>has<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1a56fc0edd3b51a122454f6dc811191a7a" kindref="member" tooltip="Called after scanning has completed fully.">OnLatePostScan</ref><sp/>+=<sp/>UpdateDebugMesh;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDestroy<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshRenderer<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject.DestroyImmediate<sp/>(meshRenderer);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDisable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.<ref refid="class_astar_path_1a56fc0edd3b51a122454f6dc811191a7a" kindref="member" tooltip="Called after scanning has completed fully.">OnLatePostScan</ref><sp/>-=<sp/>UpdateDebugMesh;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshRenderer<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GameObject.DestroyImmediate<sp/>(meshRenderer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateDebugMesh<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_recast_graph" kindref="compound" tooltip="Automatically generates navmesh graphs based on world geometry.">RecastGraph</ref><sp/>graph<sp/>=<sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref><sp/>as<sp/><ref refid="class_pathfinding_1_1_recast_graph" kindref="compound" tooltip="Automatically generates navmesh graphs based on world geometry.">RecastGraph</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshRenderer<sp/>=<sp/>GameObject.Find<sp/>(</highlight><highlight class="stringliteral">&quot;RecastGraph_&quot;</highlight><highlight class="normal">+graph.<ref refid="class_pathfinding_1_1_nav_graph_1a0c8f65c9d3118ff62b1d40950e5154f8" kindref="member" tooltip="Used as an ID of the graph, considered to be unique.">guid</ref>.ToString<sp/>());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshRenderer<sp/>==<sp/>null<sp/>||<sp/>meshFilter<sp/>==<sp/>null<sp/>||<sp/>navmeshRender<sp/>==<sp/>null<sp/>||<sp/>navmeshRenderer<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshRenderer<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshRenderer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GameObject<sp/>(</highlight><highlight class="stringliteral">&quot;RecastGraph_&quot;</highlight><highlight class="normal">+graph.<ref refid="class_pathfinding_1_1_nav_graph_1a0c8f65c9d3118ff62b1d40950e5154f8" kindref="member" tooltip="Used as an ID of the graph, considered to be unique.">guid</ref>.ToString<sp/>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshRenderer.hideFlags<sp/>=<sp/></highlight><highlight class="comment">/*HideFlags.NotEditable<sp/>|*/</highlight><highlight class="normal"><sp/>HideFlags.DontSave;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meshRenderer.GetComponent&lt;<ref refid="class_nav_mesh_renderer" kindref="compound">NavMeshRenderer</ref>&gt;()<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshRenderer.AddComponent&lt;<ref refid="class_nav_mesh_renderer" kindref="compound">NavMeshRenderer</ref>&gt;();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshFilter<sp/>filter;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((filter<sp/>=<sp/>meshRenderer.GetComponent&lt;MeshFilter&gt;())<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter<sp/>=<sp/>meshRenderer.AddComponent&lt;MeshFilter&gt;();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer<sp/>=<sp/>meshRenderer.GetComponent&lt;MeshRenderer&gt;();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navmeshRenderer<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer<sp/>=<sp/>meshRenderer.AddComponent&lt;MeshRenderer&gt;();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer.castShadows<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer.receiveShadows<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter.sharedMesh<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Mesh<sp/>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.sharedMesh<sp/>=<sp/>navmeshRender;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender<sp/>=<sp/>filter.sharedMesh;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Navmesh_&quot;</highlight><highlight class="normal">+graph.<ref refid="class_pathfinding_1_1_nav_graph_1a0c8f65c9d3118ff62b1d40950e5154f8" kindref="member" tooltip="Used as an ID of the graph, considered to be unique.">guid</ref>.ToString<sp/>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref><sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref><sp/>=<sp/>AssetDatabase.LoadAssetAtPath<sp/>(<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.<ref refid="class_astar_path_editor_1ac067f8c610f6fea4379c2d5a5e8abe48" kindref="member" tooltip="Path to the editor assets folder for the A* Pathfinding Project.">editorAssets</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Materials/Navmesh.mat&quot;</highlight><highlight class="normal">,typeof(Material))<sp/>as<sp/>Material;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref><sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning<sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>navmesh<sp/>material<sp/>at<sp/>path<sp/>&quot;</highlight><highlight class="normal">+<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.<ref refid="class_astar_path_editor_1ac067f8c610f6fea4379c2d5a5e8abe48" kindref="member" tooltip="Path to the editor assets folder for the A* Pathfinding Project.">editorAssets</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Materials/Navmesh.mat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer.material<sp/>=<sp/><ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateDebugMesh<sp/>(<ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref><sp/>astar)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateDebugMesh<sp/>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RecastGraph<sp/>graph<sp/>=<sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref><sp/>as<sp/>RecastGraph;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(graph.useCRecast)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshRenderer.transform.position<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshRenderer.transform.localScale<sp/>=<sp/>Vector3.one;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meshRenderer.transform.position<sp/>=<sp/>graph.forcedBounds.min;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meshRenderer.transform.localScale<sp/>=<sp/>new<sp/>Vector3(graph.cellSize<sp/>*<sp/>100,<sp/>1,<sp/>graph.cellSize<sp/>*<sp/>100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>graph.nodes<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>graph.vectorVertices<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.Clear<sp/>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.vertices<sp/>=<sp/>graph.vectorVertices;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Vector3[]<sp/>vs<sp/>=<sp/>new<sp/>Vector3[graph.vertices.Length];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>i=0;i&lt;graph.vertices.Length;i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>vs[i]<sp/>=<sp/>graph.vertices[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//navmeshRender.vertices<sp/>=<sp/>vs;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>tris<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[graph.nodes.Length*3];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color[]<sp/>vColors<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color[graph.vectorVertices.Length];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;graph.nodes.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pathfinding_1_1_triangle_mesh_node" kindref="compound">TriangleMeshNode</ref><sp/>node<sp/>=<sp/>graph.nodes[i]<sp/>as<sp/><ref refid="class_pathfinding_1_1_triangle_mesh_node" kindref="compound">TriangleMeshNode</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[i*3]<sp/>=<sp/>node.v0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[i*3+1]<sp/>=<sp/>node.v1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tris[i*3+2]<sp/>=<sp/>node.v2;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>col<sp/>=<sp/><ref refid="class_pathfinding_1_1_mathfx" kindref="compound" tooltip="Utility functions for working with numbers, lines and vectors.">Mathfx</ref>.<ref refid="class_pathfinding_1_1_mathfx_1a0393627f2218af15e3825565f13371a6" kindref="member" tooltip="Returns a nice color from int i with alpha a.">IntToColor</ref><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)node.Region,1F);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vColors[node.v0]<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vColors[node.v1]<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vColors[node.v2]<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.triangles<sp/>=<sp/>tris;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.colors<sp/>=<sp/>vColors;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meshRenderer.transform.position<sp/>=<sp/>graph.forcedBoundsCenter-graph.forcedBoundsSize*0.5F;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//meshRenderer.transform.localScale<sp/>=<sp/>Int3.Precision*Voxelize.CellScale;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.RecalculateNormals<sp/>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRender.RecalculateBounds<sp/>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref><sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref><sp/>=<sp/>AssetDatabase.LoadAssetAtPath<sp/>(<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.<ref refid="class_astar_path_editor_1ac067f8c610f6fea4379c2d5a5e8abe48" kindref="member" tooltip="Path to the editor assets folder for the A* Pathfinding Project.">editorAssets</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Materials/Navmesh.mat&quot;</highlight><highlight class="normal">,typeof(Material))<sp/>as<sp/>Material;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer.material<sp/>=<sp/><ref refid="class_recast_graph_editor_1a1d50e6356461a26ad974458cc19b05ef" kindref="member" tooltip="Material to use for navmeshes in the editor.">navmeshMaterial</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="class_recast_graph_editor_1af7b5f3067d5b3f687a01a4b01283e068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recast_graph_editor_1af7b5f3067d5b3f687a01a4b01283e068" kindref="member" tooltip="Override to implement scene GUI drawing for the graph.">OnSceneGUI</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navmeshRenderer<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navmeshRenderer.enabled<sp/>=<sp/>editor.script.<ref refid="class_astar_path_1a5c8aca200b940c2428221034245ca792" kindref="member" tooltip="Toggle for showing the gizmo debugging for the graphs in the scene view (editor only).">showNavGraphs</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="class_recast_graph_editor_1a18b9b7a1add549aa8462c4e80cfc6376" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recast_graph_editor_1a18b9b7a1add549aa8462c4e80cfc6376" kindref="member" tooltip="Override to implement graph inspectors.">OnInspectorGUI</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RecastGraph<sp/>graph<sp/>=<sp/>target<sp/>as<sp/>RecastGraph;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preEnabled<sp/>=<sp/>GUI.enabled;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(graph.forceBounds)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a2d3655da3ed281674cf5125205e2a246" kindref="member" tooltip="Use a C++ version of Recast.">useCRecast</ref><sp/>=<sp/>GUILayout.Toolbar<sp/>(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a2d3655da3ed281674cf5125205e2a246" kindref="member" tooltip="Use a C++ version of Recast.">useCRecast</ref><sp/>?1:0,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent[2]<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;C#<sp/>Recast&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;I<sp/>have<sp/>translated<sp/>a<sp/>portion<sp/>of<sp/>Recast<sp/>to<sp/>C#,<sp/>this<sp/>can<sp/>be<sp/>used<sp/>in<sp/>a<sp/>webplayer<sp/>but<sp/>is<sp/>more<sp/>limited<sp/>than<sp/>the<sp/>C++<sp/>version&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;C++<sp/>Recast&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>original<sp/>C++<sp/>version<sp/>of<sp/>Recast,<sp/>faster<sp/>scanning<sp/>times<sp/>and<sp/>has<sp/>more<sp/>features<sp/>than<sp/>the<sp/>C#<sp/>version,<sp/>but<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>in<sp/>the<sp/>editor<sp/>or<sp/>on<sp/>standalone<sp/>applications<sp/>(note<sp/>that<sp/>you<sp/>can<sp/>still<sp/>scan<sp/>the<sp/>graph<sp/>in<sp/>the<sp/>editor<sp/>and<sp/>then<sp/>cache<sp/>the<sp/>startup<sp/>if<sp/>you<sp/>want<sp/>to<sp/>build<sp/>for<sp/>a<sp/>webplayer)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight><highlight class="stringliteral">&quot;\nTake<sp/>a<sp/>look<sp/>in<sp/>the<sp/>docs<sp/>on<sp/>RecastGraph.useCRecast<sp/>for<sp/>more<sp/>information<sp/>on<sp/>the<sp/>special<sp/>considerations<sp/>when<sp/>using<sp/>this<sp/>mode&quot;</highlight><highlight class="normal">)})<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a2d3655da3ed281674cf5125205e2a246" kindref="member" tooltip="Use a C++ version of Recast.">useCRecast</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BuildTarget<sp/>bt<sp/>=<sp/>EditorUserBuildSettings.activeBuildTarget;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bt<sp/>!=<sp/>BuildTarget.StandaloneOSXIntel)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;Note<sp/>that<sp/>the<sp/>C++<sp/>version<sp/>of<sp/>Recast<sp/>does<sp/>not<sp/>work<sp/>in<sp/>your<sp/>selected<sp/>build<sp/>target<sp/>(&quot;</highlight><highlight class="normal">+bt+</highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Change<sp/>build<sp/>target<sp/>to<sp/>standalone<sp/>(osx)<sp/>if<sp/>you<sp/>want<sp/>to<sp/>be<sp/>able<sp/>to<sp/>use<sp/>C++\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Click<sp/>here<sp/>for<sp/>more<sp/>info&quot;</highlight><highlight class="normal">,<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Application.OpenURL<sp/>(<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.GetURL<sp/>(</highlight><highlight class="stringliteral">&quot;cRecastHelp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;Note<sp/>the<sp/>special<sp/>considerations<sp/>when<sp/>using<sp/>C++<sp/>Recast\nClick<sp/>here<sp/>for<sp/>more<sp/>info&quot;</highlight><highlight class="normal">,<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Application.OpenURL<sp/>(<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.GetURL<sp/>(</highlight><highlight class="stringliteral">&quot;cRecastHelp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Application.platform<sp/>==<sp/>RuntimePlatform.WindowsEditor)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(</highlight><highlight class="stringliteral">&quot;C++<sp/>Recast<sp/>can<sp/>currently<sp/>not<sp/>be<sp/>used<sp/>on<sp/>Windows&quot;</highlight><highlight class="normal">,<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Int64<sp/>estWidth<sp/>=<sp/>Mathf.RoundToInt<sp/>(Mathf.Ceil<sp/>(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a24a4f86c42d493269588d3525e5ba366" kindref="member" tooltip="Size of the bounding box.">forcedBoundsSize</ref>.x<sp/>/<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref>));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Int64<sp/>estDepth<sp/>=<sp/>Mathf.RoundToInt<sp/>(Mathf.Ceil<sp/>(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a24a4f86c42d493269588d3525e5ba366" kindref="member" tooltip="Size of the bounding box.">forcedBoundsSize</ref>.z<sp/>/<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(estWidth*estDepth<sp/>&gt;=<sp/>1024*1024<sp/>||<sp/>estDepth<sp/>&gt;=<sp/>1024*1024<sp/>||<sp/>estWidth<sp/>&gt;=<sp/>1024*1024)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>helpBox<sp/>=<sp/>GUI.skin.FindStyle<sp/>(</highlight><highlight class="stringliteral">&quot;HelpBox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(helpBox<sp/>==<sp/>null)<sp/>helpBox<sp/>=<sp/>GUI.skin.FindStyle<sp/>(</highlight><highlight class="stringliteral">&quot;Box&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>preColor<sp/>=<sp/>GUI.color;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(estWidth*estDepth<sp/>&gt;=<sp/>2048*2048<sp/>||<sp/>estDepth<sp/>&gt;=<sp/>2048*2048<sp/>||<sp/>estWidth<sp/>&gt;=<sp/>2048*2048)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.color<sp/>=<sp/>Color.red;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.color<sp/>=<sp/>Color.yellow;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(</highlight><highlight class="stringliteral">&quot;Warning<sp/>:<sp/>Might<sp/>take<sp/>some<sp/>time<sp/>to<sp/>calculate&quot;</highlight><highlight class="normal">,helpBox);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.color<sp/>=<sp/>preColor;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.LabelField<sp/>(</highlight><highlight class="stringliteral">&quot;Width<sp/>(samples)&quot;</highlight><highlight class="normal">,estWidth.ToString<sp/>());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.LabelField<sp/>(</highlight><highlight class="stringliteral">&quot;Depth<sp/>(samples)&quot;</highlight><highlight class="normal">,estDepth.ToString<sp/>());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.LabelField<sp/>(&quot;Width<sp/>(samples)&quot;,&quot;undetermined&quot;);</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUILayout.LabelField<sp/>(&quot;Depth<sp/>(samples)&quot;,&quot;undetermined&quot;);</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>preEnabled;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Cell<sp/>Size&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>one<sp/>voxel<sp/>in<sp/>world<sp/>units&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref><sp/>&lt;<sp/>0.001F)<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref><sp/>=<sp/>0.001F;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a47b7d168c0d6e68f5ad8a6b1c3392db0" kindref="member" tooltip="Voxel sample size (y)">cellHeight</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Cell<sp/>Height&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Height<sp/>of<sp/>one<sp/>voxel<sp/>in<sp/>world<sp/>units&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a47b7d168c0d6e68f5ad8a6b1c3392db0" kindref="member" tooltip="Voxel sample size (y)">cellHeight</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a47b7d168c0d6e68f5ad8a6b1c3392db0" kindref="member" tooltip="Voxel sample size (y)">cellHeight</ref><sp/>&lt;<sp/>0.001F)<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a47b7d168c0d6e68f5ad8a6b1c3392db0" kindref="member" tooltip="Voxel sample size (y)">cellHeight</ref><sp/>=<sp/>0.001F;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a34d7465b956b21320ce589e06c632286" kindref="member" tooltip="Character height.">walkableHeight</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Walkable<sp/>Height&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Minimum<sp/>distance<sp/>to<sp/>the<sp/>roof<sp/>for<sp/>an<sp/>area<sp/>to<sp/>be<sp/>walkable&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a34d7465b956b21320ce589e06c632286" kindref="member" tooltip="Character height.">walkableHeight</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a788c6eff96f12dce2455d1d705e69f76" kindref="member" tooltip="Height the character can climb.">walkableClimb</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Walkable<sp/>Climb&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;How<sp/>high<sp/>can<sp/>the<sp/>character<sp/>climb&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a788c6eff96f12dce2455d1d705e69f76" kindref="member" tooltip="Height the character can climb.">walkableClimb</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.characterRadius<sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Character<sp/>Radius&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Radius<sp/>of<sp/>the<sp/>character,<sp/>it&apos;s<sp/>good<sp/>to<sp/>add<sp/>some<sp/>margin<sp/>though&quot;</highlight><highlight class="normal">),graph.characterRadius);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(graph.<ref refid="class_pathfinding_1_1_recast_graph_1a2d3655da3ed281674cf5125205e2a246" kindref="member" tooltip="Use a C++ version of Recast.">useCRecast</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.regionMinSize<sp/>=<sp/>EditorGUILayout.IntField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Min<sp/>Region<sp/>Size&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;The<sp/>lowest<sp/>number<sp/>of<sp/>voxles<sp/>in<sp/>one<sp/>area<sp/>for<sp/>it<sp/>not<sp/>to<sp/>be<sp/>deleted&quot;</highlight><highlight class="normal">),graph.regionMinSize);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a1b3ccfcd6d92aafbc9274eaf0e86bff5" kindref="member" tooltip="Max slope in degrees the character can traverse.">maxSlope</ref><sp/>=<sp/>EditorGUILayout.Slider<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Max<sp/>Slope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Approximate<sp/>maximum<sp/>slope&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a1b3ccfcd6d92aafbc9274eaf0e86bff5" kindref="member" tooltip="Max slope in degrees the character can traverse.">maxSlope</ref>,0F,90F);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a443cbf48b32ad4ee2bc5f6130fb9d71c" kindref="member" tooltip="Longer edges will be subdivided.">maxEdgeLength</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Max<sp/>Edge<sp/>Length&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Maximum<sp/>length<sp/>of<sp/>one<sp/>edge<sp/>in<sp/>the<sp/>completed<sp/>navmesh<sp/>before<sp/>it<sp/>is<sp/>split.<sp/>A<sp/>lower<sp/>value<sp/>can<sp/>often<sp/>yield<sp/>better<sp/>quality<sp/>graphs&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a443cbf48b32ad4ee2bc5f6130fb9d71c" kindref="member" tooltip="Longer edges will be subdivided.">maxEdgeLength</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a443cbf48b32ad4ee2bc5f6130fb9d71c" kindref="member" tooltip="Longer edges will be subdivided.">maxEdgeLength</ref><sp/>=<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a443cbf48b32ad4ee2bc5f6130fb9d71c" kindref="member" tooltip="Longer edges will be subdivided.">maxEdgeLength</ref><sp/>&lt;<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref><sp/>?<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a648adbc9ff17c47a4a0132d21f8893a5" kindref="member" tooltip="Voxel sample size (x,z)">cellSize</ref><sp/>:<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a443cbf48b32ad4ee2bc5f6130fb9d71c" kindref="member" tooltip="Longer edges will be subdivided.">maxEdgeLength</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(!graph.useCRecast)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.erosionRadius<sp/>=<sp/>EditorGUILayout.IntSlider<sp/>(&quot;Erosion<sp/>radius&quot;,graph.erosionRadius,0,256);</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a071419560fb5485eddbc73207b9c06c7" kindref="member" tooltip="Max distance from simplified edge to real edge.">contourMaxError</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Max<sp/>edge<sp/>error&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Amount<sp/>of<sp/>simplification<sp/>to<sp/>apply<sp/>to<sp/>edges&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a071419560fb5485eddbc73207b9c06c7" kindref="member" tooltip="Max distance from simplified edge to real edge.">contourMaxError</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1ab11c42b9f670619c56a2c86aefa69d95" kindref="member" tooltip="Include the Terrain in the scene.">includeTerrain</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Include<sp/>Terrain&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Should<sp/>a<sp/>rasterized<sp/>terrain<sp/>be<sp/>included&quot;</highlight><highlight class="normal">),<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1ab11c42b9f670619c56a2c86aefa69d95" kindref="member" tooltip="Include the Terrain in the scene.">includeTerrain</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1acfeb79b5a730b5d909fb213cf8fc9edd" kindref="member" tooltip="Controls how large the sample size for the terrain is.">terrainSampleSize</ref><sp/>=<sp/>EditorGUILayout.IntField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Terrain<sp/>Sample<sp/>Size&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Size<sp/>of<sp/>terrain<sp/>samples.<sp/>A<sp/>lower<sp/>value<sp/>is<sp/>better,<sp/>but<sp/>slower&quot;</highlight><highlight class="normal">),<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1acfeb79b5a730b5d909fb213cf8fc9edd" kindref="member" tooltip="Controls how large the sample size for the terrain is.">terrainSampleSize</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1acfeb79b5a730b5d909fb213cf8fc9edd" kindref="member" tooltip="Controls how large the sample size for the terrain is.">terrainSampleSize</ref><sp/>=<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1acfeb79b5a730b5d909fb213cf8fc9edd" kindref="member" tooltip="Controls how large the sample size for the terrain is.">terrainSampleSize</ref><sp/>&lt;<sp/>1<sp/>?<sp/>1<sp/>:<sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1acfeb79b5a730b5d909fb213cf8fc9edd" kindref="member" tooltip="Controls how large the sample size for the terrain is.">terrainSampleSize</ref>;</highlight><highlight class="comment">//Clamp<sp/>to<sp/>at<sp/>least<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.includeOutOfBounds<sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Include<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Should<sp/>voxels<sp/>out<sp/>of<sp/>bounds,<sp/>on<sp/>the<sp/>Y<sp/>axis<sp/>below<sp/>the<sp/>graph,<sp/>be<sp/>included<sp/>or<sp/>not&quot;</highlight><highlight class="normal">),graph.includeOutOfBounds);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_graph_editor_1a7a5500b26894ff8564fdbf054395503c" kindref="member" tooltip="Draws a thin separator line.">Separator</ref><sp/>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1ac2526d6cf6b8c42a04117ed20d315781" kindref="member" tooltip="Center of the bounding box.">forcedBoundsCenter</ref><sp/>=<sp/>EditorGUILayout.Vector3Field<sp/>(</highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">,graph.<ref refid="class_pathfinding_1_1_recast_graph_1ac2526d6cf6b8c42a04117ed20d315781" kindref="member" tooltip="Center of the bounding box.">forcedBoundsCenter</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a24a4f86c42d493269588d3525e5ba366" kindref="member" tooltip="Size of the bounding box.">forcedBoundsSize</ref><sp/>=<sp/>EditorGUILayout.Vector3Field<sp/>(</highlight><highlight class="stringliteral">&quot;Size&quot;</highlight><highlight class="normal">,graph.<ref refid="class_pathfinding_1_1_recast_graph_1a24a4f86c42d493269588d3525e5ba366" kindref="member" tooltip="Size of the bounding box.">forcedBoundsSize</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Snap<sp/>bounds<sp/>to<sp/>scene&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Will<sp/>snap<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>graph<sp/>to<sp/>exactly<sp/>contain<sp/>all<sp/>active<sp/>meshes<sp/>in<sp/>the<sp/>scene&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.SnapForceBoundsToScene<sp/>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_graph_editor_1a7a5500b26894ff8564fdbf054395503c" kindref="member" tooltip="Draws a thin separator line.">Separator</ref><sp/>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a427e7d78bb1a767d205d60ef36cdf39c" kindref="member" tooltip="Masks which objects to include.">mask</ref><sp/>=<sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.LayerMaskField<sp/>(</highlight><highlight class="stringliteral">&quot;Layer<sp/>Mask&quot;</highlight><highlight class="normal">,graph.<ref refid="class_pathfinding_1_1_recast_graph_1a427e7d78bb1a767d205d60ef36cdf39c" kindref="member" tooltip="Masks which objects to include.">mask</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagMaskFoldout<sp/>=<sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.UnityTagMaskList<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Tag<sp/>Mask&quot;</highlight><highlight class="normal">),<sp/>tagMaskFoldout,<sp/>graph.tagMask);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_graph_editor_1a7a5500b26894ff8564fdbf054395503c" kindref="member" tooltip="Draws a thin separator line.">Separator</ref><sp/>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1af4b5c2b3e2935c60b3855e861c01dba9" kindref="member" tooltip="Show an outline of the polygons in the Unity Editor.">showMeshOutline</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Show<sp/>mesh<sp/>outline&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Toggles<sp/>gizmos<sp/>for<sp/>drawing<sp/>an<sp/>outline<sp/>of<sp/>the<sp/>mesh&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1af4b5c2b3e2935c60b3855e861c01dba9" kindref="member" tooltip="Show an outline of the polygons in the Unity Editor.">showMeshOutline</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_pathfinding_1_1_recast_graph_1a9cbdd2a5961383b1b38ce8fbdce93926" kindref="member" tooltip="More accurate nearest node queries.">accurateNearestNode</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Accurate<sp/>Nearest<sp/>Node<sp/>Queries&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;More<sp/>accurate<sp/>nearest<sp/>node<sp/>queries.<sp/>See<sp/>docs<sp/>for<sp/>more<sp/>info&quot;</highlight><highlight class="normal">),graph.<ref refid="class_pathfinding_1_1_recast_graph_1a9cbdd2a5961383b1b38ce8fbdce93926" kindref="member" tooltip="More accurate nearest node queries.">accurateNearestNode</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(</highlight><highlight class="stringliteral">&quot;Export<sp/>to<sp/>file&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_recast_graph_editor_1aaab8c25c1ad5db6101e8ce90d8d6d3f1" kindref="member" tooltip="Exports the INavmesh graph to a file.">ExportToFile</ref><sp/>(graph);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*graph.replaceMesh<sp/>=<sp/>(Mesh)ObjectField<sp/>(new<sp/>GUIContent<sp/>(&quot;Replacement<sp/>Mesh&quot;,&quot;If<sp/>you<sp/>make<sp/>edits<sp/>to<sp/>the<sp/>mesh<sp/>manually,<sp/>you<sp/>can<sp/>drop<sp/>the<sp/>new<sp/>mesh<sp/>file<sp/>here<sp/>to<sp/>import<sp/>it&quot;),<sp/>graph.replaceMesh,typeof(Mesh),false);</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(graph.replaceMesh<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HelpBox<sp/>(&quot;Note:<sp/>Graph<sp/>will<sp/>be<sp/>replaced<sp/>by<sp/>the<sp/>mesh&quot;);</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//graph.mask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>EditorGUILayout.LayerField<sp/>(&quot;Mask&quot;,(int)Mathf.Log<sp/>(graph.mask,2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266" refid="class_recast_graph_editor_1aaab8c25c1ad5db6101e8ce90d8d6d3f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_recast_graph_editor_1aaab8c25c1ad5db6101e8ce90d8d6d3f1" kindref="member" tooltip="Exports the INavmesh graph to a file.">ExportToFile</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="interface_pathfinding_1_1_i_navmesh" kindref="compound">INavmesh</ref><sp/>graph<sp/>=<sp/>(<ref refid="interface_pathfinding_1_1_i_navmesh" kindref="compound">INavmesh</ref>)target;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(graph<sp/>==<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pathfinding_1_1_int3" kindref="compound" tooltip="Holds a coordinate in integers.">Int3</ref>[]<sp/>vertices<sp/>=<sp/>graph.vertices;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices<sp/>==<sp/>null<sp/>||<sp/>graph.TriNodes<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EditorUtility.DisplayDialog<sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Scan<sp/>graph<sp/>before<sp/>exporting?&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;The<sp/>graph<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>mesh<sp/>data.<sp/>Do<sp/>you<sp/>want<sp/>to<sp/>scan<sp/>it?&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Ok&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cancel&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_astar_path" kindref="compound" tooltip="Main Pathfinding System.">AstarPath</ref>.MenuScan<sp/>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices<sp/>=<sp/>graph.vertices;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertices<sp/>==<sp/>null<sp/>||<sp/>graph.TriNodes<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(</highlight><highlight class="stringliteral">&quot;Graph<sp/>still<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>nodes<sp/>or<sp/>vertices.<sp/>Canceling&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>path<sp/>=<sp/>EditorUtility.SaveFilePanel<sp/>(</highlight><highlight class="stringliteral">&quot;Export<sp/>.obj&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;navmesh.obj&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Generate<sp/>.obj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Text.StringBuilder<sp/>sb<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Text.StringBuilder();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/>System.IO.Path.GetFileNameWithoutExtension<sp/>(path);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb.Append<sp/>(</highlight><highlight class="stringliteral">&quot;g<sp/>&quot;</highlight><highlight class="normal">).Append(name).AppendLine();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Write<sp/>vertices<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;vertices.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>v<sp/>=<sp/>(Vector3)vertices[i];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb.Append(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;v<sp/>{0}<sp/>{1}<sp/>{2}\n&quot;</highlight><highlight class="normal">,-v.x,v.y,v.z));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Define<sp/>single<sp/>texture<sp/>coordinate<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb.Append<sp/>(</highlight><highlight class="stringliteral">&quot;vt<sp/>0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Write<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriangleMeshNode[]<sp/>nodes<sp/>=<sp/>graph.TriNodes;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nodes.Length;i++)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TriangleMeshNode<sp/>node<sp/>=<sp/>nodes[i];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(</highlight><highlight class="stringliteral">&quot;Node<sp/>was<sp/>null<sp/>or<sp/>no<sp/>TriangleMeshNode.<sp/>Critical<sp/>error.<sp/>Graph<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>target.GetType().Name);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sb.Append(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;f<sp/>{0}/0<sp/>{1}/0<sp/>{2}/0\n&quot;</highlight><highlight class="normal">,<sp/>node.v0+1,node.v1+1,node.v2+1));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>obj<sp/>=<sp/>sb.ToString();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(System.IO.StreamWriter<sp/>sw<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.IO.StreamWriter(path))<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sw.Write(obj);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Editor/GraphEditors/RecastGraphEditor.cs"/>
  </compounddef>
</doxygen>
