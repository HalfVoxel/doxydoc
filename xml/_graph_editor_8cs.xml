<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3">
  <compounddef id="_graph_editor_8cs" kind="file">
    <compoundname>GraphEditor.cs</compoundname>
    <innerclass refid="class_graph_editor" prot="public">GraphEditor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Pathfinding;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_graph_editor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_graph_editor" kindref="compound">GraphEditor</ref><sp/>:<sp/><ref refid="class_pathfinding_1_1_graph_editor_base" kindref="compound" tooltip="Defined here only so non-editor classes can use the target field.">GraphEditorBase</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref><sp/>editor;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDisable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDestroy<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>ObjectField<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/>Object<sp/>obj,<sp/>System.Type<sp/>objType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowSceneObjects)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ObjectField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(label),obj,objType,allowSceneObjects);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Object<sp/>ObjectField<sp/>(GUIContent<sp/>label,<sp/>Object<sp/>obj,<sp/>System.Type<sp/>objType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowSceneObjects)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_3_3</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowSceneObjects<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UNITY_3_3</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>EditorGUILayout.ObjectField<sp/>(label,<sp/>obj,<sp/>objType);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>EditorGUILayout.ObjectField<sp/>(label,<sp/>obj,<sp/>objType,<sp/>allowSceneObjects);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowSceneObjects<sp/>&amp;&amp;<sp/>!EditorUtility.IsPersistent<sp/>(obj))<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Object<sp/>is<sp/>in<sp/>the<sp/>scene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Component<sp/>com<sp/>=<sp/>obj<sp/>as<sp/>Component;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>go<sp/>=<sp/>obj<sp/>as<sp/>GameObject;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(com<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go<sp/>=<sp/>com.gameObject;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(go<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_unity_reference_helper" kindref="compound" tooltip="Helper class to keep track of references to GameObjects.">UnityReferenceHelper</ref><sp/>urh<sp/>=<sp/>go.GetComponent&lt;<ref refid="class_unity_reference_helper" kindref="compound" tooltip="Helper class to keep track of references to GameObjects.">UnityReferenceHelper</ref>&gt;<sp/>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urh<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_graph_editor_1a5544a34e469b9b130932281cafe52f75" kindref="member" tooltip="Draws a small help box with a &amp;#39;Fix&amp;#39; button to the right.">FixLabel</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Object&apos;s<sp/>GameObject<sp/>must<sp/>have<sp/>a<sp/>UnityReferenceHelper<sp/>component<sp/>attached&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go.AddComponent&lt;<ref refid="class_unity_reference_helper" kindref="compound" tooltip="Helper class to keep track of references to GameObjects.">UnityReferenceHelper</ref>&gt;();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EditorUtility.IsPersistent<sp/>(obj))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>path<sp/>=<sp/>AssetDatabase.GetAssetPath<sp/>(obj);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.Text.RegularExpressions.Regex<sp/>rg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>System.Text.RegularExpressions.Regex(</highlight><highlight class="stringliteral">@&quot;Resources[/|\\][^/]*$&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!path.Contains<sp/>(&quot;Resources/&quot;))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>rg.Match(path).Value);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rg.IsMatch(path))<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_graph_editor_1a5544a34e469b9b130932281cafe52f75" kindref="member" tooltip="Draws a small help box with a &amp;#39;Fix&amp;#39; button to the right.">FixLabel</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Object<sp/>must<sp/>be<sp/>in<sp/>the<sp/>&apos;Resources&apos;<sp/>folder,<sp/>top<sp/>level&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!System.IO.Directory.Exists<sp/>(Application.dataPath+</highlight><highlight class="stringliteral">&quot;/Resources&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.IO.Directory.CreateDirectory<sp/>(Application.dataPath+</highlight><highlight class="stringliteral">&quot;/Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssetDatabase.Refresh<sp/>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ext<sp/>=<sp/>System.IO.Path.GetExtension(path);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>AssetDatabase.MoveAsset<sp/><sp/>(path,</highlight><highlight class="stringliteral">&quot;Assets/Resources/&quot;</highlight><highlight class="normal">+obj.name+ext);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log<sp/>(&quot;Successful<sp/>move&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>AssetDatabase.GetAssetPath<sp/>(obj);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>move<sp/>asset<sp/>-<sp/>&quot;</highlight><highlight class="normal">+error);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AssetDatabase.IsMainAsset<sp/>(obj)<sp/>&amp;&amp;<sp/>obj.name<sp/>!=<sp/>AssetDatabase.LoadMainAssetAtPath<sp/>(path).name)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_graph_editor_1a5544a34e469b9b130932281cafe52f75" kindref="member" tooltip="Draws a small help box with a &amp;#39;Fix&amp;#39; button to the right.">FixLabel</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Due<sp/>to<sp/>technical<sp/>reasons,<sp/>the<sp/>main<sp/>asset<sp/>must\nhave<sp/>the<sp/>same<sp/>name<sp/>as<sp/>the<sp/>referenced<sp/>asset&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>error<sp/>=<sp/>AssetDatabase.RenameAsset<sp/>(path,obj.name);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Debug.Log<sp/>(&quot;Successful&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogError<sp/>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>rename<sp/>asset<sp/>-<sp/>&quot;</highlight><highlight class="normal">+error);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="class_graph_editor_1a0fd5497c6f8251140a5af5f299d54314" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a0fd5497c6f8251140a5af5f299d54314" kindref="member" tooltip="Draws common graph settings.">OnBaseInspectorGUI</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>penalty<sp/>=<sp/>EditorGUILayout.IntField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Initial<sp/>Penalty&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Initial<sp/>Penalty<sp/>for<sp/>nodes<sp/>in<sp/>this<sp/>graph.<sp/>Set<sp/>during<sp/>Scan.&quot;</highlight><highlight class="normal">),(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)target.initialPenalty);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(penalty<sp/>&lt;<sp/>0)<sp/>penalty<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target.initialPenalty<sp/>=<sp/>(uint)penalty;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="class_graph_editor_1a0222629eaa6e800ee75768ad62973200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a0222629eaa6e800ee75768ad62973200" kindref="member" tooltip="Override to implement graph inspectors.">OnInspectorGUI</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="class_graph_editor_1a415758944c5a639ccbb5fec7db17da40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a415758944c5a639ccbb5fec7db17da40" kindref="member" tooltip="Override to implement scene GUI drawing for the graph.">OnSceneGUI</ref><sp/>(<ref refid="class_pathfinding_1_1_nav_graph" kindref="compound" tooltip="Base class for all graphs ">NavGraph</ref><sp/><ref refid="class_pathfinding_1_1_graph_editor_base_1a5176cc0bc64e4f4762196b5e96535600" kindref="member" tooltip="NavGraph this editor is exposing.">target</ref>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="class_graph_editor_1ad5bbbcbbe8c563b720c6f214771062b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1ad5bbbcbbe8c563b720c6f214771062b9" kindref="member" tooltip="Override to implement scene Gizmos drawing for the graph editor.">OnDrawGizmos</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="class_graph_editor_1a7a5500b26894ff8564fdbf054395503c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a7a5500b26894ff8564fdbf054395503c" kindref="member" tooltip="Draws a thin separator line.">Separator</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>separator<sp/>=<sp/><ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.astarSkin.FindStyle<sp/>(</highlight><highlight class="stringliteral">&quot;PixelBox3Separator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(separator<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIStyle<sp/>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rect<sp/>r<sp/>=<sp/>GUILayoutUtility.GetRect<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(),separator);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Event.current.type<sp/>==<sp/>EventType.Repaint)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator.Draw<sp/>(r,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="class_graph_editor_1a5544a34e469b9b130932281cafe52f75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a5544a34e469b9b130932281cafe52f75" kindref="member" tooltip="Draws a small help box with a &amp;#39;Fix&amp;#39; button to the right.">FixLabel</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>buttonLabel<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fix&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buttonWidth<sp/>=<sp/>40)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>returnValue<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal<sp/>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Space<sp/>(14*EditorGUI.indentLevel);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal<sp/>(<ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(label,<sp/>EditorStyles.miniLabel,GUILayout.ExpandWidth<sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(buttonLabel,EditorStyles.miniButton,GUILayout.Width<sp/>(buttonWidth)))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal<sp/>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal<sp/>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnValue;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="class_graph_editor_1a411c3c8de2178430cc3dbf30f9c9100a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a411c3c8de2178430cc3dbf30f9c9100a" kindref="member" tooltip="Draws a small help box.">HelpBox</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal<sp/>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Space<sp/>(14*EditorGUI.indentLevel);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(label,<sp/><ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.helpBox);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal<sp/>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153" refid="class_graph_editor_1acd00495fe993f6447e0cfb55c76e8e0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1acd00495fe993f6447e0cfb55c76e8e0e" kindref="member" tooltip="Draws a toggle with a bold label to the right.">ToggleGroup</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1acd00495fe993f6447e0cfb55c76e8e0e" kindref="member" tooltip="Draws a toggle with a bold label to the right.">ToggleGroup</ref><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(label),value);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158" refid="class_graph_editor_1ad5186cf3139ab312ebd950e8053b0125" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1ad5186cf3139ab312ebd950e8053b0125" kindref="member" tooltip="Draws a toggle with a bold label to the right.">ToggleGroup</ref><sp/>(GUIContent<sp/>label,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.BeginHorizontal<sp/>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Space<sp/>(13*EditorGUI.indentLevel);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>GUILayout.Toggle<sp/>(value,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,GUILayout.Width<sp/>(10));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>boxHeader<sp/>=<sp/><ref refid="class_astar_path_editor" kindref="compound">AstarPathEditor</ref>.astarSkin.FindStyle<sp/>(</highlight><highlight class="stringliteral">&quot;CollisionHeader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GUILayout.Button<sp/>(label,boxHeader,<sp/>GUILayout.Width<sp/>(100)))<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>!value;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal<sp/>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="class_graph_editor_1af4a74c8300a6eddde7e07a17a3ee8c44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1af4a74c8300a6eddde7e07a17a3ee8c44" kindref="member" tooltip="Draws the inspector for a GraphCollision class .">DrawCollisionEditor</ref><sp/>(<ref refid="class_pathfinding_1_1_graph_collision" kindref="compound" tooltip="Handles collision checking for graphs.">GraphCollision</ref><sp/>collision)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_pathfinding_1_1_graph_collision" kindref="compound" tooltip="Handles collision checking for graphs.">GraphCollision</ref><sp/>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*GUILayout.Space<sp/>(5);</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rect<sp/>r<sp/>=<sp/>EditorGUILayout.BeginVertical<sp/>(AstarPathEditor.graphBoxStyle);</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.Box<sp/>(r,&quot;&quot;,AstarPathEditor.graphBoxStyle);</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Space<sp/>(2);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_graph_editor_1a7a5500b26894ff8564fdbf054395503c" kindref="member" tooltip="Draws a thin separator line.">Separator</ref><sp/>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*GUILayout.BeginHorizontal<sp/>();</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUIStyle<sp/>boxHeader<sp/>=<sp/>AstarPathEditor.astarSkin.FindStyle<sp/>(&quot;CollisionHeader&quot;);</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(&quot;Collision<sp/>testing&quot;,boxHeader);</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.collisionCheck<sp/>=<sp/>GUILayout.Toggle<sp/>(collision.collisionCheck,&quot;&quot;);</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>preEnabledRoot<sp/>=<sp/>GUI.enabled;</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>collision.collisionCheck;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a7b285cb247d2cca3876488c3f43e3872" kindref="member" tooltip="Toggle collision check.">collisionCheck</ref><sp/>=<sp/><ref refid="class_graph_editor_1acd00495fe993f6447e0cfb55c76e8e0e" kindref="member" tooltip="Draws a toggle with a bold label to the right.">ToggleGroup</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Collision<sp/>testing&quot;</highlight><highlight class="normal">,collision.<ref refid="class_pathfinding_1_1_graph_collision_1a7b285cb247d2cca3876488c3f43e3872" kindref="member" tooltip="Toggle collision check.">collisionCheck</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preEnabledRoot<sp/>=<sp/>GUI.enabled;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a7b285cb247d2cca3876488c3f43e3872" kindref="member" tooltip="Toggle collision check.">collisionCheck</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUILayout.BeginHorizontal<sp/>();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a8b89c5359b1bc089f8dfb2602a7e6df2" kindref="member" tooltip="Collision shape to use.">type</ref><sp/>=<sp/>(<ref refid="namespace_pathfinding_1a7f138e75fc3cc79e825c39e040690395" kindref="member" tooltip="Determines collision check shape.">ColliderType</ref>)EditorGUILayout.EnumPopup(</highlight><highlight class="stringliteral">&quot;Collider<sp/>type&quot;</highlight><highlight class="normal">,collision.<ref refid="class_pathfinding_1_1_graph_collision_1a8b89c5359b1bc089f8dfb2602a7e6df2" kindref="member" tooltip="Collision shape to use.">type</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>string[3]<sp/>{&quot;Sphere&quot;,&quot;Capsule&quot;,&quot;Ray&quot;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preEnabled<sp/>=<sp/>GUI.enabled;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision.<ref refid="class_pathfinding_1_1_graph_collision_1a8b89c5359b1bc089f8dfb2602a7e6df2" kindref="member" tooltip="Collision shape to use.">type</ref><sp/>!=<sp/><ref refid="namespace_pathfinding_1a7f138e75fc3cc79e825c39e040690395" kindref="member" tooltip="Determines collision check shape.">ColliderType</ref>.Capsule<sp/>&amp;&amp;<sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a8b89c5359b1bc089f8dfb2602a7e6df2" kindref="member" tooltip="Collision shape to use.">type</ref><sp/>!=<sp/><ref refid="namespace_pathfinding_1a7f138e75fc3cc79e825c39e040690395" kindref="member" tooltip="Determines collision check shape.">ColliderType</ref>.Sphere)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a917f89a3bf5986b82c6e560173a6d1da" kindref="member" tooltip="Diameter of capsule or sphere when checking for collision.">diameter</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Diameter&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Diameter<sp/>of<sp/>the<sp/>capsule<sp/>of<sp/>sphere<sp/>where<sp/>1<sp/>equals<sp/>one<sp/>node&quot;</highlight><highlight class="normal">),collision.<ref refid="class_pathfinding_1_1_graph_collision_1a917f89a3bf5986b82c6e560173a6d1da" kindref="member" tooltip="Diameter of capsule or sphere when checking for collision.">diameter</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>preEnabled;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision.<ref refid="class_pathfinding_1_1_graph_collision_1a8b89c5359b1bc089f8dfb2602a7e6df2" kindref="member" tooltip="Collision shape to use.">type</ref><sp/>!=<sp/><ref refid="namespace_pathfinding_1a7f138e75fc3cc79e825c39e040690395" kindref="member" tooltip="Determines collision check shape.">ColliderType</ref>.Capsule<sp/>&amp;&amp;<sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a8b89c5359b1bc089f8dfb2602a7e6df2" kindref="member" tooltip="Collision shape to use.">type</ref><sp/>!=<sp/><ref refid="namespace_pathfinding_1a7f138e75fc3cc79e825c39e040690395" kindref="member" tooltip="Determines collision check shape.">ColliderType</ref>.Ray)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a48083b65ac9a863566dc3e3fff09a5b4" kindref="member" tooltip="Height of capsule or length of ray when checking for collision.">height</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Height/Length&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Height<sp/>of<sp/>cylinder<sp/>of<sp/>length<sp/>of<sp/>ray<sp/>in<sp/>world<sp/>units&quot;</highlight><highlight class="normal">),collision.<ref refid="class_pathfinding_1_1_graph_collision_1a48083b65ac9a863566dc3e3fff09a5b4" kindref="member" tooltip="Height of capsule or length of ray when checking for collision.">height</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>preEnabled;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.collisionOffset<sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent(</highlight><highlight class="stringliteral">&quot;Offset&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Offset<sp/>upwards<sp/>from<sp/>the<sp/>node.<sp/>Can<sp/>be<sp/>used<sp/>so<sp/>obstacles<sp/>can<sp/>be<sp/>used<sp/>as<sp/>ground<sp/>and<sp/>as<sp/>obstacles<sp/>for<sp/>lower<sp/>nodes&quot;</highlight><highlight class="normal">),collision.collisionOffset);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collision.mask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>EditorGUILayout.LayerField<sp/>(&quot;Mask&quot;,Mathf.Clamp<sp/>((int)Mathf.Log<sp/>(collision.mask,2),0,31));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a427e7d78bb1a767d205d60ef36cdf39c" kindref="member" tooltip="Layer mask to use for collision check.">mask</ref><sp/>=<sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.LayerMaskField<sp/>(</highlight><highlight class="stringliteral">&quot;Mask&quot;</highlight><highlight class="normal">,collision.<ref refid="class_pathfinding_1_1_graph_collision_1a427e7d78bb1a767d205d60ef36cdf39c" kindref="member" tooltip="Layer mask to use for collision check.">mask</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Space<sp/>(2);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>preEnabledRoot;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1ab35aba2fc7d8091c96eedf9f416ad06e" kindref="member" tooltip="Toggle height check.">heightCheck</ref><sp/>=<sp/><ref refid="class_graph_editor_1acd00495fe993f6447e0cfb55c76e8e0e" kindref="member" tooltip="Draws a toggle with a bold label to the right.">ToggleGroup</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Height<sp/>testing&quot;</highlight><highlight class="normal">,collision.<ref refid="class_pathfinding_1_1_graph_collision_1ab35aba2fc7d8091c96eedf9f416ad06e" kindref="member" tooltip="Toggle height check.">heightCheck</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1ab35aba2fc7d8091c96eedf9f416ad06e" kindref="member" tooltip="Toggle height check.">heightCheck</ref><sp/>&amp;&amp;<sp/>GUI.enabled;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*GUILayout.BeginHorizontal<sp/>();</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.Label<sp/>(&quot;Height<sp/>testing&quot;,boxHeader);</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.heightCheck<sp/>=<sp/>GUILayout.Toggle<sp/>(collision.heightCheck,&quot;&quot;);</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>collision.heightCheck;</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUILayout.EndHorizontal<sp/>();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1aa0fb02ce79e98cd3e4e3ce9d657ecab6" kindref="member" tooltip="The height to check from when checking height.">fromHeight</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Ray<sp/>length&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;The<sp/>height<sp/>from<sp/>which<sp/>to<sp/>check<sp/>for<sp/>ground&quot;</highlight><highlight class="normal">),collision.<ref refid="class_pathfinding_1_1_graph_collision_1aa0fb02ce79e98cd3e4e3ce9d657ecab6" kindref="member" tooltip="The height to check from when checking height.">fromHeight</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1ae9b18d4ebda86d3a65bf8533f8822c15" kindref="member" tooltip="Layer mask to use for height check.">heightMask</ref><sp/>=<sp/><ref refid="class_editor_g_u_i_layoutx" kindref="compound" tooltip="Handles fading effects and also some custom GUI functions such as LayerMaskField.">EditorGUILayoutx</ref>.LayerMaskField<sp/>(</highlight><highlight class="stringliteral">&quot;Mask&quot;</highlight><highlight class="normal">,collision.<ref refid="class_pathfinding_1_1_graph_collision_1ae9b18d4ebda86d3a65bf8533f8822c15" kindref="member" tooltip="Layer mask to use for height check.">heightMask</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//collision.heightMask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>EditorGUILayout.LayerField<sp/>(&quot;Mask&quot;,Mathf.Clamp<sp/>((int)Mathf.Log<sp/>(collision.heightMask,2),0,31));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a264d5f661a491686d8841cd329815849" kindref="member" tooltip="Toggles thick raycast.">thickRaycast</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Thick<sp/>Raycast&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>a<sp/>thick<sp/>line<sp/>instead<sp/>of<sp/>a<sp/>thin<sp/>line&quot;</highlight><highlight class="normal">),collision.<ref refid="class_pathfinding_1_1_graph_collision_1a264d5f661a491686d8841cd329815849" kindref="member" tooltip="Toggles thick raycast.">thickRaycast</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editor.GUILayoutx.BeginFadeArea<sp/>(collision.<ref refid="class_pathfinding_1_1_graph_collision_1a264d5f661a491686d8841cd329815849" kindref="member" tooltip="Toggles thick raycast.">thickRaycast</ref>,</highlight><highlight class="stringliteral">&quot;thickRaycastDiameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editor.GUILayoutx.DrawID<sp/>(</highlight><highlight class="stringliteral">&quot;thickRaycastDiameter&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel++;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1ac9e988e5537a1b0d9d3ed1aab4cd5619" kindref="member" tooltip="Diameter of the thick raycast in nodes.">thickRaycastDiameter</ref><sp/>=<sp/>EditorGUILayout.FloatField<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Diameter&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Diameter<sp/>of<sp/>the<sp/>thick<sp/>raycast&quot;</highlight><highlight class="normal">),collision.<ref refid="class_pathfinding_1_1_graph_collision_1ac9e988e5537a1b0d9d3ed1aab4cd5619" kindref="member" tooltip="Diameter of the thick raycast in nodes.">thickRaycastDiameter</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorGUI.indentLevel--;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>editor.GUILayoutx.EndFadeArea<sp/>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a265261e50b607ac479d27610217837f2" kindref="member" tooltip="Make nodes unwalkable when no ground was found with the height raycast.">unwalkableWhenNoGround</ref><sp/>=<sp/>EditorGUILayout.Toggle<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GUIContent<sp/>(</highlight><highlight class="stringliteral">&quot;Unwalkable<sp/>when<sp/>no<sp/>ground&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Make<sp/>nodes<sp/>unwalkable<sp/>when<sp/>no<sp/>ground<sp/>was<sp/>found<sp/>with<sp/>the<sp/>height<sp/>raycast.<sp/>If<sp/>height<sp/>raycast<sp/>is<sp/>turned<sp/>off,<sp/>this<sp/>doesn&apos;t<sp/>affect<sp/>anything&quot;</highlight><highlight class="normal">),<sp/>collision.<ref refid="class_pathfinding_1_1_graph_collision_1a265261e50b607ac479d27610217837f2" kindref="member" tooltip="Make nodes unwalkable when no ground was found with the height raycast.">unwalkableWhenNoGround</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GUI.enabled<sp/>=<sp/>preEnabledRoot;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUILayout.Space<sp/>(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//EditorGUILayout.EndVertical<sp/>();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GUILayout.Space<sp/>(5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260" refid="class_graph_editor_1a41d648d818cd79adbf4f7cf401d232a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_editor_1a41d648d818cd79adbf4f7cf401d232a9" kindref="member" tooltip="Draws a wire cube using handles.">DrawWireCube</ref><sp/>(Vector3<sp/>center,<sp/>Vector3<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>*=<sp/>0.5F;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>dx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(size.x,0,0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>dy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(0,size.y,0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>dz<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3<sp/>(0,0,size.z);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p1<sp/>=<sp/>center-dy-dz-dx;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p2<sp/>=<sp/>center-dy-dz+dx;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p3<sp/>=<sp/>center-dy+dz+dx;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p4<sp/>=<sp/>center-dy+dz-dx;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p5<sp/>=<sp/>center+dy-dz-dx;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p6<sp/>=<sp/>center+dy-dz+dx;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p7<sp/>=<sp/>center+dy+dz+dx;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>p8<sp/>=<sp/>center+dy+dz-dx;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Handles.DrawAAPolyLine<sp/>(new<sp/>Vector3[4]<sp/>{p1,p2,p3,p4});</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawAAPolyLine<sp/>(new<sp/>Vector3[4]<sp/>{p5,p6,p7,p8});</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawAAPolyLine<sp/>(new<sp/>Vector3[2]<sp/>{p1,p5});</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawAAPolyLine<sp/>(new<sp/>Vector3[2]<sp/>{p2,p6});</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawAAPolyLine<sp/>(new<sp/>Vector3[2]<sp/>{p3,p7});</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawAAPolyLine<sp/>(new<sp/>Vector3[2]<sp/>{p4,p8});*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p1,p2);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p2,p3);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p3,p4);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p4,p1);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p5,p6);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p6,p7);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p7,p8);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p8,p5);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p1,p5);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p2,p6);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p3,p7);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawLine<sp/>(p4,p8);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Texture2D<sp/>lineTex;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawAALine<sp/>(Vector3<sp/>a,<sp/>Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineTex<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineTex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Texture2D<sp/>(1,4);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineTex.SetPixels<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color[4]<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color.clear,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color.black,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color.black,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color.clear,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineTex.Apply<sp/>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SceneView<sp/>c<sp/>=<sp/>SceneView.lastActiveSceneView;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>tangent1<sp/>=<sp/>Vector3.Cross<sp/>((b-a).normalized,<sp/>c.camera.transform.position-a).normalized;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Handles.DrawAAPolyLine<sp/>(lineTex,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3[3]<sp/>{a,b,b+tangent1*10});</highlight><highlight class="comment">//,b+tangent1,a+tangent1});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/aron/Unity/AstarPathfindingGIT/Assets/AstarPathfindingProject/Editor/GraphEditors/GraphEditor.cs"/>
  </compounddef>
</doxygen>
